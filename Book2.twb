<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.24.0112.1233                               -->
<workbook original-version='18.1' source-build='2023.3.2 (20233.24.0112.1233)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <ParameterAction />
    <_.fcp.ParameterActionClearSelection.true...ParameterActionClearSelection />
    <_.fcp.PatternedLineMarks.true...PatternedLineMarks />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='National Lockdown Start' datatype='datetime' default-format='*m/d/yyyy' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2020-03-23 00:00:00#'>
        <calculation class='tableau' formula='#2020-03-23 00:00:00#' />
      </column>
      <column caption='Vaccination Rollout Start' datatype='datetime' default-format='*m/d/yyyy' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='#2020-12-08 00:00:00#'>
        <calculation class='tableau' formula='#2020-12-08 00:00:00#' />
      </column>
      <column caption='Date Range' datatype='date' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='#2024-05-04#'>
        <calculation class='tableau' formula='#2024-05-04#' />
      </column>
    </datasource>
    <datasource caption='cleaned_covid_data' inline='true' name='federated.1l502fs06d8sad17191mc0d7wgtl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cleaned_covid_data' name='textscan.1l0vw8p1hkjain194cty31cnczm1'>
            <connection class='textscan' directory='C:/Users/dagbo_b40tnyc/OneDrive/covid' filename='cleaned_covid_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1l0vw8p1hkjain194cty31cnczm1' name='cleaned_covid_data.csv' table='[cleaned_covid_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='date' name='Date_reported' ordinal='0' />
            <column datatype='string' name='Country_code' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='WHO_region' ordinal='3' />
            <column datatype='real' name='New_cases' ordinal='4' />
            <column datatype='integer' name='Cumulative_cases' ordinal='5' />
            <column datatype='real' name='New_deaths' ordinal='6' />
            <column datatype='integer' name='Cumulative_deaths' ordinal='7' />
            <column datatype='integer' name='Year' ordinal='8' />
            <column datatype='string' name='Month' ordinal='9' />
            <column datatype='integer' name='Week' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1l0vw8p1hkjain194cty31cnczm1' name='cleaned_covid_data.csv' table='[cleaned_covid_data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='date' name='Date_reported' ordinal='0' />
              <column datatype='string' name='Country_code' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='WHO_region' ordinal='3' />
              <column datatype='real' name='New_cases' ordinal='4' />
              <column datatype='integer' name='Cumulative_cases' ordinal='5' />
              <column datatype='real' name='New_deaths' ordinal='6' />
              <column datatype='integer' name='Cumulative_deaths' ordinal='7' />
              <column datatype='integer' name='Year' ordinal='8' />
              <column datatype='string' name='Month' ordinal='9' />
              <column datatype='integer' name='Week' ordinal='10' />
            </columns>
          </relation>
          <relation connection='textscan.1l0vw8p1hkjain194cty31cnczm1' name='population_data_cleaned.csv' table='[population_data_cleaned#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='real' name='Population' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Country (population_data_cleaned.csv)]' value='[population_data_cleaned.csv].[Country]' />
          <map key='[Country]' value='[cleaned_covid_data.csv].[Country]' />
          <map key='[Country_code]' value='[cleaned_covid_data.csv].[Country_code]' />
          <map key='[Cumulative_cases]' value='[cleaned_covid_data.csv].[Cumulative_cases]' />
          <map key='[Cumulative_deaths]' value='[cleaned_covid_data.csv].[Cumulative_deaths]' />
          <map key='[Date_reported]' value='[cleaned_covid_data.csv].[Date_reported]' />
          <map key='[Month]' value='[cleaned_covid_data.csv].[Month]' />
          <map key='[New_cases]' value='[cleaned_covid_data.csv].[New_cases]' />
          <map key='[New_deaths]' value='[cleaned_covid_data.csv].[New_deaths]' />
          <map key='[Population]' value='[population_data_cleaned.csv].[Population]' />
          <map key='[WHO_region]' value='[cleaned_covid_data.csv].[WHO_region]' />
          <map key='[Week]' value='[cleaned_covid_data.csv].[Week]' />
          <map key='[Year]' value='[cleaned_covid_data.csv].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[population_data_cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date_reported</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date_reported]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Date_reported</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_code]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Country_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WHO_region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[WHO_region]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>WHO_region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New_cases]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>New_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative_cases]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Cumulative_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New_deaths]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>New_deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative_deaths]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Cumulative_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Week</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Week]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Week</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (population_data_cleaned.csv)]</local-name>
            <parent-name>[population_data_cleaned.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_data_cleaned.csv_1DFFEAA85B614EBAB27257C4E8C7AAB8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[population_data_cleaned.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_data_cleaned.csv_1DFFEAA85B614EBAB27257C4E8C7AAB8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Case fatality ratio' datatype='real' default-format='p0.00%' name='[Calculation_2164824051232415744]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([Cumulative_deaths]) / MAX([Cumulative_cases])' />
      </column>
      <column caption='correlation coefficient' datatype='real' name='[Calculation_3815956272936787984]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR([Cumulative_cases], [Cumulative_deaths])' />
      </column>
      <column caption='Start Date' datatype='date' name='[Calculation_3815956273646161949]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 3]' />
      </column>
      <column caption='End Date' datatype='date' name='[Calculation_3815956273646338078]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 3]' />
      </column>
      <column caption='Date Filter' datatype='boolean' name='[Calculation_3815956273646452767]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Date_reported] &gt;= [Calculation_3815956273646161949] AND [Date_reported] &lt;= [Calculation_3815956273646338078]' />
      </column>
      <column caption='Country (population data cleaned.csv)' datatype='string' name='[Country (population_data_cleaned.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
          <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
          <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
          <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
        </semantic-values>
      </column>
      <column caption='Country code' datatype='string' name='[Country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
      <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
      <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
      <column caption='New cases' datatype='real' name='[New_cases]' role='measure' type='quantitative' />
      <column caption='New deaths' datatype='real' name='[New_deaths]' role='measure' type='quantitative' />
      <column caption='WHO region' datatype='string' name='[WHO_region]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;AFRO&quot;' value='AFRICA' />
          <alias key='&quot;AMRO&quot;' value='AMERICA' />
          <alias key='&quot;EMRO&quot;' value='EASTEARN MEDITTERANEAN' />
          <alias key='&quot;EURO&quot;' value='EUROPE' />
          <alias key='&quot;SEARO&quot;' value='SOUTH EAST ASIA' />
          <alias key='&quot;WPRO&quot;' value='WESTEARN PACIFIC REGION' />
        </aliases>
      </column>
      <column datatype='integer' name='[Week]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='cleaned_covid_data.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='population_data_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[population_data_cleaned.csv_1DFFEAA85B614EBAB27257C4E8C7AAB8]' role='measure' type='quantitative' />
      <column-instance column='[New_cases]' derivation='Avg' name='[avg:New_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New_cases]' derivation='Sum' name='[cum:sum:New_cases:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[New_deaths]' derivation='Sum' name='[cum:sum:New_deaths:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Cumulative_cases]' derivation='Max' name='[max:Cumulative_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cumulative_deaths]' derivation='Max' name='[max:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New_cases]' derivation='Max' name='[max:New_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Date_reported]' derivation='None' name='[none:Date_reported:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[WHO_region]' derivation='None' name='[none:WHO_region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Cumulative_cases]' derivation='Sum' name='[sum:Cumulative_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cumulative_deaths]' derivation='Sum' name='[sum:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New_cases]' derivation='Sum' name='[sum:New_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New_deaths]' derivation='Sum' name='[sum:New_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date_reported]' derivation='Day-Trunc' name='[tdy:Date_reported:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Date_reported]' derivation='Year-Trunc' name='[tyr:Date_reported:ok]' pivot='key' type='ordinal' />
      <column-instance column='[New_cases]' derivation='Sum' name='[win:sum:New_cases:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,Date reported)' hidden='true' name='[Action (Country,Date reported)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[Date_reported]' />
        </groupfilter>
      </group>
      <group caption='Action (DAY(Date reported))' hidden='true' name='[Action (DAY(Date reported))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tdy:Date_reported:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Date reported)' hidden='true' name='[Action (Date reported)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Date_reported]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date reported))' hidden='true' name='[Action (YEAR(Date reported))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tyr:Date_reported:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Country,Date reported)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country:nk]' />
          <groupfilter function='level-members' level='[none:Date_reported:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:WHO_region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;AFRO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;OTHER&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;EURO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WPRO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EMRO&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;SEARO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AMRO&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:Cumulative_cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[cum:sum:New_deaths:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[avg:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[cum:sum:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[max:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[win:sum:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:Cumulative_deaths:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:WHO_region:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;OTHER&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;AFRO&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;SEARO&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;EMRO&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;AMRO&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;EURO&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;WPRO&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ickiribati&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Türkiye&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Netherlands (Kingdom of the)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bonaire, Saint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Icvanuatu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fesco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Diamond&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chefoo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;occupied Palestinian territory, including east Jerusalem&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Barthélemy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands (Malvinas)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Date Range' datatype='date' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='#2024-05-04#'>
          <calculation class='tableau' formula='#2024-05-04#' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cleaned_covid_data.csv' id='cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E'>
            <properties context=''>
              <relation connection='textscan.1l0vw8p1hkjain194cty31cnczm1' name='cleaned_covid_data.csv' table='[cleaned_covid_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='date' name='Date_reported' ordinal='0' />
                  <column datatype='string' name='Country_code' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='WHO_region' ordinal='3' />
                  <column datatype='real' name='New_cases' ordinal='4' />
                  <column datatype='integer' name='Cumulative_cases' ordinal='5' />
                  <column datatype='real' name='New_deaths' ordinal='6' />
                  <column datatype='integer' name='Cumulative_deaths' ordinal='7' />
                  <column datatype='integer' name='Year' ordinal='8' />
                  <column datatype='string' name='Month' ordinal='9' />
                  <column datatype='integer' name='Week' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='population_data_cleaned.csv' id='population_data_cleaned.csv_1DFFEAA85B614EBAB27257C4E8C7AAB8'>
            <properties context=''>
              <relation connection='textscan.1l0vw8p1hkjain194cty31cnczm1' name='population_data_cleaned.csv' table='[population_data_cleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='real' name='Population' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[Country (population_data_cleaned.csv)]' />
            </expression>
            <first-end-point object-id='cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E' />
            <second-end-point object-id='population_data_cleaned.csv_1DFFEAA85B614EBAB27257C4E8C7AAB8' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='cleaned_covid_data (2)' inline='true' name='federated.1l502fs06d8sad17191mc0d7wgtl (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cleaned_covid_data' name='textscan.1l0vw8p1hkjain194cty31cnczm1 (copy)'>
            <connection class='textscan' directory='C:/Users/dagbo_b40tnyc/OneDrive/covid' filename='cleaned_covid_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1l0vw8p1hkjain194cty31cnczm1 (copy)' name='cleaned_covid_data.csv' table='[cleaned_covid_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='date' name='Date_reported' ordinal='0' />
            <column datatype='string' name='Country_code' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='WHO_region' ordinal='3' />
            <column datatype='real' name='New_cases' ordinal='4' />
            <column datatype='integer' name='Cumulative_cases' ordinal='5' />
            <column datatype='real' name='New_deaths' ordinal='6' />
            <column datatype='integer' name='Cumulative_deaths' ordinal='7' />
            <column datatype='integer' name='Year' ordinal='8' />
            <column datatype='string' name='Month' ordinal='9' />
            <column datatype='integer' name='Week' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1l0vw8p1hkjain194cty31cnczm1 (copy)' name='cleaned_covid_data.csv' table='[cleaned_covid_data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='date' name='Date_reported' ordinal='0' />
              <column datatype='string' name='Country_code' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='WHO_region' ordinal='3' />
              <column datatype='real' name='New_cases' ordinal='4' />
              <column datatype='integer' name='Cumulative_cases' ordinal='5' />
              <column datatype='real' name='New_deaths' ordinal='6' />
              <column datatype='integer' name='Cumulative_deaths' ordinal='7' />
              <column datatype='integer' name='Year' ordinal='8' />
              <column datatype='string' name='Month' ordinal='9' />
              <column datatype='integer' name='Week' ordinal='10' />
            </columns>
          </relation>
          <relation connection='textscan.1l0vw8p1hkjain194cty31cnczm1 (copy)' name='population_data_cleaned.csv' table='[population_data_cleaned#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='real' name='Population' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Country (population_data_cleaned.csv)]' value='[population_data_cleaned.csv].[Country]' />
          <map key='[Country]' value='[cleaned_covid_data.csv].[Country]' />
          <map key='[Country_code]' value='[cleaned_covid_data.csv].[Country_code]' />
          <map key='[Cumulative_cases]' value='[cleaned_covid_data.csv].[Cumulative_cases]' />
          <map key='[Cumulative_deaths]' value='[cleaned_covid_data.csv].[Cumulative_deaths]' />
          <map key='[Date_reported]' value='[cleaned_covid_data.csv].[Date_reported]' />
          <map key='[Month]' value='[cleaned_covid_data.csv].[Month]' />
          <map key='[New_cases]' value='[cleaned_covid_data.csv].[New_cases]' />
          <map key='[New_deaths]' value='[cleaned_covid_data.csv].[New_deaths]' />
          <map key='[Population]' value='[population_data_cleaned.csv].[Population]' />
          <map key='[WHO_region]' value='[cleaned_covid_data.csv].[WHO_region]' />
          <map key='[Week]' value='[cleaned_covid_data.csv].[Week]' />
          <map key='[Year]' value='[cleaned_covid_data.csv].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[population_data_cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date_reported</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date_reported]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Date_reported</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_code]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Country_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WHO_region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[WHO_region]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>WHO_region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New_cases]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>New_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative_cases]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Cumulative_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New_deaths]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>New_deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative_deaths]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Cumulative_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Week</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Week]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Week</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (population_data_cleaned.csv)]</local-name>
            <parent-name>[population_data_cleaned.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_data_cleaned.csv_ADD7BA28F05C481B8731938C0A370247]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[population_data_cleaned.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_data_cleaned.csv_ADD7BA28F05C481B8731938C0A370247]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Case fatality ratio' datatype='real' default-format='p0.00%' name='[Calculation_2164824051232415744]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([Cumulative_deaths]) / MAX([Cumulative_cases])' />
      </column>
      <column caption='7-Day Moving Average(new cases)' datatype='real' name='[Calculation_3815956272906489868]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([New_cases]), -3,3)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='7-Day moving average(New deaths)' datatype='real' name='[Calculation_3815956272908046349]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([New_deaths]), -3,3)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='cases per 100k' datatype='real' name='[Calculation_3815956273447686164]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(MAX([Cumulative_cases]) / SUM(IF [Calculation_3815956274183344163] = [Calculation_3815956274183344163] THEN [Population] END)) * 100000' />
      </column>
      <column caption='Deaths per 100k' datatype='real' name='[Calculation_3815956273448067093]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(MAX([Cumulative_deaths]) / SUM(IF [Calculation_3815956274183344163] = [Calculation_3815956274183344163] THEN [Population] END)) * 100000' />
      </column>
      <column caption='Start Date' datatype='date' name='[Calculation_3815956273647312928]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 3]' />
      </column>
      <column caption='End Date' datatype='date' name='[Calculation_3815956273647460385]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 3]' />
      </column>
      <column caption='Standardized_Country' datatype='string' name='[Calculation_3815956274183344163]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Country]&#13;&#10;  WHEN &quot;United Kingdom of Great Britain and Northern Ireland&quot; THEN &quot;United Kingdom&quot;&#13;&#10;  ELSE [Country]&#13;&#10;END' />
      </column>
      <column caption='Country (population data cleaned.csv)' datatype='string' name='[Country (population_data_cleaned.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country code' datatype='string' name='[Country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='None' datatype='integer' name='[Cumulative cases (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='6' formula='[Cumulative_cases]' peg='0' size='1.47059e+06' />
      </column>
      <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
      <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
      <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
      <column caption='New cases' datatype='real' name='[New_cases]' role='measure' type='quantitative' />
      <column caption='New deaths' datatype='real' name='[New_deaths]' role='measure' type='quantitative' />
      <column datatype='real' name='[Population]' role='measure' type='quantitative' />
      <column caption='WHO region' datatype='string' name='[WHO_region]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;AFRO&quot;' value='AFRICA' />
          <alias key='&quot;AMRO&quot;' value='AMERICA' />
          <alias key='&quot;EMRO&quot;' value='EASTEARN MEDITTERANEAN' />
          <alias key='&quot;EURO&quot;' value='EUROPE' />
          <alias key='&quot;SEARO&quot;' value='SOUTH EAST ASIA' />
          <alias key='&quot;WPRO&quot;' value='WESTEARN PACIFIC REGION' />
        </aliases>
      </column>
      <column datatype='integer' name='[Week]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='cleaned_covid_data.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='population_data_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[population_data_cleaned.csv_ADD7BA28F05C481B8731938C0A370247]' role='measure' type='quantitative' />
      <column-instance column='[New_cases]' derivation='Avg' name='[avg:New_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cumulative_cases]' derivation='Max' name='[cum:max:Cumulative_cases:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[New_cases]' derivation='Sum' name='[cum:sum:New_cases:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[New_deaths]' derivation='Sum' name='[cum:sum:New_deaths:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Cumulative_cases]' derivation='Max' name='[diff:max:Cumulative_cases:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Cumulative_cases]' derivation='Max' name='[max:Cumulative_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cumulative_deaths]' derivation='Max' name='[max:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New_cases]' derivation='Max' name='[max:New_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New_deaths]' derivation='Max' name='[max:New_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[WHO_region]' derivation='None' name='[none:WHO_region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Cumulative_cases]' derivation='Sum' name='[sum:Cumulative_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cumulative_deaths]' derivation='Sum' name='[sum:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New_cases]' derivation='Sum' name='[sum:New_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New_deaths]' derivation='Sum' name='[sum:New_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date_reported]' derivation='Day-Trunc' name='[tdy:Date_reported:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Date_reported]' derivation='Year-Trunc' name='[tyr:Date_reported:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_3815956272906489868]' derivation='User' name='[usr:Calculation_3815956272906489868:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_3815956272908046349]' derivation='User' name='[usr:Calculation_3815956272908046349:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[New_cases]' derivation='Sum' name='[win:sum:New_cases:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[Date_reported]' derivation='Year' name='[yr:Date_reported:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,Date reported)' hidden='true' name='[Action (Country,Date reported)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[Date_reported]' />
        </groupfilter>
      </group>
      <group caption='Action (DAY(Date reported))' hidden='true' name='[Action (DAY(Date reported))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tdy:Date_reported:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Date reported)' hidden='true' name='[Action (Date reported)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Date_reported]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date reported))' hidden='true' name='[Action (YEAR(Date reported))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tyr:Date_reported:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='1000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:WHO_region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;AFRO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;OTHER&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;EURO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WPRO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EMRO&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;SEARO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AMRO&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:WHO_region:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;OTHER&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;AFRO&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;SEARO&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;EMRO&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;AMRO&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;EURO&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;WPRO&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ickiribati&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Türkiye&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Netherlands (Kingdom of the)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bonaire, Saint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Icvanuatu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fesco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Diamond&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chefoo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;occupied Palestinian territory, including east Jerusalem&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Barthélemy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands (Malvinas)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[cum:max:Cumulative_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[diff:max:Cumulative_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:Cumulative_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:Population:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[cum:sum:New_deaths:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[avg:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[cum:sum:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:New_deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272908046349:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[win:sum:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:Cumulative_deaths:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Date_reported:ok]' palette='tableau10_10_0' type='palette'>
            <map to='#e15759'>
              <bucket>2020</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2021</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2022</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2023</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2024</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Date Range' datatype='date' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='#2024-05-04#'>
          <calculation class='tableau' formula='#2024-05-04#' />
        </column>
      </datasource-dependencies>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{0212b8bb-e692-4b3d-af67-8a840e6aa895}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_cases:qk]' />
            <field name='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_deaths:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>2</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cleaned_covid_data.csv' id='cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E'>
            <properties context=''>
              <relation connection='textscan.1l0vw8p1hkjain194cty31cnczm1 (copy)' name='cleaned_covid_data.csv' table='[cleaned_covid_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='date' name='Date_reported' ordinal='0' />
                  <column datatype='string' name='Country_code' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='WHO_region' ordinal='3' />
                  <column datatype='real' name='New_cases' ordinal='4' />
                  <column datatype='integer' name='Cumulative_cases' ordinal='5' />
                  <column datatype='real' name='New_deaths' ordinal='6' />
                  <column datatype='integer' name='Cumulative_deaths' ordinal='7' />
                  <column datatype='integer' name='Year' ordinal='8' />
                  <column datatype='string' name='Month' ordinal='9' />
                  <column datatype='integer' name='Week' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='population_data_cleaned.csv' id='population_data_cleaned.csv_ADD7BA28F05C481B8731938C0A370247'>
            <properties context=''>
              <relation connection='textscan.1l0vw8p1hkjain194cty31cnczm1 (copy)' name='population_data_cleaned.csv' table='[population_data_cleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='real' name='Population' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[Country (population_data_cleaned.csv)]' />
            </expression>
            <first-end-point object-id='cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E' />
            <second-end-point object-id='population_data_cleaned.csv_ADD7BA28F05C481B8731938C0A370247' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1_FC951EB355624705A115B103FEA49B09]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='GLOBAL DASHBOARD' type='sheet'>
        <exclude-sheet name='BAN' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='GLOBAL DASHBOARD' />
      </command>
    </action>
    <action caption='Filter2' name='[Action2_1D3A9F372C4D4C7F8FBDD597CE447FBB]'>
      <source dashboard='UK-DASHBOARD' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='UK-DASHBOARD' />
      </command>
    </action>
    <edit-parameter-action caption='&lt;cleaned_covid_data.Date reported&gt;' name='[Action3_7EE4C66E57BD4C70B0848ABC2784DF43]'>
      <activation type='on-select' />
      <source dashboard='UK-DASHBOARD' type='sheet' />
      <_.fcp.ParameterActionClearSelection.true...clear-option type='do-nothing' value='d:2024-05-05' />
      <params>
        <param name='target-parameter' value='[Parameters].[Parameter 3]' />
      </params>
    </edit-parameter-action>
  </actions>
  <worksheets>
    <worksheet name='BAN'>
      <layout-options>
        <title>
          <formatted-text>
            <run>BAN - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
              </semantic-values>
            </column>
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column-instance column='[Date_reported]' derivation='None' name='[none:Date_reported:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Cumulative_cases]' derivation='Sum' name='[sum:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date_reported]' derivation='Year-Trunc' name='[tyr:Date_reported:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Country,Date reported)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Date_reported]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Date reported)]'>
            <groupfilter function='level-members' level='[Date_reported]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (YEAR(Date reported))]'>
            <groupfilter function='level-members' level='[tyr:Date_reported:ok]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Country)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Country,Date reported)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Date reported)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (YEAR(Date reported))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#e6ecf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:Cumulative_cases:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#00007f' fontsize='12'>CUMULATIVE CASES</run>
                <run>Æ&#10;</run>
                <run fontcolor='#f28e2b' fontsize='18'><![CDATA[<[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:Cumulative_cases:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Date_reported:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{0498FF4B-1C62-4A2A-A4CD-887E3D769B1C}' />
    </worksheet>
    <worksheet name='Bi variate'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data (2)' name='federated.1l502fs06d8sad17191mc0d7wgtl (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl (copy)'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Cumulative_cases]' derivation='Max' name='[max:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cumulative_deaths]' derivation='Max' name='[max:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_deaths:qk]' value='n#,##0,.00K;-#,##0,.00K' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_deaths:qk]</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_cases:qk]</cols>
      </table>
      <simple-id uuid='{DB409AEC-23C0-45B1-9FF2-CA9C51CDF873}' />
    </worksheet>
    <worksheet name='COVID-19 Daily New Cases and Deaths in the United Kingdom'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#00007f' fontname='Benton Sans Book' fontsize='20'>UK COVID-19 DAILY NEW CASES AND DEATHS</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data (2)' name='federated.1l502fs06d8sad17191mc0d7wgtl (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='National Lockdown Start' datatype='datetime' default-format='*m/d/yyyy' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2020-03-23 00:00:00#'>
              <calculation class='tableau' formula='#2020-03-23 00:00:00#' />
            </column>
            <column caption='Vaccination Rollout Start' datatype='datetime' default-format='*m/d/yyyy' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='#2020-12-08 00:00:00#'>
              <calculation class='tableau' formula='#2020-12-08 00:00:00#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl (copy)'>
            <column caption='7-Day Moving Average(new cases)' datatype='real' name='[Calculation_3815956272906489868]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([New_cases]), -3,3)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='7-Day moving average(New deaths)' datatype='real' name='[Calculation_3815956272908046349]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([New_deaths]), -3,3)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column caption='New cases' datatype='real' name='[New_cases]' role='measure' type='quantitative' />
            <column caption='New deaths' datatype='real' name='[New_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[New_cases]' derivation='Sum' name='[sum:New_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New_deaths]' derivation='Sum' name='[sum:New_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date_reported]' derivation='Day-Trunc' name='[tdy:Date_reported:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3815956272906489868]' derivation='User' name='[usr:Calculation_3815956272906489868:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_3815956272908046349]' derivation='User' name='[usr:Calculation_3815956272908046349:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom of Great Britain and Northern Ireland&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272908046349:qk]' scope='rows' value='false' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-width' value='0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6ecf0' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dashed' />
            <format attr='stroke-color' id='refline1' value='#59a14f4b' />
            <format attr='stroke-size' value='1' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dotted' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='stroke-size' id='annotation_6' value='1' />
            <format attr='line-visibility' id='annotation_6' value='on' />
            <format attr='line-pattern-only' id='annotation_6' value='solid' />
            <format attr='body-type' id='annotation_6' value='box' />
            <format attr='fill-color' id='annotation_6' value='#e6e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[:Measure Names]' />
              <tooltip column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_cases:qk]' />
              <tooltip column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_deaths:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]' enable-instant-analytics='true' formula='min' id='refline0' label='Lockdown Start' label-type='custom' scope='per-pane' value-column='[Parameters].[Parameter 1]' z-order='1' />
            <reference-line axis-column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]' enable-instant-analytics='true' formula='min' id='refline1' label-type='automatic' scope='per-pane' value-column='[Parameters].[Parameter 2]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[:Measure Names]' />
              <tooltip column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_cases:qk]' />
              <tooltip column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272908046349:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[:Measure Names]' />
              <tooltip column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_cases:qk]' />
              <tooltip column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk] + [federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272908046349:qk])</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]</cols>
        <annotations>
          <annotation class='point' id='5' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='8'>Peak in new cases (July 2022): Possible influence of the Delta variant and easing of lockdown measures</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_cases:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_deaths:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>195623.0</value>
                    <value>679.0</value>
                    <value>#2022-07-10 00:00:00#</value>
                    <value>133380.14285714287</value>
                    <value>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='138' y='-60' />
          </annotation>
          <annotation class='point' id='6' mark-position='1' pullback='12' text-width='163'>
            <formatted-text>
              <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='8'>Peak in new cases (January 2022): Potential impact of the Covid Alpha variant and winter surge.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_cases:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_deaths:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>723565.0</value>
                    <value>1648.0</value>
                    <value>#2022-01-16 00:00:00#</value>
                    <value>898576.42857142852</value>
                    <value>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-185' y='56' />
          </annotation>
          <annotation class='point' id='7' mark-position='1' pullback='12' text-width='141'>
            <formatted-text>
              <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='8'>Peak in new deaths (January 2021): Lagged effect of the surge in cases on mortality rates.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272908046349:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_cases:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_deaths:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272908046349:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>246142.0</value>
                    <value>9723.0</value>
                    <value>#2021-01-24 00:00:00#</value>
                    <value>7237.1428571428569</value>
                    <value>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272908046349:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='241' y='121' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{5417EE42-B3B4-41E9-8C8C-E2E38AC340D6}' />
    </worksheet>
    <worksheet name='CUMULATIVE CASES BAR'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#00007f'>TOP 10 CUMULATIVE CASE</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
              </semantic-values>
            </column>
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date_reported]' derivation='None' name='[none:Date_reported:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Cumulative_cases]' derivation='Sum' name='[sum:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date_reported]' derivation='Year-Trunc' name='[tyr:Date_reported:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Date reported)]'>
            <groupfilter function='level-members' level='[Date_reported]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (YEAR(Date reported))]'>
            <groupfilter function='level-members' level='[tyr:Date_reported:ok]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Cumulative_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Country)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Date reported)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (YEAR(Date reported))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:Cumulative_cases:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6ecf0' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:Cumulative_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='size' value='1' />
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:Cumulative_cases:qk]</cols>
        <pages>
          <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Date_reported:ok]</column>
        </pages>
        <page-trail-options mark-type='all' />
      </table>
      <simple-id uuid='{26375CF3-B2FA-4D2D-81A9-097D1F281BD5}' />
    </worksheet>
    <worksheet name='Case_Fatality_Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Highest CFR</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column caption='Case fatality ratio' datatype='real' default-format='p0.00%' name='[Calculation_2164824051232415744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([Cumulative_deaths]) / MAX([Cumulative_cases])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
              </semantic-values>
            </column>
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date_reported]' derivation='Month-Trunc' name='[tmn:Date_reported:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2164824051232415744]' derivation='User' name='[usr:Calculation_2164824051232415744:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_2164824051232415744]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;North Macedonia&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
              <bucket>&quot;Eswatini&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Diamond&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Czechia&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;French Polynesia&quot;</bucket>
              <bucket>&quot;occupied Palestinian territory, including east Jerusalem&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Guam&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Curaçao&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Aruba&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Türkiye&quot;</bucket>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
              <bucket>&quot;Timor-Leste&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Montserrat&quot;</bucket>
              <bucket>&quot;Gibraltar&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
              <bucket>&quot;Guadeloupe&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Martinique&quot;</bucket>
              <bucket>&quot;Puerto Rico&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Mayotte&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;French Guiana&quot;</bucket>
              <bucket>&quot;Liechtenstein&quot;</bucket>
              <bucket>&quot;American Samoa&quot;</bucket>
              <bucket>&quot;New Caledonia&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
              <bucket>&quot;Viet Nam&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Bonaire, Saint Eustatius and Saba&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Anguilla&quot;</bucket>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
              <bucket>&quot;Isle of Man&quot;</bucket>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Netherlands (Kingdom of the)&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
              <bucket>&quot;Jersey&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Guernsey&quot;</bucket>
              <bucket>&quot;Réunion&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Greenland&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Palau&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Cayman Islands&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Marshall Islands&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;Saint Barthélemy&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Faroe Islands&quot;</bucket>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;Tuvalu&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Cook Islands&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Nauru&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Tokelau&quot;</bucket>
              <bucket>&quot;Saint Helena&quot;</bucket>
              <bucket>&quot;Pitcairn&quot;</bucket>
              <bucket>&quot;Niue&quot;</bucket>
              <bucket>&quot;Icvanuatu&quot;</bucket>
              <bucket>&quot;Ickiribati&quot;</bucket>
              <bucket>&quot;Holy See&quot;</bucket>
              <bucket>&quot;Fesco&quot;</bucket>
              <bucket>&quot;Falkland Islands (Malvinas)&quot;</bucket>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
              <bucket>&quot;Chefoo&quot;</bucket>
              <bucket>&quot;Charo&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]' included-values='in-range' />
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' scope='cols' value='auto' />
            <format attr='display' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' value='true' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='0' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' />
              <text column='[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.0434806346893311' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]</cols>
        <pages>
          <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[tmn:Date_reported:ok]</column>
        </pages>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
      <simple-id uuid='{7F743258-32FD-466A-9802-F82AC56E288E}' />
    </worksheet>
    <worksheet name='Cum case'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative case</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data (2)' name='federated.1l502fs06d8sad17191mc0d7wgtl (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl (copy)'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column-instance column='[Cumulative_cases]' derivation='Sum' name='[sum:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date_reported]' derivation='Day-Trunc' name='[tdy:Date_reported:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date_reported]' derivation='Year-Trunc' name='[tyr:Date_reported:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Country,Date reported)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Date_reported]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Date reported)]'>
            <groupfilter function='level-members' level='[Date_reported]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (YEAR(Date reported))]'>
            <groupfilter function='level-members' level='[tyr:Date_reported:ok]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Country)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Country,Date reported)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Date reported)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (YEAR(Date reported))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:Cumulative_cases:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-style' scope='cols' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6ecf0' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='div-level' scope='rows' value='0' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:Cumulative_cases:qk]</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]</cols>
      </table>
      <simple-id uuid='{4ADDC160-326F-4B73-88CA-6CC5CE301BE3}' />
    </worksheet>
    <worksheet name='Dashboard Title'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
              </semantic-values>
            </column>
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column-instance column='[Date_reported]' derivation='Year-Trunc' name='[tyr:Date_reported:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date_reported]' derivation='Year-Trunc' name='[tyr:Date_reported:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Country,Date reported)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Date_reported]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Date reported)]'>
            <groupfilter function='level-members' level='[Date_reported]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[tyr:Date_reported:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tyr:Date_reported:ok]' />
              <groupfilter from='#2020-01-01 00:00:00#' function='range' level='[tyr:Date_reported:ok]' to='#2023-01-01 00:00:00#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Country)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Country,Date reported)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Date reported)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[tyr:Date_reported:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#151e55' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1l502fs06d8sad17191mc0d7wgtl].[tyr:Date_reported:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontalignment='0' fontcolor='#ffffff' fontsize='20'>Global COVID-19 DashBoard</run>
                <run fontalignment='0'>Æ&#10;</run>
                <run bold='true' fontalignment='0' fontcolor='#ffffff' fontsize='12'>January 5,2020 - January 28,2024</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{342040F3-6F3B-450E-AC3C-0D0C4B9B8997}' />
    </worksheet>
    <worksheet name='Death BAN'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data (2)' name='federated.1l502fs06d8sad17191mc0d7wgtl (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl (copy)'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column-instance column='[Date_reported]' derivation='None' name='[none:Date_reported:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Cumulative_deaths]' derivation='Sum' name='[sum:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date_reported]' derivation='Year-Trunc' name='[tyr:Date_reported:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Country,Date reported)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Date_reported]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (YEAR(Date reported))]'>
            <groupfilter function='level-members' level='[tyr:Date_reported:ok]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Country)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Country,Date reported)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (YEAR(Date reported))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#e6ecf0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='9' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:Cumulative_deaths:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#00007f' fontsize='12'>CUMULATIVE DEATHS</run>
                <run>Æ&#10;</run>
                <run fontcolor='#f28e2b' fontsize='20'><![CDATA[<[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:Cumulative_deaths:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Date_reported:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{B1E8FB4A-D9B9-41C3-A88D-092A3A939812}' />
    </worksheet>
    <worksheet name='Geeographical(New deaths)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#00007f' fontsize='20'>GEOGRAPHICAL CASES AND DEATHS IN THE UK</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
              </semantic-values>
            </column>
            <column caption='New cases' datatype='real' name='[New_cases]' role='measure' type='quantitative' />
            <column caption='New deaths' datatype='real' name='[New_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[New_cases]' derivation='Sum' name='[sum:New_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New_deaths]' derivation='Sum' name='[sum:New_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom of Great Britain and Northern Ireland&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[Latitude (generated)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[Longitude (generated)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_deaths:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' value='false' />
            <format attr='background-color' value='#e6ecf0' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]' />
              <lod column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' />
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_deaths:qk]' />
              <geometry column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l502fs06d8sad17191mc0d7wgtl].[Latitude (generated)]</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F1191C6D-78DA-45DC-AF11-382EF5CAD911}' />
    </worksheet>
    <worksheet name='Geographical'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='10'>Global Distribution of COVID-19 Cases and Deaths: A comprehensive view of the pandemic’s impact across different countries.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data (2)' name='federated.1l502fs06d8sad17191mc0d7wgtl (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl (copy)'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{0212b8bb-e692-4b3d-af67-8a840e6aa895}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column caption='WHO region' datatype='string' name='[WHO_region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFRO&quot;' value='AFRICA' />
                <alias key='&quot;AMRO&quot;' value='AMERICA' />
                <alias key='&quot;EMRO&quot;' value='EASTEARN MEDITTERANEAN' />
                <alias key='&quot;EURO&quot;' value='EUROPE' />
                <alias key='&quot;SEARO&quot;' value='SOUTH EAST ASIA' />
                <alias key='&quot;WPRO&quot;' value='WESTEARN PACIFIC REGION' />
              </aliases>
            </column>
            <column-instance column='[Cumulative_cases]' derivation='Max' name='[max:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cumulative_deaths]' derivation='Max' name='[max:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[WHO_region]' derivation='None' name='[none:WHO_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date_reported]' derivation='Day-Trunc' name='[tdy:Date_reported:qk]' pivot='key' type='quantitative' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
                  <map to='#4e79a7'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#76b7b2'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#f28e2b'>
                    <bucket>2</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:WHO_region:nk]'>
            <groupfilter function='level-members' level='[none:WHO_region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]' included-values='in-range'>
            <min>#2020-01-05 00:00:00#</min>
            <max>#2024-01-28 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:WHO_region:nk]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Latitude (generated)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_cases:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='marine-label-sm-ln' value='true' />
            <format attr='enabled' id='marine-label-sm-pt' value='true' />
            <format attr='enabled' id='marine-label-md-ln' value='true' />
            <format attr='enabled' id='marine-label-md-pt' value='true' />
            <format attr='enabled' id='marine-label-lg-ln' value='true' />
            <format attr='enabled' id='marine-label-lg-pt' value='true' />
            <format attr='enabled' id='water-label' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_deaths:qk]' />
              <lod column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]' />
              <lod column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_cases:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:AdhocCluster:1:ok] * [federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Latitude (generated)])</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{AF980491-100B-46FC-932C-6511AE62103E}' />
    </worksheet>
    <worksheet name='Global daily case'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
              </semantic-values>
            </column>
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column caption='New cases' datatype='real' name='[New_cases]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[New_cases]' derivation='Sum' name='[sum:New_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date_reported]' derivation='Day-Trunc' name='[tdy:Date_reported:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='line-interpolation' value='step' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.7911050319671631' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.4172928333282471' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='line-interpolation' value='step' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk] + [federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk])</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl].[tdy:Date_reported:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>The hightest recorded daily case </run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Day of Date reported: </run>
              <run bold='true'><![CDATA[<[federated.1l502fs06d8sad17191mc0d7wgtl].[tdy:Date_reported:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New cases: </run>
              <run bold='true'><![CDATA[<[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor y-index='1'>
                      <x-fields y-index='1'>
                        <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[tdy:Date_reported:qk]</field>
                      </x-fields>
                      <y-fields y-index='1'>
                        <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[tdy:Date_reported:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>44236227.0</value>
                    <value>#2022-12-25 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
      <simple-id uuid='{503B1493-F866-4CFE-9D96-4B93DF44E10B}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#00007f'>CUMULATIVE CASES AND DEATHS</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontsize='9'>Select a Country to see more details</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
              </semantic-values>
            </column>
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column-instance column='[Cumulative_cases]' derivation='Max' name='[max:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cumulative_deaths]' derivation='Max' name='[max:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date_reported]' derivation='Year-Trunc' name='[tyr:Date_reported:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Country,Date reported)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Date_reported]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Date reported)]'>
            <groupfilter function='level-members' level='[Date_reported]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (YEAR(Date reported))]'>
            <groupfilter function='level-members' level='[tyr:Date_reported:ok]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[Longitude (generated)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Country,Date reported)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Date reported)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (YEAR(Date reported))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' />
              <size column='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]' />
              <tooltip column='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.4832596778869629' />
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l502fs06d8sad17191mc0d7wgtl].[Latitude (generated)]</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{80B952C1-2D39-498C-A529-72AC5DD78668}' />
    </worksheet>
    <worksheet name='Regional Comparison'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Comparison of cumulative COVID-19 cases and deaths across the different WHO regions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column caption='WHO region' datatype='string' name='[WHO_region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFRO&quot;' value='AFRICA' />
                <alias key='&quot;AMRO&quot;' value='AMERICA' />
                <alias key='&quot;EMRO&quot;' value='EASTEARN MEDITTERANEAN' />
                <alias key='&quot;EURO&quot;' value='EUROPE' />
                <alias key='&quot;SEARO&quot;' value='SOUTH EAST ASIA' />
                <alias key='&quot;WPRO&quot;' value='WESTEARN PACIFIC REGION' />
              </aliases>
            </column>
            <column-instance column='[Cumulative_cases]' derivation='Max' name='[max:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cumulative_deaths]' derivation='Max' name='[max:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date_reported]' derivation='None' name='[none:Date_reported:ok]' pivot='key' type='ordinal' />
            <column-instance column='[WHO_region]' derivation='None' name='[none:WHO_region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:WHO_region:nk]' />
              <groupfilter function='member' level='[none:WHO_region:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <natural-sort column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]' direction='ASC' />
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_deaths:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.98850828409194946' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.98850828409194946' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk] + [federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_deaths:qk])</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</cols>
        <pages>
          <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Date_reported:ok]</column>
        </pages>
        <page-trail-options mark-type='all' />
      </table>
      <simple-id uuid='{EDC6A9D2-8168-41F5-87C8-BDD4BC8A99E5}' />
    </worksheet>
    <worksheet name='UK BAN CASES'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
              </semantic-values>
            </column>
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date_reported]' derivation='None' name='[none:Date_reported:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Cumulative_cases]' derivation='Sum' name='[sum:Cumulative_cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom of Great Britain and Northern Ireland&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#e6ecf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:Cumulative_cases:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#00007f' fontsize='20'>CUMULATIVE CASES</run>
                <run>Æ&#10;</run>
                <run fontcolor='#f28e2b' fontsize='15'><![CDATA[<[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:Cumulative_cases:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Date_reported:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{37C1B697-F06D-46D6-9954-1E773C071727}' />
    </worksheet>
    <worksheet name='UK-Daily new case'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Confirmed Cases - 28/01/2024&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
              </semantic-values>
            </column>
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column caption='New cases' datatype='real' name='[New_cases]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date_reported]' derivation='None' name='[none:Date_reported:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New_cases]' derivation='Sum' name='[sum:New_cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom of Great Britain and Northern Ireland&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]' included-values='in-range' />
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='1' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.33983424305915833' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-color' value='#c0c0c0' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk] + [federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk])</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Date_reported:qk]</cols>
        <page-trail-options enabled='true' mark-type='all' />
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='false' fill-type='fill-zero' ignore-last='0' model-type='auto' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{BA404C81-1977-44BC-83F8-D453B51FEEF9}' />
    </worksheet>
    <worksheet name='Uk cum cases and Deaths by year'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data (2)' name='federated.1l502fs06d8sad17191mc0d7wgtl (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl (copy)'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column-instance column='[Cumulative_cases]' derivation='Max' name='[max:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cumulative_deaths]' derivation='Max' name='[max:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date_reported]' derivation='Year' name='[yr:Date_reported:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom of Great Britain and Northern Ireland&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_cases:qk]' scope='rows' value='CASES' />
            <format attr='title' class='0' field='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_deaths:qk]' scope='rows' value='DEATHS' />
            <format attr='stroke-size' value='0' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6ecf0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#e9f3f2' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#c0c0c0' />
            <format attr='border-width' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[yr:Date_reported:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_cases:qk]'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[yr:Date_reported:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_deaths:qk]'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[yr:Date_reported:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_cases:qk] + [federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_deaths:qk])</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[yr:Date_reported:ok]</cols>
      </table>
      <simple-id uuid='{51E5CD13-EA05-4563-AFB0-15D9163D0610}' />
    </worksheet>
    <worksheet name='Univariate'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Univariate&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data (2)' name='federated.1l502fs06d8sad17191mc0d7wgtl (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl (copy)'>
            <column aggregation='None' datatype='integer' name='[Cumulative cases (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='6' formula='[Cumulative_cases]' peg='0' size='1.47059e+06' />
            </column>
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column-instance column='[Cumulative_cases]' derivation='Count' name='[cnt:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cumulative cases (bin)]' derivation='None' name='[none:Cumulative cases (bin):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[cnt:Cumulative_cases:qk]</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Cumulative cases (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Cumulative cases (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{C26A4C9C-8282-4A14-827F-17FBD9A99B87}' />
    </worksheet>
    <worksheet name='comparative'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Comparative Analysis of COVID-19 Cases, Deaths, and Case Fatality Rates</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column caption='Case fatality ratio' datatype='real' default-format='p0.00%' name='[Calculation_2164824051232415744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([Cumulative_deaths]) / MAX([Cumulative_cases])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
              </semantic-values>
            </column>
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column caption='WHO region' datatype='string' name='[WHO_region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFRO&quot;' value='AFRICA' />
                <alias key='&quot;AMRO&quot;' value='AMERICA' />
                <alias key='&quot;EMRO&quot;' value='EASTEARN MEDITTERANEAN' />
                <alias key='&quot;EURO&quot;' value='EUROPE' />
                <alias key='&quot;SEARO&quot;' value='SOUTH EAST ASIA' />
                <alias key='&quot;WPRO&quot;' value='WESTEARN PACIFIC REGION' />
              </aliases>
            </column>
            <column-instance column='[Cumulative_cases]' derivation='Max' name='[max:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cumulative_deaths]' derivation='Max' name='[max:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[WHO_region]' derivation='None' name='[none:WHO_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2164824051232415744]' derivation='User' name='[usr:Calculation_2164824051232415744:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]'>
            <groupfilter function='member' level='[none:WHO_region:nk]' member='&quot;AFRO&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' scope='rows' value='#00000000' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='tick-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]' value='p0%' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#005500' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</rows>
        <cols>([federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk] + ([federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_deaths:qk] + [federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]))</cols>
      </table>
      <simple-id uuid='{EF0E79EB-20CC-4C36-81D7-89B56E6E12C4}' />
    </worksheet>
    <worksheet name='correlation'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Correlation between COVID-19 Cases and Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column caption='correlation coefficient' datatype='real' name='[Calculation_3815956272936787984]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR([Cumulative_cases], [Cumulative_deaths])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
              </semantic-values>
            </column>
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column caption='WHO region' datatype='string' name='[WHO_region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFRO&quot;' value='AFRICA' />
                <alias key='&quot;AMRO&quot;' value='AMERICA' />
                <alias key='&quot;EMRO&quot;' value='EASTEARN MEDITTERANEAN' />
                <alias key='&quot;EURO&quot;' value='EUROPE' />
                <alias key='&quot;SEARO&quot;' value='SOUTH EAST ASIA' />
                <alias key='&quot;WPRO&quot;' value='WESTEARN PACIFIC REGION' />
              </aliases>
            </column>
            <column-instance column='[Cumulative_cases]' derivation='Max' name='[max:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cumulative_deaths]' derivation='Max' name='[max:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[WHO_region]' derivation='None' name='[none:WHO_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3815956272936787984]' derivation='User' name='[usr:Calculation_3815956272936787984:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]'>
            <groupfilter function='level-members' level='[none:WHO_region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='tick-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' value='false' />
            <format attr='background-color' value='#e6ecf0' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='1' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' />
              <lod column='[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_3815956272936787984:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.82359117269515991' />
                <format attr='mark-color' value='#b6992d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_deaths:qk]</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]</cols>
      </table>
      <simple-id uuid='{16817D13-7588-47FA-9917-DA09E2CB9475}' />
    </worksheet>
    <worksheet name='cum deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative Deaths&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data (2)' name='federated.1l502fs06d8sad17191mc0d7wgtl (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl (copy)'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column-instance column='[Date_reported]' derivation='None' name='[none:Date_reported:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cumulative_deaths]' derivation='Sum' name='[sum:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date_reported]' derivation='Year-Trunc' name='[tyr:Date_reported:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Country,Date reported)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Date_reported]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Date reported)]'>
            <groupfilter function='level-members' level='[Date_reported]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (YEAR(Date reported))]'>
            <groupfilter function='level-members' level='[tyr:Date_reported:ok]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Country)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Country,Date reported)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Date reported)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (YEAR(Date reported))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Date_reported:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:Cumulative_deaths:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6ecf0' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
        </panes>
        <rows>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:Cumulative_deaths:qk]</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Date_reported:qk]</cols>
      </table>
      <simple-id uuid='{BBEA3B85-2926-4AFD-889B-0C592D413972}' />
    </worksheet>
    <worksheet name='multi-variate'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data (2)' name='federated.1l502fs06d8sad17191mc0d7wgtl (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl (copy)'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column caption='New cases' datatype='real' name='[New_cases]' role='measure' type='quantitative' />
            <column caption='New deaths' datatype='real' name='[New_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[New_cases]' derivation='Sum' name='[sum:New_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New_deaths]' derivation='Sum' name='[sum:New_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date_reported]' derivation='Year-Trunc' name='[tyr:Date_reported:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_deaths:qk]' />
              <size column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_cases:qk]' />
              <text column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]' />
              <text column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tyr:Date_reported:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{AF6919BF-A10E-4DE2-9840-932CEAF79F88}' />
    </worksheet>
    <worksheet name='uk ban'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
              </semantic-values>
            </column>
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date_reported]' derivation='None' name='[none:Date_reported:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Cumulative_deaths]' derivation='Sum' name='[sum:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom of Great Britain and Northern Ireland&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#e6ecf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:Cumulative_deaths:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#00007f' fontsize='20'>CUMULATIVE DEATHS </run>
                <run>Æ&#10;</run>
                <run fontcolor='#f28e2b' fontsize='15'><![CDATA[<[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:Cumulative_deaths:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Date_reported:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{3727E2D6-B43F-4D0D-AB5F-26319FF79D1D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='GLOBAL DASHBOARD'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e6ecf0' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='text-align' value='left' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='21017' id='11' name='Cum case' show-title='false' w='28369' x='1489' y='26488' />
        <zone h='27831' id='13' name='cum deaths' show-title='false' w='27943' x='1702' y='55662' />
        <zone h='6541' id='15' name='BAN' show-title='false' w='28471' x='1433' y='19869' />
        <zone h='66529' id='20' name='Map' w='42948' x='30042' y='18714' />
        <zone h='69002' id='21' name='CUMULATIVE CASES BAR' w='25089' x='74318' y='14839' />
        <zone h='8079' id='26' name='Dashboard Title' show-title='false' w='96121' x='1763' y='2061' />
        <zone h='7032' id='27' name='Death BAN' show-title='false' w='28280' x='1529' y='47915' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='37' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98620' id='36' param='vert' type-v2='layout-flow' w='98848' x='576' y='690'>
                <zone fixed-size='65' h='8079' id='26' is-fixed='true' name='Dashboard Title' show-title='false' w='96121' x='1763' y='2061'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='69002' id='21' is-fixed='true' name='CUMULATIVE CASES BAR' w='25089' x='74318' y='14839'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='66529' id='20' is-fixed='true' name='Map' w='42948' x='30042' y='18714'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='52' h='6541' id='15' is-fixed='true' name='BAN' show-title='false' w='28471' x='1433' y='19869'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='168' h='21017' id='11' is-fixed='true' name='Cum case' show-title='false' w='28369' x='1489' y='26488'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='57' h='7032' id='27' is-fixed='true' name='Death BAN' show-title='false' w='28280' x='1529' y='47915'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='223' h='27831' id='13' is-fixed='true' name='cum deaths' show-title='false' w='27943' x='1702' y='55662'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2836DAFD-CC0D-42CA-B712-76C3D0D14DB2}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='UK-DASHBOARD'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Benton Sans Book'>Navigating Through the Waves: A Detailed Analysis of COVID-19&apos;s Impact in the UK</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e6ecf0' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='border-width' value='0' />
          <format attr='border-style' value='none' />
          <format attr='background-color' value='#151e55' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#00000000' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='47' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='61' param='horz' type-v2='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='58' param='horz' type-v2='layout-flow' w='100000' x='0' y='0'>
              <zone h='100000' id='52' param='vert' type-v2='layout-flow' w='100000' x='0' y='0'>
                <zone fixed-size='114' h='11708' id='53' is-fixed='true' type-v2='title' w='100000' x='0' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='51772' id='19' name='COVID-19 Daily New Cases and Deaths in the United Kingdom' w='55712' x='42595' y='46661' />
        <zone h='48273' id='45' name='Uk cum cases and Deaths by year' show-title='false' w='33000' x='1733' y='51455' />
        <zone h='32811' id='46' name='Geeographical(New deaths)' w='54090' x='43018' y='12778' />
        <zone h='9364' id='56' name='uk ban' show-title='false' w='30600' x='5600' y='40545'>
          <layout-cache cell-count-h='1' non-cell-size-h='50' type-h='cell' type-w='cell' />
        </zone>
        <zone h='13636' id='59' name='UK BAN CASES' show-title='false' w='30467' x='4733' y='16545'>
          <layout-cache type-h='cell' type-w='cell' />
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Benton Sans Book'>Navigating Through the Waves: A Detailed Analysis of COVID-19&apos;s Impact in the UK</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='67' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98464' id='66' param='vert' type-v2='layout-flow' w='98866' x='567' y='768'>
                <zone fixed-size='114' h='11708' id='53' type-v2='title' w='100000' x='0' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='263' h='32811' id='46' is-fixed='true' name='Geeographical(New deaths)' w='54090' x='43018' y='12778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='109' h='13636' id='59' is-fixed='true' name='UK BAN CASES' show-title='false' w='30467' x='4733' y='16545'>
                  <layout-cache type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='75' h='9364' id='56' is-fixed='true' name='uk ban' show-title='false' w='30600' x='5600' y='40545'>
                  <layout-cache cell-count-h='1' non-cell-size-h='50' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51772' id='19' is-fixed='true' name='COVID-19 Daily New Cases and Deaths in the United Kingdom' w='55712' x='42595' y='46661'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48273' id='45' is-fixed='true' name='Uk cum cases and Deaths by year' show-title='false' w='33000' x='1733' y='51455'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B6F7BDC4-1CC1-4100-8455-CD434238973D}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='Geographical'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:WHO_region:nk]' type='filter' />
            <card param='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_deaths:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[:Measure Names]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[dy:Date_reported:ok]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[md:Date_reported:ok]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:WHO_region:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Date_reported:qk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[tmn:Date_reported:ok]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[tmn:Date_reported:qk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{66520ADA-82E7-48DB-A2EE-6451B512C4C7}' />
    </window>
    <window class='worksheet' name='Univariate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8961400D-39DD-4CD0-9381-B2A1A671B42D}' />
    </window>
    <window class='worksheet' name='Bi variate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{913FD3A7-1F76-46B9-93B1-8B06088F731D}' />
    </window>
    <window class='worksheet' name='multi-variate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_deaths:qk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6857FDB6-889C-4D44-B659-19C69200CDD2}' />
    </window>
    <window class='worksheet' name='Regional Comparison'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='2' param='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2024-01-28#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D19B8547-E473-4F7F-A1D7-491C18FB6D71}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country_code:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{04CBEC74-366B-458D-AE93-E371A8CC4EA7}' />
    </window>
    <window class='worksheet' name='CUMULATIVE CASES BAR'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2024-01-28#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5D676135-12E3-4464-B708-153B21C6CE96}' />
    </window>
    <window class='worksheet' name='BAN'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2024-01-28#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8F6EBAC6-BC72-4F5E-9D67-E7995C890B3A}' />
    </window>
    <window class='worksheet' name='Uk cum cases and Deaths by year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='8' param='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[yr:Date_reported:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Calculation_3815956274183344163:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country (population_data_cleaned.csv):nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:WHO_region:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[yr:Date_reported:ok]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{855C5578-620E-4723-ACF8-1B01C6A27C25}' />
    </window>
    <window class='worksheet' name='UK-Daily new case'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-11-29#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[mn:Date_reported:ok]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Month:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{13529267-3025-4B63-AAD6-4114C2691EA4}' />
    </window>
    <window class='worksheet' name='Case_Fatality_Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' type='color' />
            <card param='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2024-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A2A9DE4C-7AFC-4553-8235-1CEB30A4A3AF}' />
    </window>
    <window class='worksheet' name='Global daily case'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-03-01#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC1FE197-96EB-42EF-9BFE-169A789EBFA8}' />
    </window>
    <window class='worksheet' name='COVID-19 Daily New Cases and Deaths in the United Kingdom'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='1' param='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[:Measure Names]' type='color' />
            <card mode='datetime' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='datetime' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[:Measure Names]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8A9D9D82-961A-4C95-AD09-26ACF6247CD5}' />
    </window>
    <window class='worksheet' name='Cum case'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[md:Date_reported:ok]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Month:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[yr:Date_reported:ok]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D5AC1738-50C3-46C9-A448-AFA1CA16AABC}' />
    </window>
    <window class='worksheet' name='cum deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DACAE7A7-145B-4DC3-85E9-ED5E0AAC92BA}' />
    </window>
    <window class='worksheet' name='Death BAN'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2024-01-28#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Calculation_3815956273647534114:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[yr:Date_reported:ok]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{70A31CFF-0DDF-472B-816F-568F8307B9B4}' />
    </window>
    <window class='worksheet' name='comparative'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7B6A0CD3-A7E1-4B6E-ABF0-6A28DE2CD2B3}' />
    </window>
    <window class='worksheet' name='correlation'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{348B4C57-5507-432D-B268-13EF43082C65}' />
    </window>
    <window class='dashboard' maximized='true' name='UK-DASHBOARD'>
      <viewpoints>
        <viewpoint name='COVID-19 Daily New Cases and Deaths in the United Kingdom'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Geeographical(New deaths)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='UK BAN CASES'>
          <current-page>
            <multibucket>
              <bucket>#2024-01-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Uk cum cases and Deaths by year'>
          <zoom type='entire-view' />
          <highlight field='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[yr:Date_reported:ok]&#10;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Forecast Indicator:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='uk ban'>
          <current-page>
            <multibucket>
              <bucket>#2024-01-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true'>
        <device is-portrait='true' name='Large Desktop Monitor' type='Desktop' />
      </device-preview>
      <simple-id uuid='{B6DD895C-576C-49F4-9B8A-903F24DF2EF9}' />
    </window>
    <window class='dashboard' name='GLOBAL DASHBOARD'>
      <viewpoints>
        <viewpoint name='BAN'>
          <current-page>
            <multibucket>
              <bucket>#2024-01-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='CUMULATIVE CASES BAR'>
          <current-page>
            <multibucket>
              <bucket>#2024-01-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Cum case'>
          <current-page>
            <multibucket>
              <bucket>#2024-01-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Dashboard Title'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Death BAN'>
          <current-page>
            <multibucket>
              <bucket>#2024-01-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <highlight field='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='cum deaths'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='21' />
      <device-preview visible='true' />
      <simple-id uuid='{66FAAA07-A128-4C42-BEC6-AEE630DE840A}' />
    </window>
    <window class='worksheet' name='Dashboard Title'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5545BB37-836D-404B-9464-669C649D2CCC}' />
    </window>
    <window class='worksheet' name='Geeographical(New deaths)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7208CC41-1798-41B6-8DD2-DFCA22BF0B7F}' />
    </window>
    <window class='worksheet' name='uk ban'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2024-01-28#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Date_reported:ok]</field>
                  <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:Cumulative_deaths:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>#2024-01-28#</value>
                <value>232112</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3B67384F-AA58-41BC-95A1-64DDF0FC1A6F}' />
    </window>
    <window class='worksheet' name='UK BAN CASES'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2024-01-28#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CE8EF997-204E-4375-9D6A-F278E6414608}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='BAN' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Bi variate' width='192'>
      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
      QIymAMRo/wd83Px/IXaF/AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='COVID-19 Daily New Cases and Deaths in the United Kingdom' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CUMULATIVE CASES BAR' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Case_Fatality_Rate' width='192'>
      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
      WiVxUFOzj14AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Cum case' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard Title' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Death BAN' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='GLOBAL DASHBOARD' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Geeographical(New deaths)' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Geographical' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Global daily case' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Regional Comparison' width='192'>
      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
      Ft+uziIBiH2XmPon9FLmhbcze0Zw9f5kV2eRcwChNAlAKE0CEEqTAITSJIAqUS6X+fWvf83m
      5ia//e1vCYfDXLlyhXQ6DXzy09Pbt2/z0Ucf8cc//pFSqcTly5cpFAoVnvxgk6tAVWJqagpd
      15mfn+fcuXM8ePCA+vr6nW/wfD5PPB6nVCqxvb3NzMwM5XKZcrlc4ckPNtkDVIl8Ps/KygrZ
      bJaxsTGsVitPnjwhFAqRSqXQNI18Pk+hUMBisZBKpXjy5AkbGxuVHv1Akz1AlXj55ZcZHBzE
      bDYTjUbxeDw0NzdjMpnY2Nigr6+PwcFBdF2nUCjg8XgYGRnBbDZXevQDTQKoEpFMmlK5DPkc
      WC1Es9sYXU50wGm3kQNy5U9/LcRk5Gk6BYBd13FZrRWb+6CTAKrEL+/e3vmmfhGvth/mUn9g
      DyZSg5wDCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKXJ
      b4N+TqFQ4De/+Q1vv/02iUSC8fFx2tra2Nzc5NVXX2VjY4Pp6WlqamqIxWI0NjaytbWFx+Nh
      eHh419+5TOwt2QN8jtFopKmpiUKhwOzsLEajkfv375NIJMjn8zQ1NVFbW0t3dzfxeJxYLIau
      63vyzsVi70kAn5PP5wkGgywsLFAqlZiensbr9aLrOpFIhEKhQDqdplwu43a7yeVyeDwe4vF4
      pUcXX6JYLPKrX/2Kra0tbt68ybvvvsv8/PzzHQKVSiVu377NqVOnuHXrFi0tLWxtbbG9vc2J
      EycIh8PMzs4SCASYmpripZdeYnp6Gr/fT39//16vbVdZLBYuXbqE2WzGbrdz5swZNE0jl8vx
      9OlTDAYDr732GgaDgddffx2LxUKxWCQQCMjhTxUzmUwMDAyg6zp1dXUYjUa6urqeL4BcLkcs
      FiMej+NwOFhaWmJkZIT3338fXddZXl6mXC4TDAbp6+vj5s2bJBIJ6uvr93pdu05PpbBubgKQ
      +4vbjUATUFxa+sxtJeDZt325uRmD3b4/g4oXksvl+Pjjj8nn88zPz9PT08Pc3NzzBVBTU0NN
      TQ0Gg4FsNkuxWOTOnTucPn0ag8FAT08PqVSKtbU1pqamMBgMfPe73+XGjRscO3Zsr9e2qzI3
      bxH7xS+/1rYN//av2A7YHk8VVquV73//+wCcPHly5/bnCiAWi1EqlYhGozgcDrq6uggGg8zM
      zGC32+no6CAUCjE4OMjExATDw8PMzMwwPDy8N6sR4gUl1uOsP3zyV7f/P/g6NvSc4xo8AAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='UK BAN CASES' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='UK-DASHBOARD' width='192'>
      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
      o2MCz2662QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='UK-Daily new case' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Uk cum cases and Deaths by year' width='192'>
      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
      Ufn+P7KJdJ9esnC/AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Univariate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='comparative' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='correlation' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAP5ElEQVR4nO3dyW8baXrH8W9xFyWKFBeJ2mwtlmzLa7c9PV57BgNkcskhCJIA+TNyyyWH
      XHPIP5BDbjkGyCEIBsglSCYzk0Ha1mbtiyVKFCWRorgU16o3B6eRnlF125K5ifV8AB8Ei/JD
      WT+9VW+9z/tqpmkqhLApF8BRJtfuOgBQSqFpWrvLEDbiaHcB31Utl9pdgrCZjgqAEK0mARC2
      JgEQtiYBELbm+tRPVKbB5ru3jMx+ST71nlypTqjPQzZfYjAW5vj4lOhgDOVwUy4WGR0daWbd
      QjTEJ48AmsNJNBKibmqEwgO43G4qdcXo0AD7BxluzU6ST2dYXVogGBlsZs1CNMwnB8A0qiQP
      kpwcH7Gy/A6Xy4Vm1tg/PCYa9rOxtoW3r5epmdscJw+Qp2viOtBM01Sd8iCsUtLx9vjbXYaw
      EbkJFrYmARC2JgEQtiYBELYmARC2JgEQtiYBELYmARC2JgEQtiYBELYmARC2JgEQtiYBELYm
      ARC2JgEQtnaplsiN5TeM3H5KIbmB2RPBWc2TLZSIRQY4SaeJRqOYDjdlXWd8bLSZdQvREJdq
      iYxFBzBMiA7FMY06VRPG4mEOjrLMzE5ROMuy/m6JgehQM2sWomE+eQQwjSrJwxTeeh+FWpaT
      fJVYqJf95AlD0RAba1sMDISZDoU5PTqkd+IGssmh6HTSEilsTW6Cha1JAIStSQCErUkAhK1J
      AIStSQCErUkAhK1JAIStSQCErUkAhK1JAIStSQCErUkAhK1JAIStXSoAtWoFU3040b1cqWLW
      axSKOkqZ5PN5TNPEMExqtVqz6hWioS7VErm98ob47R9xurePiYbHpQEmp7hwe5ycn2UwNQea
      w834aLyJZQvRGJdqiRwcjIEy8fT04fd6wOkmMhCkqNcYig9iVCskEwkCwVAzaxaiYS7VEnma
      KeAxz/BQpeb00O91kMoUmZyIs7O9R3w4Tig+RrmQRfXFpSVSdDxpiRS2JrNAwtYkAMLWJADC
      1iQAwtYkAMLWJADC1iQAwtYkAMLWJADC1iQAwtYkAMLWJADC1iQAwtYkAMLWrhQAPX9OUS9j
      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
    </thumbnail>
    <thumbnail height='192' name='cum deaths' width='192'>
      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
      Pu5wmfwfAo9M5yRzbi4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='multi-variate' width='192'>
      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
      lB7C7Xb5G0BZbG1cIvc2AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='uk ban' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAKt0lEQVR4nO3ae3CddZ3H8ffznHNyTi4n15MLl7YppVe2xUJDqRboFsTpglp2XQS6uyPr
      6giyLLqzoowzzqijo8AyjuMy7uw4W112dqFbZVe71VAES0OxtSWBXmhK2iZpk7Q5OclJzv3y
      84/UMAyK1Gnp2O/n9VfmnOd+nvd5nt+T45XLZYeIUUGAoXjyfG+HyHkR/M0f+3P++dwOkfNC
      Z72YpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDT
      FICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDT
      FICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDT
      FICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDT
      FICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDT
      FICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDT
      FICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDT
      FICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGnB870BFxJXdux6
      /ihdWw/T2FLN7fd20PnUPlbdPI9YW5QTx8bpeXGQm2+/go2P7KCxuZoP370cgN3PH2X7ll4+
      8dB19B04RSFf4urr2ykUSjz5L7u4875reO5/X2PeFc3MWRCbWedgX4L/+s4v+ei9Hcya18i2
      zfvZ+0L/zPtzFzdz422L+dlT+1j/t8t58vFd3HHfSoJBn5e7BijmS/hBj2c3H5iewfP42D+9
      j1hbDQBbnuhh/69OUBEJsnrdfJavno0rO/7ta9tJJjIAXL60lfWn9+NH39tDajLPXfevJJsu
      8K9f/QWFXHFme/7yng72bD/Gmg8tpCFWzVD/OC/vGGDdnUs5sOcEnZv2EwwFuOkvlrBgWes5
      /bxAV4Cz6hc/OcSWJ3r48N3LufK9syiXHN1dA0xN5ACYiKfZt+s4OEfPzkF2P3+UXKaAc44X
      tvTS3xsnly0y2Jfg6KE4AOVimZ3P9OEcHNg7RHwk9aZ1/vzpgwSDPs89fRCAjjVzufPvV3Ko
      Z4TbPn4Vf7p+EempPLufO0qoIkDvKyc5fiSBc46f/verRBsi9PeO0Tanjg0PrGLDP1xLfVPl
      zPJ7Xhpk9br5rLtjKZu+u5vtW3opO+h+cYDb7+lgwwOruOHWBQBkUnleevYIr7w0SOJUmnAk
      yEfv7WDhe9rwfI8ND6yibVYde1/oJz2Znz4mYxle/eVxpiayfPcrz3PLXy1j7fpFjMfT5/zz
      AgVw1jjn6Ny0j7976HrmLopx5apZVNVU/M7pAwGfBVe2cahnhKlkjkDQJ1ofOaN1loplDu4d
      4q77V7LvVycolcrUNlbSNruOUEWAlktraWyunpne8zyuvekydv38CNl0gdGhSS5b3Dzznu+D
      73t4nvem9TS11TB/WSuf+tIaOp/ad3ph4Pmn5wlMT79v9wkWX3UR16ydy57tx/ADPm2z6qiP
      VVEdDXPR7DrCkembjtHhKUYGJxg7mQIcnu+RyxY5dijOxe31dKxpP6Nj8YdSAGeJc5BJFaht
      eOcn8cq1c9n13FH27TrO0msvPeN1Dh5JEKoIUC47QqEAx/sSv3eejjXt9Owc5LXuYeYvbSVU
      EQDgpWf62PhoFz94rIvJiexvnTdaHyGbKYBzZFIFnvjWTjY+2sX2n/QCsGPrYS6/ooW5i2K8
      2Pk6zrnfuhznHD/83h42PtrFlid6cEB1NMwXH7+VIwdH+cKG/2HbDw+c8fH4Q2gMcJb4vkf7
      whh7tvez5kMLcc7hHFTWVHDqxCTtC2OMnUy96Vv+0nmNDA9MkM8WueO+a3j29IdeHQ3T3zuG
      c47UVJ5gyMfzvbesc2fn6+RzJb7/z10U8iV2butj9vymt93OprYaahsq2dnZx+o/mz/z+vs/
      soQP/s17fud8zjn2vNBP+8IYeB7V0TCf+cb7CVeGAMhlixzqHiaXKYAH/b1xJsez1DZUvmVZ
      nufxiYeu55K5DRx8eYj/29hNsVAi1hbl45+/jlvuWsZjD/6MG29b/Jar0dmmAM6iu+5fycOf
      2cqOrb0U8iU+/ZW13PrXV/Lth7bxzOYDDA9M8Nlv3jwzfSDoc3F7PQOHx6hrfONEufqGOWz5
      z1f46j0/JnEqzS0bluGfDuDJx3exbfMBVq+bz8s7Bvjct9bREKtidHiKRz67lY98csXbbqPn
      eSy56iJ+/B/d3P3g6pnXOzft5+DeYTwPPva51TODYIDvP9pFRSRILlPgHx/5AACpyRyPPdhJ
      IOBz+dIW5i1pZsmKi/n0l9cC8O8P76C7a4Drblnwjo7dRDzD1+/fQqythvHRNGvXn/uTH8Ar
      l8tuKJ5kf053Q2dDqVgmPjJFpCpEtD6C53lkUnmSiSx1TZVEKkM450icStPQXEU2XaBYKBOt
      j5AYTVPbECEQ8CkWSoydTL1pOclEhvTU9OCxpjZMPlekobkaz/NwzjF2MkVjy/Q9/9jJFA3N
      1fi+R7FYJpnIzIwHctkiqWRuZtr0ZI7k+Bu3PbG2GoKh6VujiXiaTLpAIOjT1FKNH/BxzjE6
      PEWpWAYgUhmiIhIE56iKhoHpAXGp5KipDZNNFyjkSzNXv8RommhdmGAoQCFfJD1VoK6xklym
      wHg8Q2VNiGhdRAGInGs668U0BSCmaRB8AahIDROZ6scvFZhoXUF14hB+KYfzAkzGlhEd7cZz
      JYoVdaQbpgelfiFNrP+nxGfdSKmilor0CPVDXZy8bD1eOU90tAfPlclWX0IueuaPaP9Y6Apw
      ASiFqki2dJCvbKZ6vJeppitItq4gnB7CL+VINSwi2bKCmvirM/NUJfvAOfzi9OC3cuIIfjED
      ODznmIwtY6J1BbUnd5+nvXp3KIALQKmilsjkMaKj3aTq5xPIT9LY/wzOC1IOVuICIWLH/p90
      /RvP/aea/oRC5Ru/KZq46FrKgemnNOVgBK9couX1p5lsXv6u78+7SQFcAKoSr1E9doCRy/8c
      FwhTCteRuOQGvHKeYD5Ja+8mki1XMxVb+o6W5xeztL6+mfjsm8jWzjnHW39+aQxwAaiJv0o2
      OofoqW4yte1UjR/G+QHKgQh+cfq3NuGp4wRzCQqRJirSI5QDEcKpE+AcyUCYysljhLJxoqM9
      OD9IsaKOqvHDFMINZOvmnu9dPGf0fwBjakd2k2pcRClU8/snNkBXAGOSrW//Uwlr9LUvpikA
      MU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikA
      MU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikA
      MU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICY9mv72mJ0ie+N
      YwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
