<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.24.0112.1233                               -->
<workbook original-version='18.1' source-build='2023.3.2 (20233.24.0112.1233)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.PatternedLineMarks.true...PatternedLineMarks />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='cleaned_covid_data' inline='true' name='federated.1l502fs06d8sad17191mc0d7wgtl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cleaned_covid_data' name='textscan.1l0vw8p1hkjain194cty31cnczm1'>
            <connection class='textscan' directory='C:/Users/dagbo_b40tnyc/OneDrive/covid' filename='cleaned_covid_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1l0vw8p1hkjain194cty31cnczm1' name='cleaned_covid_data.csv' table='[cleaned_covid_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='date' name='Date_reported' ordinal='0' />
            <column datatype='string' name='Country_code' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='WHO_region' ordinal='3' />
            <column datatype='real' name='New_cases' ordinal='4' />
            <column datatype='integer' name='Cumulative_cases' ordinal='5' />
            <column datatype='real' name='New_deaths' ordinal='6' />
            <column datatype='integer' name='Cumulative_deaths' ordinal='7' />
            <column datatype='integer' name='Year' ordinal='8' />
            <column datatype='string' name='Month' ordinal='9' />
            <column datatype='integer' name='Week' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1l0vw8p1hkjain194cty31cnczm1' name='cleaned_covid_data.csv' table='[cleaned_covid_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='date' name='Date_reported' ordinal='0' />
            <column datatype='string' name='Country_code' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='WHO_region' ordinal='3' />
            <column datatype='real' name='New_cases' ordinal='4' />
            <column datatype='integer' name='Cumulative_cases' ordinal='5' />
            <column datatype='real' name='New_deaths' ordinal='6' />
            <column datatype='integer' name='Cumulative_deaths' ordinal='7' />
            <column datatype='integer' name='Year' ordinal='8' />
            <column datatype='string' name='Month' ordinal='9' />
            <column datatype='integer' name='Week' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date_reported</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date_reported]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Date_reported</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_code]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Country_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WHO_region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[WHO_region]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>WHO_region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New_cases]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>New_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative_cases]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Cumulative_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New_deaths]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>New_deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative_deaths]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Cumulative_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Week</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Week]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Week</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Case fatality ratio' datatype='real' default-format='p0.00%' name='[Calculation_2164824051232415744]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([Cumulative_deaths]) / MAX([Cumulative_cases])' />
      </column>
      <column caption='correlation coefficient' datatype='real' name='[Calculation_3815956272936787984]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR([Cumulative_cases], [Cumulative_deaths])' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
          <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
          <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
          <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
        </semantic-values>
      </column>
      <column caption='Country code' datatype='string' name='[Country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
      <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
      <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
      <column caption='New cases' datatype='real' name='[New_cases]' role='measure' type='quantitative' />
      <column caption='New deaths' datatype='real' name='[New_deaths]' role='measure' type='quantitative' />
      <column caption='WHO region' datatype='string' name='[WHO_region]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;AFRO&quot;' value='AFRICA' />
          <alias key='&quot;AMRO&quot;' value='AMERICA' />
          <alias key='&quot;EMRO&quot;' value='EASTEARN MEDITTERANEAN' />
          <alias key='&quot;EURO&quot;' value='EUROPE' />
          <alias key='&quot;SEARO&quot;' value='SOUTH EAST ASIA' />
          <alias key='&quot;WPRO&quot;' value='WESTEARN PACIFIC REGION' />
        </aliases>
      </column>
      <column datatype='integer' name='[Week]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='cleaned_covid_data.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]' role='measure' type='quantitative' />
      <column-instance column='[New_cases]' derivation='Avg' name='[avg:New_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New_cases]' derivation='Sum' name='[cum:sum:New_cases:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[New_deaths]' derivation='Sum' name='[cum:sum:New_deaths:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Cumulative_cases]' derivation='Max' name='[max:Cumulative_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cumulative_deaths]' derivation='Max' name='[max:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New_cases]' derivation='Max' name='[max:New_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Date_reported]' derivation='None' name='[none:Date_reported:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[WHO_region]' derivation='None' name='[none:WHO_region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Cumulative_cases]' derivation='Sum' name='[sum:Cumulative_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cumulative_deaths]' derivation='Sum' name='[sum:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New_cases]' derivation='Sum' name='[sum:New_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New_deaths]' derivation='Sum' name='[sum:New_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New_cases]' derivation='Sum' name='[win:sum:New_cases:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <group hidden='true' name='[Inclusions (Country,Date reported)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country:nk]' />
          <groupfilter function='level-members' level='[none:Date_reported:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:WHO_region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;AFRO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;OTHER&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;EURO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WPRO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EMRO&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;SEARO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AMRO&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:Cumulative_cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[cum:sum:New_deaths:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[avg:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[cum:sum:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[max:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[win:sum:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:Cumulative_deaths:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ickiribati&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TÃ¼rkiye&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Netherlands (Kingdom of the)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bonaire, Saint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RÃ©union&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Icvanuatu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CuraÃ§ao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fesco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Diamond&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CÃ´te d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chefoo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;occupied Palestinian territory, including east Jerusalem&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint BarthÃ©lemy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands (Malvinas)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:WHO_region:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;OTHER&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;AFRO&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;SEARO&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;EMRO&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;AMRO&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;EURO&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;WPRO&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cleaned_covid_data.csv' id='cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E'>
            <properties context=''>
              <relation connection='textscan.1l0vw8p1hkjain194cty31cnczm1' name='cleaned_covid_data.csv' table='[cleaned_covid_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='date' name='Date_reported' ordinal='0' />
                  <column datatype='string' name='Country_code' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='WHO_region' ordinal='3' />
                  <column datatype='real' name='New_cases' ordinal='4' />
                  <column datatype='integer' name='Cumulative_cases' ordinal='5' />
                  <column datatype='real' name='New_deaths' ordinal='6' />
                  <column datatype='integer' name='Cumulative_deaths' ordinal='7' />
                  <column datatype='integer' name='Year' ordinal='8' />
                  <column datatype='string' name='Month' ordinal='9' />
                  <column datatype='integer' name='Week' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='National Lockdown Start' datatype='datetime' default-format='*m/d/yyyy' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2020-03-23 00:00:00#'>
        <calculation class='tableau' formula='#2020-03-23 00:00:00#' />
      </column>
      <column caption='Vaccination Rollout Start' datatype='datetime' default-format='*m/d/yyyy' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='#2020-12-08 00:00:00#'>
        <calculation class='tableau' formula='#2020-12-08 00:00:00#' />
      </column>
    </datasource>
    <datasource caption='cleaned_covid_data (2)' inline='true' name='federated.1l502fs06d8sad17191mc0d7wgtl (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cleaned_covid_data' name='textscan.1l0vw8p1hkjain194cty31cnczm1 (copy)'>
            <connection class='textscan' directory='C:/Users/dagbo_b40tnyc/OneDrive/covid' filename='cleaned_covid_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1l0vw8p1hkjain194cty31cnczm1 (copy)' name='cleaned_covid_data.csv' table='[cleaned_covid_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='date' name='Date_reported' ordinal='0' />
            <column datatype='string' name='Country_code' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='WHO_region' ordinal='3' />
            <column datatype='real' name='New_cases' ordinal='4' />
            <column datatype='integer' name='Cumulative_cases' ordinal='5' />
            <column datatype='real' name='New_deaths' ordinal='6' />
            <column datatype='integer' name='Cumulative_deaths' ordinal='7' />
            <column datatype='integer' name='Year' ordinal='8' />
            <column datatype='string' name='Month' ordinal='9' />
            <column datatype='integer' name='Week' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1l0vw8p1hkjain194cty31cnczm1 (copy)' name='cleaned_covid_data.csv' table='[cleaned_covid_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='date' name='Date_reported' ordinal='0' />
            <column datatype='string' name='Country_code' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='WHO_region' ordinal='3' />
            <column datatype='real' name='New_cases' ordinal='4' />
            <column datatype='integer' name='Cumulative_cases' ordinal='5' />
            <column datatype='real' name='New_deaths' ordinal='6' />
            <column datatype='integer' name='Cumulative_deaths' ordinal='7' />
            <column datatype='integer' name='Year' ordinal='8' />
            <column datatype='string' name='Month' ordinal='9' />
            <column datatype='integer' name='Week' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date_reported</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date_reported]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Date_reported</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_code]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Country_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WHO_region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[WHO_region]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>WHO_region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New_cases]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>New_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative_cases]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Cumulative_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New_deaths]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>New_deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative_deaths]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Cumulative_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Week</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Week]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Week</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Case fatality ratio' datatype='real' default-format='p0.00%' name='[Calculation_2164824051232415744]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([Cumulative_deaths]) / MAX([Cumulative_cases])' />
      </column>
      <column caption='7-Day Moving Average(new cases)' datatype='real' name='[Calculation_3815956272906489868]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([New_cases]), -3,3)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='7-Day moving average(New deaths)' datatype='real' name='[Calculation_3815956272908046349]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([New_deaths]), -3,3)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country code' datatype='string' name='[Country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
      <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
      <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
      <column caption='New cases' datatype='real' name='[New_cases]' role='measure' type='quantitative' />
      <column caption='New deaths' datatype='real' name='[New_deaths]' role='measure' type='quantitative' />
      <column caption='WHO region' datatype='string' name='[WHO_region]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;AFRO&quot;' value='AFRICA' />
          <alias key='&quot;AMRO&quot;' value='AMERICA' />
          <alias key='&quot;EMRO&quot;' value='EASTEARN MEDITTERANEAN' />
          <alias key='&quot;EURO&quot;' value='EUROPE' />
          <alias key='&quot;SEARO&quot;' value='SOUTH EAST ASIA' />
          <alias key='&quot;WPRO&quot;' value='WESTEARN PACIFIC REGION' />
        </aliases>
      </column>
      <column datatype='integer' name='[Week]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='cleaned_covid_data.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]' role='measure' type='quantitative' />
      <column-instance column='[New_cases]' derivation='Avg' name='[avg:New_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New_cases]' derivation='Sum' name='[cum:sum:New_cases:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[New_deaths]' derivation='Sum' name='[cum:sum:New_deaths:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Cumulative_cases]' derivation='Max' name='[max:Cumulative_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cumulative_deaths]' derivation='Max' name='[max:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New_cases]' derivation='Max' name='[max:New_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[WHO_region]' derivation='None' name='[none:WHO_region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Cumulative_cases]' derivation='Sum' name='[sum:Cumulative_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cumulative_deaths]' derivation='Sum' name='[sum:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New_cases]' derivation='Sum' name='[sum:New_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New_deaths]' derivation='Sum' name='[sum:New_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3815956272906489868]' derivation='User' name='[usr:Calculation_3815956272906489868:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_3815956272908046349]' derivation='User' name='[usr:Calculation_3815956272908046349:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[New_cases]' derivation='Sum' name='[win:sum:New_cases:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:WHO_region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;AFRO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;OTHER&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;EURO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WPRO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EMRO&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;SEARO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AMRO&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ickiribati&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TÃ¼rkiye&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Netherlands (Kingdom of the)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bonaire, Saint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RÃ©union&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Icvanuatu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CuraÃ§ao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fesco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Diamond&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CÃ´te d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chefoo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;occupied Palestinian territory, including east Jerusalem&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint BarthÃ©lemy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands (Malvinas)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:WHO_region:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;OTHER&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;AFRO&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;SEARO&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;EMRO&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;AMRO&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;EURO&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;WPRO&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_3815956272899162114:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:Cumulative_cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[cum:sum:New_deaths:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[avg:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[cum:sum:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272908046349:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[win:sum:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:Cumulative_deaths:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{0212b8bb-e692-4b3d-af67-8a840e6aa895}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_cases:qk]' />
            <field name='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_deaths:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>2</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cleaned_covid_data.csv' id='cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E'>
            <properties context=''>
              <relation connection='textscan.1l0vw8p1hkjain194cty31cnczm1 (copy)' name='cleaned_covid_data.csv' table='[cleaned_covid_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='date' name='Date_reported' ordinal='0' />
                  <column datatype='string' name='Country_code' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='WHO_region' ordinal='3' />
                  <column datatype='real' name='New_cases' ordinal='4' />
                  <column datatype='integer' name='Cumulative_cases' ordinal='5' />
                  <column datatype='real' name='New_deaths' ordinal='6' />
                  <column datatype='integer' name='Cumulative_deaths' ordinal='7' />
                  <column datatype='integer' name='Year' ordinal='8' />
                  <column datatype='string' name='Month' ordinal='9' />
                  <column datatype='integer' name='Week' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='BAN'>
      <layout-options>
        <title>
          <formatted-text>
            <run>BAN - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column-instance column='[Date_reported]' derivation='None' name='[none:Date_reported:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Cumulative_cases]' derivation='Sum' name='[sum:Cumulative_cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:Cumulative_cases:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='12'>CUMULATIVE CASES</run>
                <run>Ã&#10;</run>
                <run fontcolor='#f28e2b' fontsize='18'><![CDATA[<[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:Cumulative_cases:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Date_reported:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{0498FF4B-1C62-4A2A-A4CD-887E3D769B1C}' />
    </worksheet>
    <worksheet name='COVID-19 Daily New Cases and Deaths in the United Kingdom'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='11'>COVID-19 Daily New Cases and Deaths in the United Kingdom</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data (2)' name='federated.1l502fs06d8sad17191mc0d7wgtl (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='National Lockdown Start' datatype='datetime' default-format='*m/d/yyyy' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2020-03-23 00:00:00#'>
              <calculation class='tableau' formula='#2020-03-23 00:00:00#' />
            </column>
            <column caption='Vaccination Rollout Start' datatype='datetime' default-format='*m/d/yyyy' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='#2020-12-08 00:00:00#'>
              <calculation class='tableau' formula='#2020-12-08 00:00:00#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl (copy)'>
            <column caption='7-Day Moving Average(new cases)' datatype='real' name='[Calculation_3815956272906489868]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([New_cases]), -3,3)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='7-Day moving average(New deaths)' datatype='real' name='[Calculation_3815956272908046349]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([New_deaths]), -3,3)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column caption='New cases' datatype='real' name='[New_cases]' role='measure' type='quantitative' />
            <column caption='New deaths' datatype='real' name='[New_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[New_cases]' derivation='Sum' name='[sum:New_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New_deaths]' derivation='Sum' name='[sum:New_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date_reported]' derivation='Day-Trunc' name='[tdy:Date_reported:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3815956272906489868]' derivation='User' name='[usr:Calculation_3815956272906489868:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_3815956272908046349]' derivation='User' name='[usr:Calculation_3815956272908046349:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom of Great Britain and Northern Ireland&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-width' value='0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dashed' />
            <format attr='stroke-color' id='refline1' value='#59a14f4b' />
            <format attr='stroke-size' value='1' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dotted' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[:Measure Names]' />
              <tooltip column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_cases:qk]' />
              <tooltip column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_deaths:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]' enable-instant-analytics='true' formula='min' id='refline0' label='Lockdown Start' label-type='custom' scope='per-pane' value-column='[Parameters].[Parameter 1]' z-order='1' />
            <reference-line axis-column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]' enable-instant-analytics='true' formula='min' id='refline1' label-type='automatic' scope='per-pane' value-column='[Parameters].[Parameter 2]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[:Measure Names]' />
              <tooltip column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_cases:qk]' />
              <tooltip column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272908046349:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[:Measure Names]' />
              <tooltip column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_cases:qk]' />
              <tooltip column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk] + [federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272908046349:qk])</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]</cols>
        <annotations>
          <annotation class='point' id='5' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book'>Peak in new cases (July 2022): Possible influence of the Delta variant and easing of lockdown measures</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_cases:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_deaths:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>195623.0</value>
                    <value>679.0</value>
                    <value>#2022-07-10 00:00:00#</value>
                    <value>133380.14285714287</value>
                    <value>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='138' y='-60' />
          </annotation>
          <annotation class='point' id='6' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#000000' fontname='Benton Sans Book'>Peak in new cases (January 2022): Potential impact of the Covid Alpha variant and winter surge.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_cases:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_deaths:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>723565.0</value>
                    <value>1648.0</value>
                    <value>#2022-01-16 00:00:00#</value>
                    <value>898576.42857142852</value>
                    <value>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='7' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book'>Peak in new deaths (January 2021): Lagged effect of the surge in cases on mortality rates.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272908046349:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_cases:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_deaths:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272908046349:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>246142.0</value>
                    <value>9723.0</value>
                    <value>#2021-01-24 00:00:00#</value>
                    <value>7237.1428571428569</value>
                    <value>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272908046349:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='164' y='134' />
          </annotation>
          <annotation class='area' id='8' text-pinx='0.5' text-piny='0.5' text-width-delta='-7'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book'>The 7-day moving average lines smooth out short-term fluctuations and reveal overall trends in the data.</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-03-14 21:11:00.355#'>
                  <node-reference>
                    <axis>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='831434.72227626469'>
                  <node-reference>
                    <axis>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-10-11 18:35:21.656#'>
                  <node-reference>
                    <axis>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='380172.10232073383'>
                  <node-reference>
                    <axis>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.48855' y='0.502128' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{5417EE42-B3B4-41E9-8C8C-E2E38AC340D6}' />
    </worksheet>
    <worksheet name='CUMULATIVE CASES BAR'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative case - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
              </semantic-values>
            </column>
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date_reported]' derivation='None' name='[none:Date_reported:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Cumulative_cases]' derivation='Sum' name='[sum:Cumulative_cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Cumulative_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:Cumulative_cases:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:Cumulative_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-color' value='#f28e2b' />
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:Cumulative_cases:qk]</cols>
        <pages>
          <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Date_reported:ok]</column>
        </pages>
        <page-trail-options mark-type='all' />
      </table>
      <simple-id uuid='{26375CF3-B2FA-4D2D-81A9-097D1F281BD5}' />
    </worksheet>
    <worksheet name='Case_Fatality_Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Highest CFR</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column caption='Case fatality ratio' datatype='real' default-format='p0.00%' name='[Calculation_2164824051232415744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([Cumulative_deaths]) / MAX([Cumulative_cases])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
              </semantic-values>
            </column>
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date_reported]' derivation='Month-Trunc' name='[tmn:Date_reported:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2164824051232415744]' derivation='User' name='[usr:Calculation_2164824051232415744:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_2164824051232415744]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;North Macedonia&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
              <bucket>&quot;Eswatini&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Diamond&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;CÃ´te d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Czechia&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;French Polynesia&quot;</bucket>
              <bucket>&quot;occupied Palestinian territory, including east Jerusalem&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Guam&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;CuraÃ§ao&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Aruba&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;TÃ¼rkiye&quot;</bucket>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
              <bucket>&quot;Timor-Leste&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Montserrat&quot;</bucket>
              <bucket>&quot;Gibraltar&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
              <bucket>&quot;Guadeloupe&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Martinique&quot;</bucket>
              <bucket>&quot;Puerto Rico&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Mayotte&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;French Guiana&quot;</bucket>
              <bucket>&quot;Liechtenstein&quot;</bucket>
              <bucket>&quot;American Samoa&quot;</bucket>
              <bucket>&quot;New Caledonia&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
              <bucket>&quot;Viet Nam&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Bonaire, Saint Eustatius and Saba&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Anguilla&quot;</bucket>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
              <bucket>&quot;Isle of Man&quot;</bucket>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Netherlands (Kingdom of the)&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
              <bucket>&quot;Jersey&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Guernsey&quot;</bucket>
              <bucket>&quot;RÃ©union&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Greenland&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Palau&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Cayman Islands&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Marshall Islands&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;Saint BarthÃ©lemy&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Faroe Islands&quot;</bucket>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;Tuvalu&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Cook Islands&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Nauru&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Tokelau&quot;</bucket>
              <bucket>&quot;Saint Helena&quot;</bucket>
              <bucket>&quot;Pitcairn&quot;</bucket>
              <bucket>&quot;Niue&quot;</bucket>
              <bucket>&quot;Icvanuatu&quot;</bucket>
              <bucket>&quot;Ickiribati&quot;</bucket>
              <bucket>&quot;Holy See&quot;</bucket>
              <bucket>&quot;Fesco&quot;</bucket>
              <bucket>&quot;Falkland Islands (Malvinas)&quot;</bucket>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
              <bucket>&quot;Chefoo&quot;</bucket>
              <bucket>&quot;Charo&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]' included-values='in-range' />
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' scope='cols' value='auto' />
            <format attr='display' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' value='true' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='0' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' />
              <text column='[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.0434806346893311' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]</cols>
        <pages>
          <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[tmn:Date_reported:ok]</column>
        </pages>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
      <simple-id uuid='{7F743258-32FD-466A-9802-F82AC56E288E}' />
    </worksheet>
    <worksheet name='Distribution of New cases in the analyzed mark of 3 July 2022'>
      <layout-options export-color-legend='false' export-map-legend='false' export-no-caption='true' export-no-title='true' export-shape-legend='false' export-size-legend='false'>
        <title>
          <formatted-text>
            <run>Distribution of New cases in the analyzed mark of 3 July 2022</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>This chart shows all records of New cases for 3 July 2022. The extreme values are highlighted.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data (2)' name='federated.1l502fs06d8sad17191mc0d7wgtl (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='' />
          </mapsources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl (copy)'>
            <column caption='Extreme value' datatype='boolean' name='[Calculation_3815956272899162114]' role='dimension' type='nominal' user:unnamed='Distribution of New cases in the analyzed mark of 3 July 2022'>
              <calculation class='tableau' formula='// Extreme value &#10;IF [New_cases] &gt; 320459.0&#10;THEN TRUE&#10;ELSE FALSE&#10;END' />
              <aliases>
                <alias key='false' value='Other' />
                <alias key='true' value='Extreme' />
              </aliases>
            </column>
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column caption='New cases' datatype='real' name='[New_cases]' role='measure' type='quantitative' />
            <column-instance column='[New_cases]' derivation='Count' name='[cnt:New_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3815956272899162114]' derivation='None' name='[none:Calculation_3815956272899162114:nk]' pivot='key' type='nominal' />
            <column-instance column='[New_cases]' derivation='None' name='[none:New_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date_reported]' derivation='Day-Trunc' name='[tdy:Date_reported:ok]' pivot='key' type='ordinal' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:Calculation_3815956272899162114:nk]' type='palette'>
                  <map to='#4e79a7'>
                    <bucket>true</bucket>
                  </map>
                  <map to='#bab0ac'>
                    <bucket>false</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:ok]'>
            <groupfilter function='member' level='[tdy:Date_reported:ok]' member='#2022-07-03 00:00:00#' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='160' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#666666' />
          </style-rule>
          <style-rule element='title'>
            <format attr='color' value='#333333' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='color' value='#333333' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <tooltip column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[cnt:New_cases:qk]' />
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Calculation_3815956272899162114:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:New_cases:qk]' enable-instant-analytics='false' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:New_cases:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.40000000596046448' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:New_cases:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontalignment='0' fontsize='8'>These records change the aggregated value from 2,232,001 to 5,282,069.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:New_cases:qk]</field>
                      </x-fields>
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[cnt:New_cases:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Calculation_3815956272899162114:nk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:New_cases:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>1</value>
                    <value>true</value>
                    <value>773772.0</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-120' y='-140' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{60656085-069E-40CC-803E-0E554619C478}' />
    </worksheet>
    <worksheet name='Geographical'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Global Distribution of COVID-19 Cases and Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data (2)' name='federated.1l502fs06d8sad17191mc0d7wgtl (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl (copy)'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{0212b8bb-e692-4b3d-af67-8a840e6aa895}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column caption='WHO region' datatype='string' name='[WHO_region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFRO&quot;' value='AFRICA' />
                <alias key='&quot;AMRO&quot;' value='AMERICA' />
                <alias key='&quot;EMRO&quot;' value='EASTEARN MEDITTERANEAN' />
                <alias key='&quot;EURO&quot;' value='EUROPE' />
                <alias key='&quot;SEARO&quot;' value='SOUTH EAST ASIA' />
                <alias key='&quot;WPRO&quot;' value='WESTEARN PACIFIC REGION' />
              </aliases>
            </column>
            <column-instance column='[Cumulative_cases]' derivation='Max' name='[max:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cumulative_deaths]' derivation='Max' name='[max:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[WHO_region]' derivation='None' name='[none:WHO_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date_reported]' derivation='Day-Trunc' name='[tdy:Date_reported:qk]' pivot='key' type='quantitative' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
                  <map to='#4e79a7'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#76b7b2'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#f28e2b'>
                    <bucket>2</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:WHO_region:nk]'>
            <groupfilter function='level-members' level='[none:WHO_region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]' included-values='in-range'>
            <min>#2020-01-05 00:00:00#</min>
            <max>#2024-01-28 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:WHO_region:nk]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_cases:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:AdhocCluster:1:ok]' />
              <size column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_deaths:qk]' />
              <lod column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]' />
              <lod column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_cases:qk]' />
              <geometry column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='14.547999382019043' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Latitude (generated)]</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{AF980491-100B-46FC-932C-6511AE62103E}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Comparison of cumulative COVID-19 cases and deaths across the different WHO regions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column caption='WHO region' datatype='string' name='[WHO_region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFRO&quot;' value='AFRICA' />
                <alias key='&quot;AMRO&quot;' value='AMERICA' />
                <alias key='&quot;EMRO&quot;' value='EASTEARN MEDITTERANEAN' />
                <alias key='&quot;EURO&quot;' value='EUROPE' />
                <alias key='&quot;SEARO&quot;' value='SOUTH EAST ASIA' />
                <alias key='&quot;WPRO&quot;' value='WESTEARN PACIFIC REGION' />
              </aliases>
            </column>
            <column-instance column='[Cumulative_cases]' derivation='Max' name='[max:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cumulative_deaths]' derivation='Max' name='[max:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date_reported]' derivation='None' name='[none:Date_reported:ok]' pivot='key' type='ordinal' />
            <column-instance column='[WHO_region]' derivation='None' name='[none:WHO_region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <natural-sort column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_deaths:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.98850828409194946' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.98850828409194946' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk] + [federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_deaths:qk])</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</cols>
        <pages>
          <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Date_reported:ok]</column>
        </pages>
        <page-trail-options mark-type='all' />
      </table>
      <simple-id uuid='{EDC6A9D2-8168-41F5-87C8-BDD4BC8A99E5}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column caption='New cases' datatype='real' name='[New_cases]' role='measure' type='quantitative' />
            <column-instance column='[New_cases]' derivation='Sum' name='[sum:New_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date_reported]' derivation='Day-Trunc' name='[tdy:Date_reported:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='line-interpolation' value='step' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.7911050319671631' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.4172928333282471' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='line-interpolation' value='step' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk] + [federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk])</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl].[tdy:Date_reported:qk]</cols>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
      <simple-id uuid='{503B1493-F866-4CFE-9D96-4B93DF44E10B}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
              </semantic-values>
            </column>
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column-instance column='[Cumulative_cases]' derivation='Max' name='[max:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Albania&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[Longitude (generated)]' field-type='quantitative' max='5492854.5402537212' min='-18911793.170861088' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[Latitude (generated)]' field-type='quantitative' max='14413553.048879214' min='-10059456.470525589' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' />
              <lod column='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]' />
              <geometry column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontalignment='1' fontcolor='#787878'>Country:&#9;</run>
                <run bold='true' fontalignment='1'><![CDATA[<[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]>]]></run>
                <run>Ã&#10;</run>
                <run fontcolor='#787878'>Cumulative cases:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l502fs06d8sad17191mc0d7wgtl].[Latitude (generated)]</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{80B952C1-2D39-498C-A529-72AC5DD78668}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
              </semantic-values>
            </column>
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='Attribute' name='[attr:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cumulative_cases]' derivation='Max' name='[max:Cumulative_cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]' />
              <lod column='[federated.1l502fs06d8sad17191mc0d7wgtl].[attr:Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1l502fs06d8sad17191mc0d7wgtl].[Latitude (generated)]</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{580A5F4A-DB7F-4AB4-B233-43FA03BB82B5}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text>
            <run>TREEMAP FOR COMPARISON</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column caption='New cases' datatype='real' name='[New_cases]' role='measure' type='quantitative' />
            <column caption='New deaths' datatype='real' name='[New_deaths]' role='measure' type='quantitative' />
            <column caption='WHO region' datatype='string' name='[WHO_region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFRO&quot;' value='AFRICA' />
                <alias key='&quot;AMRO&quot;' value='AMERICA' />
                <alias key='&quot;EMRO&quot;' value='EASTEARN MEDITTERANEAN' />
                <alias key='&quot;EURO&quot;' value='EUROPE' />
                <alias key='&quot;SEARO&quot;' value='SOUTH EAST ASIA' />
                <alias key='&quot;WPRO&quot;' value='WESTEARN PACIFIC REGION' />
              </aliases>
            </column>
            <column-instance column='[WHO_region]' derivation='None' name='[none:WHO_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[New_cases]' derivation='Sum' name='[sum:New_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New_deaths]' derivation='Sum' name='[sum:New_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='caption'>
            <format attr='background-color' value='#e9f3f2' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#c0c0c0' />
            <format attr='border-width' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]' />
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_deaths:qk]' />
              <text column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{51E5CD13-EA05-4563-AFB0-15D9163D0610}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column caption='New cases' datatype='real' name='[New_cases]' role='measure' type='quantitative' />
            <column caption='New deaths' datatype='real' name='[New_deaths]' role='measure' type='quantitative' />
            <column-instance column='[New_cases]' derivation='Sum' name='[sum:New_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New_deaths]' derivation='Sum' name='[sum:New_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date_reported]' derivation='Month-Trunc' name='[tmn:Date_reported:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[tmn:Date_reported:qk]' value='85' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk] + [federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_deaths:qk])</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl].[tmn:Date_reported:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='false' fill-type='fill-zero' ignore-last='0' model-type='auto' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{BA404C81-1977-44BC-83F8-D453B51FEEF9}' />
    </worksheet>
    <worksheet name='comparative'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Comparative Analysis of COVID-19 Cases, Deaths, and Case Fatality Rates</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column caption='Case fatality ratio' datatype='real' default-format='p0.00%' name='[Calculation_2164824051232415744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([Cumulative_deaths]) / MAX([Cumulative_cases])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
              </semantic-values>
            </column>
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column caption='WHO region' datatype='string' name='[WHO_region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFRO&quot;' value='AFRICA' />
                <alias key='&quot;AMRO&quot;' value='AMERICA' />
                <alias key='&quot;EMRO&quot;' value='EASTEARN MEDITTERANEAN' />
                <alias key='&quot;EURO&quot;' value='EUROPE' />
                <alias key='&quot;SEARO&quot;' value='SOUTH EAST ASIA' />
                <alias key='&quot;WPRO&quot;' value='WESTEARN PACIFIC REGION' />
              </aliases>
            </column>
            <column-instance column='[Cumulative_cases]' derivation='Max' name='[max:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cumulative_deaths]' derivation='Max' name='[max:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[WHO_region]' derivation='None' name='[none:WHO_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2164824051232415744]' derivation='User' name='[usr:Calculation_2164824051232415744:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]'>
            <groupfilter function='level-members' level='[none:WHO_region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' scope='rows' value='#00000000' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='tick-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]' value='p0%' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#005500' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</rows>
        <cols>([federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk] + ([federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_deaths:qk] + [federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]))</cols>
      </table>
      <simple-id uuid='{EF0E79EB-20CC-4C36-81D7-89B56E6E12C4}' />
    </worksheet>
    <worksheet name='correlation'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Correlation between COVID-19 Cases and Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column caption='correlation coefficient' datatype='real' name='[Calculation_3815956272936787984]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR([Cumulative_cases], [Cumulative_deaths])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
              </semantic-values>
            </column>
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column caption='WHO region' datatype='string' name='[WHO_region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFRO&quot;' value='AFRICA' />
                <alias key='&quot;AMRO&quot;' value='AMERICA' />
                <alias key='&quot;EMRO&quot;' value='EASTEARN MEDITTERANEAN' />
                <alias key='&quot;EURO&quot;' value='EUROPE' />
                <alias key='&quot;SEARO&quot;' value='SOUTH EAST ASIA' />
                <alias key='&quot;WPRO&quot;' value='WESTEARN PACIFIC REGION' />
              </aliases>
            </column>
            <column-instance column='[Cumulative_cases]' derivation='Max' name='[max:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cumulative_deaths]' derivation='Max' name='[max:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[WHO_region]' derivation='None' name='[none:WHO_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3815956272936787984]' derivation='User' name='[usr:Calculation_3815956272936787984:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]'>
            <groupfilter function='level-members' level='[none:WHO_region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='tick-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' value='false' />
            <format attr='background-color' value='#e6ecf0' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='1' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='rounding' id='annotation_0' value='large' />
            <format attr='body-type' id='annotation_0' value='none' />
            <format attr='border-width' id='annotation_0' value='0' />
            <format attr='fill-color' id='annotation_0' value='#00000000' />
            <format attr='line-end-size' id='annotation_0' value='small' />
            <format attr='line-pattern-only' id='annotation_0' value='solid' />
            <format attr='stroke-size' id='annotation_0' value='0' />
            <format attr='line-visibility' id='annotation_0' value='off' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' />
              <lod column='[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_3815956272936787984:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.82359117269515991' />
                <format attr='mark-color' value='#b6992d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_deaths:qk]</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='91'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book'>Countries above the trendline have a higher number of deaths relative to their case count, while countries below the trendline have a lower number of deaths relative to their case count.</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='28610127.896585368'>
                  <node-reference>
                    <axis>[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='1233273.3697560977'>
                  <node-reference>
                    <axis>[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_deaths:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='51550557.696585365'>
                  <node-reference>
                    <axis>[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='673422.80195121956'>
                  <node-reference>
                    <axis>[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_deaths:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.492683' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{16817D13-7588-47FA-9917-DA09E2CB9475}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='72375' id='10' name='Sheet 3' w='27467' x='800' y='26625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='25625' id='12' name='BAN' w='27467' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98000' id='14' name='CUMULATIVE CASES BAR' w='16200' x='67000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='62250' id='18' name='Case_Fatality_Rate' w='38733' x='28267' y='36750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35750' id='21' name='Sheet 10' w='38733' x='28267' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='62500' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone count='1' h='14250' id='13' name='BAN' name1='CUMULATIVE CASES BAR' synchronized='1' type-v2='currpage' w='16000' x='83200' y='63500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7000' id='19' name='Case_Fatality_Rate' param='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' type-v2='highlighter' w='16000' x='83200' y='77750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14250' id='20' name='Case_Fatality_Rate' synchronized='1' type-v2='currpage' w='16000' x='83200' y='84750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1650' minheight='1650' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='27' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='26' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='197' h='25625' id='12' is-fixed='true' name='BAN' w='27467' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='278' h='35750' id='21' is-fixed='true' name='Sheet 10' w='38733' x='28267' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='14' is-fixed='true' name='CUMULATIVE CASES BAR' w='16200' x='67000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='72375' id='10' is-fixed='true' name='Sheet 3' w='27467' x='800' y='26625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='62500' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7000' id='19' name='Case_Fatality_Rate' param='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' type-v2='highlighter' w='16000' x='83200' y='77750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='62250' id='18' is-fixed='true' name='Case_Fatality_Rate' w='38733' x='28267' y='36750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone count='1' h='14250' id='13' name='BAN' name1='CUMULATIVE CASES BAR' synchronized='1' type-v2='currpage' w='16000' x='83200' y='63500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14250' id='20' name='Case_Fatality_Rate' synchronized='1' type-v2='currpage' w='16000' x='83200' y='84750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F231AB32-58B8-4F29-9C23-EC019FF81ECC}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='4357' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='5187' />
            <zone h='83506' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='15664'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='CUMULATIVE CASES BAR' id='1' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{7DCD3D59-516A-4EDF-BAA5-1CFCA093F8AD}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{278EDC9F-93ED-4228-ADAE-CED06AF517DA}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='BAN'>
          <current-page>
            <multibucket>
              <bucket>#2024-01-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='CUMULATIVE CASES BAR'>
          <current-page>
            <multibucket>
              <bucket>#2024-01-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Case_Fatality_Rate'>
          <current-page>
            <multibucket>
              <bucket>#2024-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 10'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[tdy:Date_reported:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]</field>
                    <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[tdy:Date_reported:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>383504.0</value>
                  <value>#2023-12-17 00:00:00#</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='21' />
      <device-preview visible='true' />
      <simple-id uuid='{491B2879-2CE2-4CC2-B3D3-E92C5DF76533}' />
    </window>
    <window class='worksheet' name='Geographical'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:WHO_region:nk]' type='filter' />
            <card param='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:AdhocCluster:1:ok]' type='color' />
            <card pane-specification-id='0' param='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_deaths:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[:Measure Names]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[dy:Date_reported:ok]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[md:Date_reported:ok]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:WHO_region:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Date_reported:qk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[tmn:Date_reported:ok]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[tmn:Date_reported:qk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{66520ADA-82E7-48DB-A2EE-6451B512C4C7}' />
    </window>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2024-01-28#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D19B8547-E473-4F7F-A1D7-491C18FB6D71}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country_code:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{04CBEC74-366B-458D-AE93-E371A8CC4EA7}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[:Measure Names]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[attr:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:AdhocCluster:2:ok]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{45CA5B0D-F381-49BA-9A33-084EBEF1DD31}' />
    </window>
    <window class='worksheet' name='CUMULATIVE CASES BAR'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2024-01-28#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5D676135-12E3-4464-B708-153B21C6CE96}' />
    </window>
    <window class='worksheet' name='BAN'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2024-01-28#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8F6EBAC6-BC72-4F5E-9D67-E7995C890B3A}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{855C5578-620E-4723-ACF8-1B01C6A27C25}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[mn:Date_reported:ok]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Month:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{13529267-3025-4B63-AAD6-4114C2691EA4}' />
    </window>
    <window class='worksheet' name='Case_Fatality_Rate'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' type='color' />
            <card param='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2024-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A2A9DE4C-7AFC-4553-8235-1CEB30A4A3AF}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC1FE197-96EB-42EF-9BFE-169A789EBFA8}' />
    </window>
    <window class='worksheet' name='Distribution of New cases in the analyzed mark of 3 July 2022'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='160'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Calculation_3815956272899162114:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:New_cases:qk]</field>
                  </x-fields>
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[cnt:New_cases:qk]</field>
                  <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Calculation_3815956272899162114:nk]</field>
                  <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:New_cases:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>32</value>
                <value>false</value>
                <value>0.0</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{F4CAED1C-1F43-4AED-BEEF-EDA730363DE9}' />
    </window>
    <window class='worksheet' name='COVID-19 Daily New Cases and Deaths in the United Kingdom'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[:Measure Names]' type='color' />
            <card mode='datetime' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='datetime' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[:Measure Names]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8A9D9D82-961A-4C95-AD09-26ACF6247CD5}' />
    </window>
    <window class='worksheet' name='comparative'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7B6A0CD3-A7E1-4B6E-ABF0-6A28DE2CD2B3}' />
    </window>
    <window class='worksheet' maximized='true' name='correlation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{348B4C57-5507-432D-B268-13EF43082C65}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='BAN' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='COVID-19 Daily New Cases and Deaths in the United Kingdom' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CUMULATIVE CASES BAR' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Case_Fatality_Rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Distribution of New cases in the analyzed mark of 3 July 2022' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Geographical' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAARvUlEQVR4nO3dWY8c13nG8f+pU0uvs3M4Q4qLZJEUJceyLMOAnSCJc5MgyE1yEyAXyV2+
      UpCPkVwEAQIEiY3YTixZslaK5JDDWXv2XqqXqq46JxfNGZJmU+rmsLvVrvcHECB7hlN1cZ6p
      qvOe85ay1lqEyCgXQDIgsso9/UsYhq/kB7ZaLQqFwiv5WUKMmguglKJcLn/jN0etBjE+xCHN
      riJQltnFBeonRxRmFvBdB2CgnyXEt4H7zd/SY61hbe0eudIS+5Utrr5xk73KOh3lsXPnE66+
      +8csFRXWWrmlElNj4ADUDrYJOyn19hGluUXqJ4fkZxepVR4SlOYAizEGYwxpmo7wlIV4ddQw
      s0BpEtFodmnWDkh1ntlinnazQbFcROdmKfgOjUZDboHE1BgqAIOQAIhp4kz6BISYJAmAyDQJ
      gMg0CYDINAmAyLSB6wAA1hgsCqXAGAOA42iMSXEcB6XUSE5SiFEZohJsufvFR+jyZcq6zeZh
      Cy+ucvn2+zz8+Odcf++nXCgNlSchJm7wSvD+BnvVNn5zi52ohTGaq1dXONldxy/MAJY0TUnT
      lCRJRnfGQrxCQxXCkrjFUTXi4vIsO9sVXNelWTuiODdHUF5mNq+lECamilSCRabJLJDINAmA
      yDQJgMg0CYDINAmAyDQJgMi0oUq3h5VNUq9Mu3pAqnPobpuV129QWb/D0pWblAI9qvMUYiQG
      DkAatzmq1vHzLpcvX2Lt0Q6+jdnf2+P4YJ/iypvkXaQSLKbKwAFohXXiOKbWPKR+UuGNG29x
      fLBPfe8R5YUlQKG1RmuN68qaIDEdhqoEW5MSd1NOjg9Qbo752TJpkuB5LjgerlZSCRZTRZZC
      iEyTWSCRaRIAkWkSAJFpEgCRaRIAkWlDTdg368d0nTxx4wgnP4vphCxcXKG6v0tpYYWcJ3kS
      02XwTfEm4dHGBrn8PEZZTGMXGzVJdI7dtTtcLS4TuL326KcdI4T4thv4V3b9qEI7Ttg/OkY9
      boGSK89TqzwkX14AkHcDiKkzVCHMpDHNdkKzdoiTmyHvu8TtJrliHscvkfekPbqYLlIJFpkm
      T60i0yQAItMkACLTJAAi0yQAItMkACLThtgT3OLegw0c16MT1lF+AdWu8drt93j02a+48s6P
      WSjKVkgxXQYesdrLEziGWDkkSYLSKXNz8xxXNrA4pFbao4vpM3AA4k5IZDTYGO16KMfBDwo0
      jvdYWr2MVrIpXkwfqQSLTJOHYJFpEgCRaRIAkWkSAJFpEgCRaRIAkWlDV4KLM/PYqIGTmyGq
      HrD65m127n/K8uvfZSYn7dHFdBmuEqwtrWaDo4N9Fpc1nlYcVHap12rMJoY0lfboYroMHIBu
      1MLNlQhrdUrFInHUIVcsUt/fZHbxAtIeXUyjgSvB1hqaYZNcoYhNYozSuNrBGIN2HFAOjiPt
      0cV0GfhXtVIOpdOBrXNnn2st9/1ieskskMg0CYDINAmAyDQJgMg0CYDItIEDYE1KZXeHTpxg
      TUojbNKo1zEWmo06SSpNccX0Gbw9eprg+T5rDx4ym1Mchglet87S9bfZ/OLXXHv3T7hQkgKY
      mC4Dj1jH9QlrJ2iVsrV7QicyXLt2iWrlIUFxFpBN8WL6DLUpvh0byvNLvHXrFgcHR2itaTtQ
      XF3F9RxZCiGmjmyKF5kms0Ai0yQAItMkACLTJAAi0yQAItMkACLTht4Uny/OYOImkdE4Ucjl
      m99l6+7HrHznXWbzsjlGTJchN8Ub4sRwaWmR7cM6buBzsLtNsxkSp7IpXkyfoSrBqfLptGr8
      ZnON62++hYkVtcNt5hYvIpvixTQaYlO8JUkStHZJ0wT1+H0A1lqUAlAoJZvixXQZYlO8wvM8
      ABzHe+ZzIaaVzAKJTJMAiEyTAIhMkwCITJMAiEwbohLc5t6DR8xfWCFuHOHkZ7GtOsvXXmd/
      Y42FS29Q8CVPYroMvifYC8j7msbJEdoPMGEVG7fY2ztgf3eLYOkagbZSCRZTZfArQDdmefUy
      X311l0JJYZOEXH6WemWd0twSoHCcJ/uChZgGg18BtGZ3c4sbt94mbp7g5FYJXMXiwjx+4IGr
      z4piUhwT00I2xYtMk6dWkWkSAJFpEgCRaRIAkWkSAJFpg3eHthZjDI7j0Js4UoBFKQdrDUop
      mf4UU2fgAJhum7X1LZI0pdNqorw8ql3lytvv8+Djn3H9vT+T9uhi6gyxFCKHVobFlVU2HtwH
      pZi7sMJJZR0/P4O0RxfTaOAAdGr7nIQJhZmYIBegvIB8sUyzesjqlav4Wtqji+kjlWCRaTIL
      JDJNAiAyTQIgMk0CIDJNAiAyTQIgMm3o9uh+voiJmuTKCzT2N7l86102v/yAS7d+yHxB5v/F
      dBmiEpxntpgjVYqNo2PKqUOpWOJod4s4TkiMVILF9Bk4AO1ahXubh9x88zqlfA5jDK5fpHa0
      y8LyCkrao4spJJVgkWnyECwyTQIgMk0CIDJNAiAyTQIgMk0CIDJt4ABYk7Lx8AG1sE2aROwf
      HHOwVyG1lqP9XaLEjPI8hRiJwbtCpAnzFy6wvbNNThuaMbhJSNfJsXv/S65+7wJLRXXWPUKI
      adA3AO3jTb54cMDGYY2//oufAmAxbG3u8vr1S3z++R0aYcS165epVR6SLy8AFmuf/BFiGvQN
      gON6rFdO+INbV88+S6IOBkut2eX9H75PtVpHOw5RPke+WMAJNI7jnL0jQIhhJakhbMfMlXJj
      O2bfACjtgU3wnlrTE5Tmeef2/Nm/5+ZmASjPyLIH8Wr87ONH/NO/fsBf/fgGf//n746l0Vrf
      h+AkanK4v8unX94f+QkIcWqv2sTVDv/2q/tE3XQsx+w/C2Th+++8TRe5lRHjE7YiZgoBqTG0
      o+5Yjtk3ANoL2D5q8L0bV8ZyEkIAVJsRga+xFtrRePaU9L8CKEW7ts+99e2xnIQQAPWwQ85z
      cRS0OhO8AiTtBovLl0jS8dyHCQHQjLr4nkZrh2YnHssx+xfCHM077/2I5v762UfWWpphgyBf
      JO1GWOXiYPCDHHHUxvVzaEfao4uXZy0EnourHcL2eK4AfQMQFOf5/L/+m/LixbPPTLfDSa1O
      uF1htlzg4LiKEzVYufEujz79Bde+/6fSHl2ciwJ8T+Nph7AdjeWYfUdsaizfuXWba1dee+bs
      ulHM5StXCI/3uLh6mahxwvH2GrnyPNIeXZyHtZAag3YUrquphZ2xjKP+lWBHc+/TD/n1x5/z
      d3/zlwAkcUQn7tJqhoTNFj4+S0vLRJ0W+UIex+/du8mmePEyuklKO0oIPBff1TTa3bGMo75H
      MGkXHRQomKcqwcU53r49B8DK8oWzz0vl0ohPUWRBaiztOMFxFJ47vofgvrNA1qScNFq89713
      xnISQnSi5GwRpac1YWuCAeiGh7RswM7Gw7GchBCNdoTv9lYeuK5Doz2hAFhrsfklVnIxNpCF
      bmI8qmGE9zgA3hjrAH2uAJZ7X33J8fERn315dywnIUQt7OB7jwPgapqTugJgLR/9+n9xiou8
      9923xnISQjQ7MZ7uDUdXO7SjhDQd/c7C52eBlMPf/sM/Yiw4WqYzxXi0Ol3cxwHwXIckNbTj
      hFLeH+lxnxvhSinKM7PPfeNpe3TH8+m2GjhBibRxyGu3f8D6Z7/k6js/YaEogREvpxUlZwFw
      tYOxlk40gQC8iOPlKeY83KBAHORI4zbO3ALHlQ1Ak1qpBIuXF7YitFZnDRWshUarw1zpWxKA
      Tq3C5n6dN16fpXm0gxOUKBeKNI73WFq9jFbSHl28vE6c4Lm9feVg0Y4iTszIx9LAPz0/t8pP
      frQKwMqFpSdfuHzplZ+UyJ6w08V1erdASoF2HJpj2BMgneHEt0Kr0z3bBK+UQmtFawzbIiUA
      YuKstc8Ndlc7NMewJ0ACICbOWEsnfnbixNN6LBvjJQBi4oyxzw12rdVYlkNIAMTEWQtRnPL0
      jlpPa3kIFtmQGkOnm6D1k+HoamcsnSEGb49uDZuPNjDWsvXoATt7h+xubdI1lsr2Bu2udIQW
      LyeKU7C9qc9TrjueAAzeHt0kVE9qXHxtheNaCGFEjojUK7D3aA09u0qgwRhDKu1UxBAa7Q4o
      cBzONsVop/cMMOqxNPhSCO1TKuSwJkW7PsakBKU56pWHFGYXAYVST/4IMahWJ+mtJHjqCuC5
      mkYrGvlYGjgASdSik3Q5PApZmMnj5GYo5QNmZ8oE+QDHc84Gv+PIo4UYXDvu3f8/Pdhd7dCJ
      k5GPpYED4AYFbr/99vNfKBZe5fmIDGq2u2d7AU71mmPFWGtHehWQX9Vi4tpR95kZIOgFIE3t
      yNukSwDExIWdGM99dih62iExhige7dJ6CYCYuE6UPPMADOA4vRcuxolcAcTvubAdn+0GO6WU
      gjG8J0ACICYuipM+AehdBdrfplugVrOJBdphneNqnUatjrEQNmokqbwaVbycTrfXEvFpzuO6
      wKjbowwcAJNE/PajT+mmXT774ks6UczmgzscVEPufPIBJ22p/oqXE3fTs91gp043xYx6SfTg
      lWA3YGV5EWsS/HyJk+MDSnMXqO4+JCjOIu3RxcvqFbw42xB/ytUO9WY00vE0VCW4GjbwjkPm
      SwGpLjBTyuNqRXHmEq7nyKZ48VKibop+/JL1p3lub0n0KMfTUJXg937wg8f/etIefX5hvv9/
      EGIA1vaKXf36/3iuQ7012jfFyCyQmChrIUlSnD7LHXx39G3SJQBioiyWbmr6vmDRc7VcAcTv
      N2t7zwD9Vn36rqbWlACI32PWWrrdFFf3uwL0VoSOkgRATJS1ECdp3yXP/uNNMcaMrsgqARAT
      Zaylm7z4GSBJzEiLYUNUgmM+/OAjEqBZPeDzrx5w97PfEsaGrz79kJpUgsVL6CYpFtt3Fsh9
      /J6AUbZIHLgOoLTH/EwJYxJ2D2v4CnQQcLi7RbPVJE4NaYpUgsVQ2lEXhUKp5yvBCoul1zp9
      vhSM5PgDByDtdtje2cEtlzBpws7uEdeuv0b9cIe5xYuAtEcXw+s+fg1Sv0owqN7rkuJ0ZGNq
      4J+qvRw//qM/RCkHvbrCjZu9z+3VK9IFQry0btecLX3+XUr1dobVws7Ijj/4LZBSz6TwdMzL
      4BfnEXUTtNO/lY5SvbfGj/KdwTILJCaq/Q2tT1xXUx9hMUwCICaqtxL0xXcRgTfa5RASADFR
      3W7a9/7/lOdqThrtkR1fAiAmqvcM8OJhmPddDqqtkR1fAiAm6ptugfKBx0G1ddY0F+DDu7us
      bR+/kuMP1R797p27pNaw/uA+65s7bD58QGwsW+v3acbSHl0MrxN/wxUgcAnb8dmiuLib8s//
      8gH//n9rr+T4Q7RHTzGpwaB47coVvrq/TkDMXuWA/d0tgqVr5LSVSrAYSvSC/cCntFYkqeGo
      1iLva35zd5e9kyaPKtVXMs4GrwM4Lr6nsTbl/r01bt56i53NTep765TmlpBKsHgZcWJeUAXu
      8R7XAo7qba6tzPEfHzxgoZyjchxirML39LmOP/hSiLhNguVg/5hc4LK9U2Fl5SKLiwv4gYvS
      5zsRkU1xn55AT1NKkfc99k6ahO2YLx4dcvvaEp+s7XEStrk4XzrX8YfaFH/z5uP1Dyw/+UIu
      d64TENl22hHi6+QDl/2TJg92qqSpYa6Yw9UOW/v1cwdAZoHERJ0uhfg6+cCjchzy27UK8+U8
      WjuU8j6b+/VzH19u1sVExV3z3LsBflc+cHm4e8Lmfo3F2TwAxZzPxn7t3MeXK4CYqE6c9N0M
      87TF2QKpsewchiyUewEo5T225Aogpt0gt0C+q/n+mytE3ZSc3xuyhZzP3c0jukmK5778BIxc
      AcTEWGuJB3gIht5s0Ongh94SiVbUpXHOxllDBcAYgwVMmmKMxaQp1oIx6TOlaiEGYW2vsqv7
      tET5Jq7roID9avNc5zBUe/Rf/PyXvfbon33K53fu8skHv+Io7PDh//wnh03ZFC+GY62l3efl
      GIPQjkPgu+weNc51DkO1R7+8uoxJE2YXl0njNk5uheruOn6+jLRHF8NK0l7LE8dRL1wK8XUK
      Qe9B+Dzj7f8BAh4SGB1JfZoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      maPuKKqzZ9gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      Xb4O/D9DmW/8akfM8QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='comparative' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='correlation' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
