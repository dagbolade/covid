<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.24.0112.1233                               -->
<workbook original-version='18.1' source-build='2023.3.2 (20233.24.0112.1233)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.PatternedLineMarks.true...PatternedLineMarks />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='National Lockdown Start' datatype='datetime' default-format='*m/d/yyyy' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2020-03-23 00:00:00#'>
        <calculation class='tableau' formula='#2020-03-23 00:00:00#' />
      </column>
      <column caption='Vaccination Rollout Start' datatype='datetime' default-format='*m/d/yyyy' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='#2020-12-08 00:00:00#'>
        <calculation class='tableau' formula='#2020-12-08 00:00:00#' />
      </column>
      <column caption='Date Range' datatype='date' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='#2024-05-04#'>
        <calculation class='tableau' formula='#2024-05-04#' />
      </column>
    </datasource>
    <datasource caption='cleaned_covid_data' inline='true' name='federated.1l502fs06d8sad17191mc0d7wgtl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cleaned_covid_data' name='textscan.1l0vw8p1hkjain194cty31cnczm1'>
            <connection class='textscan' directory='C:/Users/dagbo_b40tnyc/OneDrive/covid' filename='cleaned_covid_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1l0vw8p1hkjain194cty31cnczm1' name='cleaned_covid_data.csv' table='[cleaned_covid_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='date' name='Date_reported' ordinal='0' />
            <column datatype='string' name='Country_code' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='WHO_region' ordinal='3' />
            <column datatype='real' name='New_cases' ordinal='4' />
            <column datatype='integer' name='Cumulative_cases' ordinal='5' />
            <column datatype='real' name='New_deaths' ordinal='6' />
            <column datatype='integer' name='Cumulative_deaths' ordinal='7' />
            <column datatype='integer' name='Year' ordinal='8' />
            <column datatype='string' name='Month' ordinal='9' />
            <column datatype='integer' name='Week' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1l0vw8p1hkjain194cty31cnczm1' name='cleaned_covid_data.csv' table='[cleaned_covid_data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='date' name='Date_reported' ordinal='0' />
              <column datatype='string' name='Country_code' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='WHO_region' ordinal='3' />
              <column datatype='real' name='New_cases' ordinal='4' />
              <column datatype='integer' name='Cumulative_cases' ordinal='5' />
              <column datatype='real' name='New_deaths' ordinal='6' />
              <column datatype='integer' name='Cumulative_deaths' ordinal='7' />
              <column datatype='integer' name='Year' ordinal='8' />
              <column datatype='string' name='Month' ordinal='9' />
              <column datatype='integer' name='Week' ordinal='10' />
            </columns>
          </relation>
          <relation connection='textscan.1l0vw8p1hkjain194cty31cnczm1' name='population_data_cleaned.csv' table='[population_data_cleaned#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='real' name='Population' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Country (population_data_cleaned.csv)]' value='[population_data_cleaned.csv].[Country]' />
          <map key='[Country]' value='[cleaned_covid_data.csv].[Country]' />
          <map key='[Country_code]' value='[cleaned_covid_data.csv].[Country_code]' />
          <map key='[Cumulative_cases]' value='[cleaned_covid_data.csv].[Cumulative_cases]' />
          <map key='[Cumulative_deaths]' value='[cleaned_covid_data.csv].[Cumulative_deaths]' />
          <map key='[Date_reported]' value='[cleaned_covid_data.csv].[Date_reported]' />
          <map key='[Month]' value='[cleaned_covid_data.csv].[Month]' />
          <map key='[New_cases]' value='[cleaned_covid_data.csv].[New_cases]' />
          <map key='[New_deaths]' value='[cleaned_covid_data.csv].[New_deaths]' />
          <map key='[Population]' value='[population_data_cleaned.csv].[Population]' />
          <map key='[WHO_region]' value='[cleaned_covid_data.csv].[WHO_region]' />
          <map key='[Week]' value='[cleaned_covid_data.csv].[Week]' />
          <map key='[Year]' value='[cleaned_covid_data.csv].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[population_data_cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date_reported</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date_reported]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Date_reported</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_code]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Country_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WHO_region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[WHO_region]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>WHO_region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New_cases]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>New_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative_cases]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Cumulative_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New_deaths]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>New_deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative_deaths]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Cumulative_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Week</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Week]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Week</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (population_data_cleaned.csv)]</local-name>
            <parent-name>[population_data_cleaned.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_data_cleaned.csv_1DFFEAA85B614EBAB27257C4E8C7AAB8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[population_data_cleaned.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_data_cleaned.csv_1DFFEAA85B614EBAB27257C4E8C7AAB8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Case fatality ratio' datatype='real' default-format='p0.00%' name='[Calculation_2164824051232415744]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([Cumulative_deaths]) / MAX([Cumulative_cases])' />
      </column>
      <column caption='correlation coefficient' datatype='real' name='[Calculation_3815956272936787984]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR([Cumulative_cases], [Cumulative_deaths])' />
      </column>
      <column caption='Start Date' datatype='date' name='[Calculation_3815956273646161949]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 3]' />
      </column>
      <column caption='End Date' datatype='date' name='[Calculation_3815956273646338078]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 3]' />
      </column>
      <column caption='Date Filter' datatype='boolean' name='[Calculation_3815956273646452767]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Date_reported] &gt;= [Calculation_3815956273646161949] AND [Date_reported] &lt;= [Calculation_3815956273646338078]' />
      </column>
      <column caption='Country (population data cleaned.csv)' datatype='string' name='[Country (population_data_cleaned.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
          <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
          <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
          <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
        </semantic-values>
      </column>
      <column caption='Country code' datatype='string' name='[Country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
      <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
      <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
      <column caption='New cases' datatype='real' name='[New_cases]' role='measure' type='quantitative' />
      <column caption='New deaths' datatype='real' name='[New_deaths]' role='measure' type='quantitative' />
      <column caption='WHO region' datatype='string' name='[WHO_region]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;AFRO&quot;' value='AFRICA' />
          <alias key='&quot;AMRO&quot;' value='AMERICA' />
          <alias key='&quot;EMRO&quot;' value='EASTEARN MEDITTERANEAN' />
          <alias key='&quot;EURO&quot;' value='EUROPE' />
          <alias key='&quot;SEARO&quot;' value='SOUTH EAST ASIA' />
          <alias key='&quot;WPRO&quot;' value='WESTEARN PACIFIC REGION' />
        </aliases>
      </column>
      <column datatype='integer' name='[Week]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='cleaned_covid_data.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='population_data_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[population_data_cleaned.csv_1DFFEAA85B614EBAB27257C4E8C7AAB8]' role='measure' type='quantitative' />
      <column-instance column='[New_cases]' derivation='Avg' name='[avg:New_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New_cases]' derivation='Sum' name='[cum:sum:New_cases:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[New_deaths]' derivation='Sum' name='[cum:sum:New_deaths:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Cumulative_cases]' derivation='Max' name='[max:Cumulative_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cumulative_deaths]' derivation='Max' name='[max:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New_cases]' derivation='Max' name='[max:New_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Date_reported]' derivation='None' name='[none:Date_reported:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[WHO_region]' derivation='None' name='[none:WHO_region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Cumulative_cases]' derivation='Sum' name='[sum:Cumulative_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cumulative_deaths]' derivation='Sum' name='[sum:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New_cases]' derivation='Sum' name='[sum:New_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New_deaths]' derivation='Sum' name='[sum:New_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New_cases]' derivation='Sum' name='[win:sum:New_cases:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,Date reported)' hidden='true' name='[Action (Country,Date reported)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[Date_reported]' />
        </groupfilter>
      </group>
      <group caption='Action (Date reported)' hidden='true' name='[Action (Date reported)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Date_reported]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Country,Date reported)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country:nk]' />
          <groupfilter function='level-members' level='[none:Date_reported:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:WHO_region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;AFRO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;OTHER&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;EURO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WPRO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EMRO&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;SEARO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AMRO&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:Cumulative_cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[cum:sum:New_deaths:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[avg:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[cum:sum:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[max:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[win:sum:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:Cumulative_deaths:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ickiribati&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Türkiye&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Netherlands (Kingdom of the)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bonaire, Saint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Icvanuatu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fesco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Diamond&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chefoo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;occupied Palestinian territory, including east Jerusalem&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Barthélemy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands (Malvinas)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:WHO_region:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;OTHER&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;AFRO&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;SEARO&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;EMRO&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;AMRO&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;EURO&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;WPRO&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Date Range' datatype='date' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='#2024-05-04#'>
          <calculation class='tableau' formula='#2024-05-04#' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cleaned_covid_data.csv' id='cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E'>
            <properties context=''>
              <relation connection='textscan.1l0vw8p1hkjain194cty31cnczm1' name='cleaned_covid_data.csv' table='[cleaned_covid_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='date' name='Date_reported' ordinal='0' />
                  <column datatype='string' name='Country_code' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='WHO_region' ordinal='3' />
                  <column datatype='real' name='New_cases' ordinal='4' />
                  <column datatype='integer' name='Cumulative_cases' ordinal='5' />
                  <column datatype='real' name='New_deaths' ordinal='6' />
                  <column datatype='integer' name='Cumulative_deaths' ordinal='7' />
                  <column datatype='integer' name='Year' ordinal='8' />
                  <column datatype='string' name='Month' ordinal='9' />
                  <column datatype='integer' name='Week' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='population_data_cleaned.csv' id='population_data_cleaned.csv_1DFFEAA85B614EBAB27257C4E8C7AAB8'>
            <properties context=''>
              <relation connection='textscan.1l0vw8p1hkjain194cty31cnczm1' name='population_data_cleaned.csv' table='[population_data_cleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='real' name='Population' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[Country (population_data_cleaned.csv)]' />
            </expression>
            <first-end-point object-id='cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E' />
            <second-end-point object-id='population_data_cleaned.csv_1DFFEAA85B614EBAB27257C4E8C7AAB8' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='cleaned_covid_data (2)' inline='true' name='federated.1l502fs06d8sad17191mc0d7wgtl (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cleaned_covid_data' name='textscan.1l0vw8p1hkjain194cty31cnczm1 (copy)'>
            <connection class='textscan' directory='C:/Users/dagbo_b40tnyc/OneDrive/covid' filename='cleaned_covid_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1l0vw8p1hkjain194cty31cnczm1 (copy)' name='cleaned_covid_data.csv' table='[cleaned_covid_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='date' name='Date_reported' ordinal='0' />
            <column datatype='string' name='Country_code' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='WHO_region' ordinal='3' />
            <column datatype='real' name='New_cases' ordinal='4' />
            <column datatype='integer' name='Cumulative_cases' ordinal='5' />
            <column datatype='real' name='New_deaths' ordinal='6' />
            <column datatype='integer' name='Cumulative_deaths' ordinal='7' />
            <column datatype='integer' name='Year' ordinal='8' />
            <column datatype='string' name='Month' ordinal='9' />
            <column datatype='integer' name='Week' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1l0vw8p1hkjain194cty31cnczm1 (copy)' name='cleaned_covid_data.csv' table='[cleaned_covid_data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='date' name='Date_reported' ordinal='0' />
              <column datatype='string' name='Country_code' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='WHO_region' ordinal='3' />
              <column datatype='real' name='New_cases' ordinal='4' />
              <column datatype='integer' name='Cumulative_cases' ordinal='5' />
              <column datatype='real' name='New_deaths' ordinal='6' />
              <column datatype='integer' name='Cumulative_deaths' ordinal='7' />
              <column datatype='integer' name='Year' ordinal='8' />
              <column datatype='string' name='Month' ordinal='9' />
              <column datatype='integer' name='Week' ordinal='10' />
            </columns>
          </relation>
          <relation connection='textscan.1l0vw8p1hkjain194cty31cnczm1 (copy)' name='population_data_cleaned.csv' table='[population_data_cleaned#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='real' name='Population' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Country (population_data_cleaned.csv)]' value='[population_data_cleaned.csv].[Country]' />
          <map key='[Country]' value='[cleaned_covid_data.csv].[Country]' />
          <map key='[Country_code]' value='[cleaned_covid_data.csv].[Country_code]' />
          <map key='[Cumulative_cases]' value='[cleaned_covid_data.csv].[Cumulative_cases]' />
          <map key='[Cumulative_deaths]' value='[cleaned_covid_data.csv].[Cumulative_deaths]' />
          <map key='[Date_reported]' value='[cleaned_covid_data.csv].[Date_reported]' />
          <map key='[Month]' value='[cleaned_covid_data.csv].[Month]' />
          <map key='[New_cases]' value='[cleaned_covid_data.csv].[New_cases]' />
          <map key='[New_deaths]' value='[cleaned_covid_data.csv].[New_deaths]' />
          <map key='[Population]' value='[population_data_cleaned.csv].[Population]' />
          <map key='[WHO_region]' value='[cleaned_covid_data.csv].[WHO_region]' />
          <map key='[Week]' value='[cleaned_covid_data.csv].[Week]' />
          <map key='[Year]' value='[cleaned_covid_data.csv].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[population_data_cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date_reported</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date_reported]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Date_reported</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_code]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Country_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WHO_region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[WHO_region]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>WHO_region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New_cases]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>New_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative_cases]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Cumulative_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New_deaths]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>New_deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative_deaths]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Cumulative_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Week</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Week]</local-name>
            <parent-name>[cleaned_covid_data.csv]</parent-name>
            <remote-alias>Week</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (population_data_cleaned.csv)]</local-name>
            <parent-name>[population_data_cleaned.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_data_cleaned.csv_5123E67F78F0476780EDAFDEDE7A9978]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[population_data_cleaned.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_data_cleaned.csv_5123E67F78F0476780EDAFDEDE7A9978]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Case fatality ratio' datatype='real' default-format='p0.00%' name='[Calculation_2164824051232415744]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([Cumulative_deaths]) / MAX([Cumulative_cases])' />
      </column>
      <column caption='7-Day Moving Average(new cases)' datatype='real' name='[Calculation_3815956272906489868]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([New_cases]), -3,3)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='7-Day moving average(New deaths)' datatype='real' name='[Calculation_3815956272908046349]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([New_deaths]), -3,3)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='cases per 100k' datatype='real' name='[Calculation_3815956273447686164]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([Cumulative_cases]) / SUM([Population]) * 100000' />
      </column>
      <column caption='Deaths per 100k' datatype='real' name='[Calculation_3815956273448067093]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([Cumulative_deaths]) / SUM([Population]) * 100000' />
      </column>
      <column caption='Start Date' datatype='date' name='[Calculation_3815956273647312928]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 3]' />
      </column>
      <column caption='End Date' datatype='date' name='[Calculation_3815956273647460385]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 3]' />
      </column>
      <column caption='Country (population data cleaned.csv)' datatype='string' name='[Country (population_data_cleaned.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country code' datatype='string' name='[Country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Cumulative cases (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='6' formula='[Cumulative_cases]' peg='0' size='1.47059e+06' />
      </column>
      <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
      <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
      <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
      <column caption='New cases' datatype='real' name='[New_cases]' role='measure' type='quantitative' />
      <column caption='New deaths' datatype='real' name='[New_deaths]' role='measure' type='quantitative' />
      <column datatype='real' name='[Population]' role='measure' type='quantitative' />
      <column caption='WHO region' datatype='string' name='[WHO_region]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;AFRO&quot;' value='AFRICA' />
          <alias key='&quot;AMRO&quot;' value='AMERICA' />
          <alias key='&quot;EMRO&quot;' value='EASTEARN MEDITTERANEAN' />
          <alias key='&quot;EURO&quot;' value='EUROPE' />
          <alias key='&quot;SEARO&quot;' value='SOUTH EAST ASIA' />
          <alias key='&quot;WPRO&quot;' value='WESTEARN PACIFIC REGION' />
        </aliases>
      </column>
      <column datatype='integer' name='[Week]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='cleaned_covid_data.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='population_data_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[population_data_cleaned.csv_5123E67F78F0476780EDAFDEDE7A9978]' role='measure' type='quantitative' />
      <column-instance column='[New_cases]' derivation='Avg' name='[avg:New_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cumulative_cases]' derivation='Max' name='[cum:max:Cumulative_cases:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[New_cases]' derivation='Sum' name='[cum:sum:New_cases:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[New_deaths]' derivation='Sum' name='[cum:sum:New_deaths:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Cumulative_cases]' derivation='Max' name='[diff:max:Cumulative_cases:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Cumulative_cases]' derivation='Max' name='[max:Cumulative_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cumulative_deaths]' derivation='Max' name='[max:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New_cases]' derivation='Max' name='[max:New_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New_deaths]' derivation='Max' name='[max:New_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[WHO_region]' derivation='None' name='[none:WHO_region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Cumulative_cases]' derivation='Sum' name='[sum:Cumulative_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cumulative_deaths]' derivation='Sum' name='[sum:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New_cases]' derivation='Sum' name='[sum:New_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New_deaths]' derivation='Sum' name='[sum:New_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3815956272906489868]' derivation='User' name='[usr:Calculation_3815956272906489868:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_3815956272908046349]' derivation='User' name='[usr:Calculation_3815956272908046349:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[New_cases]' derivation='Sum' name='[win:sum:New_cases:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,Date reported)' hidden='true' name='[Action (Country,Date reported)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[Date_reported]' />
        </groupfilter>
      </group>
      <group caption='Action (Date reported)' hidden='true' name='[Action (Date reported)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Date_reported]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:WHO_region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;AFRO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;OTHER&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;EURO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WPRO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EMRO&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;SEARO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AMRO&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ickiribati&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Türkiye&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Netherlands (Kingdom of the)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bonaire, Saint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Icvanuatu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fesco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Diamond&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chefoo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;occupied Palestinian territory, including east Jerusalem&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Barthélemy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands (Malvinas)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:WHO_region:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;OTHER&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;AFRO&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;SEARO&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;EMRO&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;AMRO&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;EURO&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;WPRO&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_3815956272899162114:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[cum:max:Cumulative_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[diff:max:Cumulative_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:Cumulative_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:Population:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[cum:sum:New_deaths:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[avg:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[cum:sum:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:New_deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272908046349:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[win:sum:New_cases:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:Cumulative_deaths:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Date Range' datatype='date' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='#2024-05-04#'>
          <calculation class='tableau' formula='#2024-05-04#' />
        </column>
      </datasource-dependencies>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{0212b8bb-e692-4b3d-af67-8a840e6aa895}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_cases:qk]' />
            <field name='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_deaths:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>2</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cleaned_covid_data.csv' id='cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E'>
            <properties context=''>
              <relation connection='textscan.1l0vw8p1hkjain194cty31cnczm1 (copy)' name='cleaned_covid_data.csv' table='[cleaned_covid_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='date' name='Date_reported' ordinal='0' />
                  <column datatype='string' name='Country_code' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='WHO_region' ordinal='3' />
                  <column datatype='real' name='New_cases' ordinal='4' />
                  <column datatype='integer' name='Cumulative_cases' ordinal='5' />
                  <column datatype='real' name='New_deaths' ordinal='6' />
                  <column datatype='integer' name='Cumulative_deaths' ordinal='7' />
                  <column datatype='integer' name='Year' ordinal='8' />
                  <column datatype='string' name='Month' ordinal='9' />
                  <column datatype='integer' name='Week' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='population_data_cleaned.csv' id='population_data_cleaned.csv_5123E67F78F0476780EDAFDEDE7A9978'>
            <properties context=''>
              <relation connection='textscan.1l0vw8p1hkjain194cty31cnczm1 (copy)' name='population_data_cleaned.csv' table='[population_data_cleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='real' name='Population' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[Country (population_data_cleaned.csv)]' />
            </expression>
            <first-end-point object-id='cleaned_covid_data.csv_EE8AB320B34E4CF8B93EF9D39B8CBA6E' />
            <second-end-point object-id='population_data_cleaned.csv_5123E67F78F0476780EDAFDEDE7A9978' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1_FC951EB355624705A115B103FEA49B09]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet'>
        <exclude-sheet name='BAN' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='BAN'>
      <layout-options>
        <title>
          <formatted-text>
            <run>BAN - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
              </semantic-values>
            </column>
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column-instance column='[Date_reported]' derivation='None' name='[none:Date_reported:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Cumulative_cases]' derivation='Sum' name='[sum:Cumulative_cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Country,Date reported)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Date_reported]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Date reported)]'>
            <groupfilter function='level-members' level='[Date_reported]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Country)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Country,Date reported)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Date reported)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:Cumulative_cases:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#00007f' fontsize='12'>CUMULATIVE CASES</run>
                <run>Æ&#10;</run>
                <run fontcolor='#f28e2b' fontsize='18'><![CDATA[<[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:Cumulative_cases:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Date_reported:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{0498FF4B-1C62-4A2A-A4CD-887E3D769B1C}' />
    </worksheet>
    <worksheet name='Bi variate'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data (2)' name='federated.1l502fs06d8sad17191mc0d7wgtl (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl (copy)'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Cumulative_cases]' derivation='Max' name='[max:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cumulative_deaths]' derivation='Max' name='[max:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_deaths:qk]' value='n#,##0,.00K;-#,##0,.00K' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_deaths:qk]</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_cases:qk]</cols>
      </table>
      <simple-id uuid='{DB409AEC-23C0-45B1-9FF2-CA9C51CDF873}' />
    </worksheet>
    <worksheet name='COVID-19 Daily New Cases and Deaths in the United Kingdom'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='11'>COVID-19 Daily New Cases and Deaths in the United Kingdom</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data (2)' name='federated.1l502fs06d8sad17191mc0d7wgtl (copy)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='National Lockdown Start' datatype='datetime' default-format='*m/d/yyyy' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2020-03-23 00:00:00#'>
              <calculation class='tableau' formula='#2020-03-23 00:00:00#' />
            </column>
            <column caption='Vaccination Rollout Start' datatype='datetime' default-format='*m/d/yyyy' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='#2020-12-08 00:00:00#'>
              <calculation class='tableau' formula='#2020-12-08 00:00:00#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl (copy)'>
            <column caption='7-Day Moving Average(new cases)' datatype='real' name='[Calculation_3815956272906489868]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([New_cases]), -3,3)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='7-Day moving average(New deaths)' datatype='real' name='[Calculation_3815956272908046349]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([New_deaths]), -3,3)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column caption='New cases' datatype='real' name='[New_cases]' role='measure' type='quantitative' />
            <column caption='New deaths' datatype='real' name='[New_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[New_cases]' derivation='Sum' name='[sum:New_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New_deaths]' derivation='Sum' name='[sum:New_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date_reported]' derivation='Day-Trunc' name='[tdy:Date_reported:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3815956272906489868]' derivation='User' name='[usr:Calculation_3815956272906489868:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_3815956272908046349]' derivation='User' name='[usr:Calculation_3815956272908046349:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom of Great Britain and Northern Ireland&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272908046349:qk]' scope='rows' value='false' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-width' value='0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dashed' />
            <format attr='stroke-color' id='refline1' value='#59a14f4b' />
            <format attr='stroke-size' value='1' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dotted' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='stroke-size' id='annotation_6' value='1' />
            <format attr='line-visibility' id='annotation_6' value='on' />
            <format attr='line-pattern-only' id='annotation_6' value='solid' />
            <format attr='body-type' id='annotation_6' value='box' />
            <format attr='fill-color' id='annotation_6' value='#e6e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[:Measure Names]' />
              <tooltip column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_cases:qk]' />
              <tooltip column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_deaths:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]' enable-instant-analytics='true' formula='min' id='refline0' label='Lockdown Start' label-type='custom' scope='per-pane' value-column='[Parameters].[Parameter 1]' z-order='1' />
            <reference-line axis-column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]' enable-instant-analytics='true' formula='min' id='refline1' label-type='automatic' scope='per-pane' value-column='[Parameters].[Parameter 2]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[:Measure Names]' />
              <tooltip column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_cases:qk]' />
              <tooltip column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272908046349:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[:Measure Names]' />
              <tooltip column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_cases:qk]' />
              <tooltip column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk] + [federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272908046349:qk])</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]</cols>
        <annotations>
          <annotation class='point' id='5' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='8'>Peak in new cases (July 2022): Possible influence of the Delta variant and easing of lockdown measures</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_cases:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_deaths:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>195623.0</value>
                    <value>679.0</value>
                    <value>#2022-07-10 00:00:00#</value>
                    <value>133380.14285714287</value>
                    <value>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='138' y='-60' />
          </annotation>
          <annotation class='point' id='6' mark-position='1' pullback='12' text-width='163'>
            <formatted-text>
              <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='8'>Peak in new cases (January 2022): Potential impact of the Covid Alpha variant and winter surge.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_cases:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_deaths:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>723565.0</value>
                    <value>1648.0</value>
                    <value>#2022-01-16 00:00:00#</value>
                    <value>898576.42857142852</value>
                    <value>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272906489868:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-185' y='56' />
          </annotation>
          <annotation class='point' id='7' mark-position='1' pullback='12' text-width='141'>
            <formatted-text>
              <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='8'>Peak in new deaths (January 2021): Lagged effect of the surge in cases on mortality rates.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272908046349:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_cases:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_deaths:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272908046349:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>246142.0</value>
                    <value>9723.0</value>
                    <value>#2021-01-24 00:00:00#</value>
                    <value>7237.1428571428569</value>
                    <value>&quot;[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956272908046349:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='241' y='121' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{5417EE42-B3B4-41E9-8C8C-E2E38AC340D6}' />
    </worksheet>
    <worksheet name='CUMULATIVE CASES BAR'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#00007f'>TOP 10 CUMULATIVE CASE</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
              </semantic-values>
            </column>
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date_reported]' derivation='None' name='[none:Date_reported:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Cumulative_cases]' derivation='Sum' name='[sum:Cumulative_cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Date reported)]'>
            <groupfilter function='level-members' level='[Date_reported]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Cumulative_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Country)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Date reported)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:Cumulative_cases:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:Cumulative_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-color' value='#4e79a7' />
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:Cumulative_cases:qk]</cols>
        <pages>
          <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Date_reported:ok]</column>
        </pages>
        <page-trail-options mark-type='all' />
      </table>
      <simple-id uuid='{26375CF3-B2FA-4D2D-81A9-097D1F281BD5}' />
    </worksheet>
    <worksheet name='Case_Fatality_Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Highest CFR</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column caption='Case fatality ratio' datatype='real' default-format='p0.00%' name='[Calculation_2164824051232415744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([Cumulative_deaths]) / MAX([Cumulative_cases])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
              </semantic-values>
            </column>
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date_reported]' derivation='Month-Trunc' name='[tmn:Date_reported:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2164824051232415744]' derivation='User' name='[usr:Calculation_2164824051232415744:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_2164824051232415744]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;North Macedonia&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
              <bucket>&quot;Eswatini&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Diamond&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Czechia&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;French Polynesia&quot;</bucket>
              <bucket>&quot;occupied Palestinian territory, including east Jerusalem&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Guam&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Curaçao&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Aruba&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Türkiye&quot;</bucket>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
              <bucket>&quot;Timor-Leste&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Montserrat&quot;</bucket>
              <bucket>&quot;Gibraltar&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
              <bucket>&quot;Guadeloupe&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Martinique&quot;</bucket>
              <bucket>&quot;Puerto Rico&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Mayotte&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;French Guiana&quot;</bucket>
              <bucket>&quot;Liechtenstein&quot;</bucket>
              <bucket>&quot;American Samoa&quot;</bucket>
              <bucket>&quot;New Caledonia&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
              <bucket>&quot;Viet Nam&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Bonaire, Saint Eustatius and Saba&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Anguilla&quot;</bucket>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
              <bucket>&quot;Isle of Man&quot;</bucket>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Netherlands (Kingdom of the)&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
              <bucket>&quot;Jersey&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Guernsey&quot;</bucket>
              <bucket>&quot;Réunion&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Greenland&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Palau&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Cayman Islands&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Marshall Islands&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;Saint Barthélemy&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Faroe Islands&quot;</bucket>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;Tuvalu&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Cook Islands&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Nauru&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Tokelau&quot;</bucket>
              <bucket>&quot;Saint Helena&quot;</bucket>
              <bucket>&quot;Pitcairn&quot;</bucket>
              <bucket>&quot;Niue&quot;</bucket>
              <bucket>&quot;Icvanuatu&quot;</bucket>
              <bucket>&quot;Ickiribati&quot;</bucket>
              <bucket>&quot;Holy See&quot;</bucket>
              <bucket>&quot;Fesco&quot;</bucket>
              <bucket>&quot;Falkland Islands (Malvinas)&quot;</bucket>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
              <bucket>&quot;Chefoo&quot;</bucket>
              <bucket>&quot;Charo&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]' included-values='in-range' />
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' scope='cols' value='auto' />
            <format attr='display' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' value='true' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='0' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' />
              <text column='[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.0434806346893311' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]</cols>
        <pages>
          <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[tmn:Date_reported:ok]</column>
        </pages>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
      <simple-id uuid='{7F743258-32FD-466A-9802-F82AC56E288E}' />
    </worksheet>
    <worksheet name='Cases and Death per 100k'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cases and Deaths By 100k</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data (2)' name='federated.1l502fs06d8sad17191mc0d7wgtl (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl (copy)'>
            <column caption='cases per 100k' datatype='real' name='[Calculation_3815956273447686164]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([Cumulative_cases]) / SUM([Population]) * 100000' />
            </column>
            <column caption='Deaths per 100k' datatype='real' name='[Calculation_3815956273448067093]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([Cumulative_deaths]) / SUM([Population]) * 100000' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3815956273447686164]' derivation='User' name='[usr:Calculation_3815956273447686164:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3815956273448067093]' derivation='User' name='[usr:Calculation_3815956273448067093:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956273447686164:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956273447686164:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956273447686164:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='caption'>
            <format attr='background-color' value='#e9f3f2' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#c0c0c0' />
            <format attr='border-width' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956273447686164:qk]'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956273448067093:qk]'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]</rows>
        <cols>([federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956273447686164:qk] + [federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[usr:Calculation_3815956273448067093:qk])</cols>
      </table>
      <simple-id uuid='{51E5CD13-EA05-4563-AFB0-15D9163D0610}' />
    </worksheet>
    <worksheet name='Cum case'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative case</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data (2)' name='federated.1l502fs06d8sad17191mc0d7wgtl (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl (copy)'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column-instance column='[Cumulative_cases]' derivation='Sum' name='[sum:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date_reported]' derivation='Day-Trunc' name='[tdy:Date_reported:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Country,Date reported)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Date_reported]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Date reported)]'>
            <groupfilter function='level-members' level='[Date_reported]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Country)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Country,Date reported)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Date reported)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:Cumulative_cases:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-style' scope='cols' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='div-level' scope='rows' value='0' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:Cumulative_cases:qk]</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]</cols>
      </table>
      <simple-id uuid='{4ADDC160-326F-4B73-88CA-6CC5CE301BE3}' />
    </worksheet>
    <worksheet name='Daily new case'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Confirmed Cases - 28/01/2024&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
              </semantic-values>
            </column>
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column caption='New cases' datatype='real' name='[New_cases]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date_reported]' derivation='None' name='[none:Date_reported:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New_cases]' derivation='Sum' name='[sum:New_cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom of Great Britain and Northern Ireland&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]' included-values='in-range' />
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='1' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.33983424305915833' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-color' value='#c0c0c0' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk] + [federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk])</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Date_reported:qk]</cols>
        <page-trail-options enabled='true' mark-type='all' />
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='false' fill-type='fill-zero' ignore-last='0' model-type='auto' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{BA404C81-1977-44BC-83F8-D453B51FEEF9}' />
    </worksheet>
    <worksheet name='Dashboard Title'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
              </semantic-values>
            </column>
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column-instance column='[Date_reported]' derivation='Year-Trunc' name='[tyr:Date_reported:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date_reported]' derivation='Year-Trunc' name='[tyr:Date_reported:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Country,Date reported)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Date_reported]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Date reported)]'>
            <groupfilter function='level-members' level='[Date_reported]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[tyr:Date_reported:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tyr:Date_reported:ok]' />
              <groupfilter from='#2020-01-01 00:00:00#' function='range' level='[tyr:Date_reported:ok]' to='#2023-01-01 00:00:00#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Country)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Country,Date reported)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Date reported)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[tyr:Date_reported:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#151e55' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1l502fs06d8sad17191mc0d7wgtl].[tyr:Date_reported:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontalignment='0' fontcolor='#ffffff' fontsize='20'>Global COVID-19 DashBoard</run>
                <run fontalignment='0'>Æ&#10;</run>
                <run bold='true' fontalignment='0' fontcolor='#ffffff' fontsize='12'>January 5,2020 - January 28,2024</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{342040F3-6F3B-450E-AC3C-0D0C4B9B8997}' />
    </worksheet>
    <worksheet name='Death BAN'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data (2)' name='federated.1l502fs06d8sad17191mc0d7wgtl (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl (copy)'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column-instance column='[Date_reported]' derivation='None' name='[none:Date_reported:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Cumulative_deaths]' derivation='Sum' name='[sum:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Country,Date reported)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Date_reported]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Country)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Country,Date reported)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='font-size' value='9' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:Cumulative_deaths:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#00007f' fontsize='12'>CUMULATIVE DEATHS</run>
                <run>Æ&#10;</run>
                <run fontcolor='#f28e2b' fontsize='20'><![CDATA[<[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:Cumulative_deaths:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Date_reported:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{B1E8FB4A-D9B9-41C3-A88D-092A3A939812}' />
    </worksheet>
    <worksheet name='Geeographical(New deaths)'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
              </semantic-values>
            </column>
            <column caption='New deaths' datatype='real' name='[New_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[New_deaths]' derivation='Sum' name='[sum:New_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[Latitude (generated)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_deaths:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' />
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_deaths:qk]' />
              <geometry column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l502fs06d8sad17191mc0d7wgtl].[Latitude (generated)]</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F1191C6D-78DA-45DC-AF11-382EF5CAD911}' />
    </worksheet>
    <worksheet name='Geographical'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='10'>Global Distribution of COVID-19 Cases and Deaths: A comprehensive view of the pandemic’s impact across different countries.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data (2)' name='federated.1l502fs06d8sad17191mc0d7wgtl (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl (copy)'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{0212b8bb-e692-4b3d-af67-8a840e6aa895}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column caption='WHO region' datatype='string' name='[WHO_region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFRO&quot;' value='AFRICA' />
                <alias key='&quot;AMRO&quot;' value='AMERICA' />
                <alias key='&quot;EMRO&quot;' value='EASTEARN MEDITTERANEAN' />
                <alias key='&quot;EURO&quot;' value='EUROPE' />
                <alias key='&quot;SEARO&quot;' value='SOUTH EAST ASIA' />
                <alias key='&quot;WPRO&quot;' value='WESTEARN PACIFIC REGION' />
              </aliases>
            </column>
            <column-instance column='[Cumulative_cases]' derivation='Max' name='[max:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cumulative_deaths]' derivation='Max' name='[max:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[WHO_region]' derivation='None' name='[none:WHO_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date_reported]' derivation='Day-Trunc' name='[tdy:Date_reported:qk]' pivot='key' type='quantitative' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
                  <map to='#4e79a7'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#76b7b2'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#f28e2b'>
                    <bucket>2</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:WHO_region:nk]'>
            <groupfilter function='level-members' level='[none:WHO_region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]' included-values='in-range'>
            <min>#2020-01-05 00:00:00#</min>
            <max>#2024-01-28 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:WHO_region:nk]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Latitude (generated)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_cases:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='marine-label-sm-ln' value='true' />
            <format attr='enabled' id='marine-label-sm-pt' value='true' />
            <format attr='enabled' id='marine-label-md-ln' value='true' />
            <format attr='enabled' id='marine-label-md-pt' value='true' />
            <format attr='enabled' id='marine-label-lg-ln' value='true' />
            <format attr='enabled' id='marine-label-lg-pt' value='true' />
            <format attr='enabled' id='water-label' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_deaths:qk]' />
              <lod column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]' />
              <lod column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_cases:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:AdhocCluster:1:ok] * [federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Latitude (generated)])</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{AF980491-100B-46FC-932C-6511AE62103E}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#00007f'>CUMULATIVE CASES AND DEATHS</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontsize='9'>Select a Country to see more details</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
              </semantic-values>
            </column>
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column-instance column='[Cumulative_cases]' derivation='Max' name='[max:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cumulative_deaths]' derivation='Max' name='[max:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Country,Date reported)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Date_reported]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Date reported)]'>
            <groupfilter function='level-members' level='[Date_reported]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[Longitude (generated)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Country,Date reported)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[Action (Date reported)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' />
              <size column='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]' />
              <tooltip column='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.4832596778869629' />
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l502fs06d8sad17191mc0d7wgtl].[Latitude (generated)]</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{80B952C1-2D39-498C-A529-72AC5DD78668}' />
    </worksheet>
    <worksheet name='Regional Comparison'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Comparison of cumulative COVID-19 cases and deaths across the different WHO regions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column caption='WHO region' datatype='string' name='[WHO_region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFRO&quot;' value='AFRICA' />
                <alias key='&quot;AMRO&quot;' value='AMERICA' />
                <alias key='&quot;EMRO&quot;' value='EASTEARN MEDITTERANEAN' />
                <alias key='&quot;EURO&quot;' value='EUROPE' />
                <alias key='&quot;SEARO&quot;' value='SOUTH EAST ASIA' />
                <alias key='&quot;WPRO&quot;' value='WESTEARN PACIFIC REGION' />
              </aliases>
            </column>
            <column-instance column='[Cumulative_cases]' derivation='Max' name='[max:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cumulative_deaths]' derivation='Max' name='[max:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date_reported]' derivation='None' name='[none:Date_reported:ok]' pivot='key' type='ordinal' />
            <column-instance column='[WHO_region]' derivation='None' name='[none:WHO_region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:WHO_region:nk]' />
              <groupfilter function='member' level='[none:WHO_region:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <natural-sort column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]' direction='ASC' />
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_deaths:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.98850828409194946' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.98850828409194946' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk] + [federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_deaths:qk])</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</cols>
        <pages>
          <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Date_reported:ok]</column>
        </pages>
        <page-trail-options mark-type='all' />
      </table>
      <simple-id uuid='{EDC6A9D2-8168-41F5-87C8-BDD4BC8A99E5}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
              </semantic-values>
            </column>
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column caption='New cases' datatype='real' name='[New_cases]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[New_cases]' derivation='Sum' name='[sum:New_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date_reported]' derivation='Day-Trunc' name='[tdy:Date_reported:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='line-interpolation' value='step' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.7911050319671631' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.4172928333282471' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='line-interpolation' value='step' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk] + [federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk])</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl].[tdy:Date_reported:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>The hightest recorded daily case </run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Day of Date reported: </run>
              <run bold='true'><![CDATA[<[federated.1l502fs06d8sad17191mc0d7wgtl].[tdy:Date_reported:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New cases: </run>
              <run bold='true'><![CDATA[<[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor y-index='1'>
                      <x-fields y-index='1'>
                        <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[tdy:Date_reported:qk]</field>
                      </x-fields>
                      <y-fields y-index='1'>
                        <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_cases:qk]</field>
                      <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[tdy:Date_reported:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>44236227.0</value>
                    <value>#2022-12-25 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
      <simple-id uuid='{503B1493-F866-4CFE-9D96-4B93DF44E10B}' />
    </worksheet>
    <worksheet name='Univariate'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Univariate&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data (2)' name='federated.1l502fs06d8sad17191mc0d7wgtl (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl (copy)'>
            <column datatype='integer' name='[Cumulative cases (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='6' formula='[Cumulative_cases]' peg='0' size='1.47059e+06' />
            </column>
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column-instance column='[Cumulative_cases]' derivation='Count' name='[cnt:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cumulative cases (bin)]' derivation='None' name='[none:Cumulative cases (bin):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[cnt:Cumulative_cases:qk]</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Cumulative cases (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Cumulative cases (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{C26A4C9C-8282-4A14-827F-17FBD9A99B87}' />
    </worksheet>
    <worksheet name='comparative'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Comparative Analysis of COVID-19 Cases, Deaths, and Case Fatality Rates</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column caption='Case fatality ratio' datatype='real' default-format='p0.00%' name='[Calculation_2164824051232415744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([Cumulative_deaths]) / MAX([Cumulative_cases])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
              </semantic-values>
            </column>
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column caption='WHO region' datatype='string' name='[WHO_region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFRO&quot;' value='AFRICA' />
                <alias key='&quot;AMRO&quot;' value='AMERICA' />
                <alias key='&quot;EMRO&quot;' value='EASTEARN MEDITTERANEAN' />
                <alias key='&quot;EURO&quot;' value='EUROPE' />
                <alias key='&quot;SEARO&quot;' value='SOUTH EAST ASIA' />
                <alias key='&quot;WPRO&quot;' value='WESTEARN PACIFIC REGION' />
              </aliases>
            </column>
            <column-instance column='[Cumulative_cases]' derivation='Max' name='[max:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cumulative_deaths]' derivation='Max' name='[max:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[WHO_region]' derivation='None' name='[none:WHO_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2164824051232415744]' derivation='User' name='[usr:Calculation_2164824051232415744:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]'>
            <groupfilter function='member' level='[none:WHO_region:nk]' member='&quot;AFRO&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' scope='rows' value='#00000000' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='tick-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]' value='p0%' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#005500' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</rows>
        <cols>([federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk] + ([federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_deaths:qk] + [federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]))</cols>
      </table>
      <simple-id uuid='{EF0E79EB-20CC-4C36-81D7-89B56E6E12C4}' />
    </worksheet>
    <worksheet name='correlation'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Correlation between COVID-19 Cases and Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data' name='federated.1l502fs06d8sad17191mc0d7wgtl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl'>
            <column caption='correlation coefficient' datatype='real' name='[Calculation_3815956272936787984]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR([Cumulative_cases], [Cumulative_deaths])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Chefoo&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;' value='&quot;Kosovo&quot;' />
                <semantic-value key='&quot;Netherlands (Kingdom of the)&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;occupied Palestinian territory, including east Jerusalem&quot;' value='&quot;Palestinian Territories&quot;' />
              </semantic-values>
            </column>
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column caption='WHO region' datatype='string' name='[WHO_region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AFRO&quot;' value='AFRICA' />
                <alias key='&quot;AMRO&quot;' value='AMERICA' />
                <alias key='&quot;EMRO&quot;' value='EASTEARN MEDITTERANEAN' />
                <alias key='&quot;EURO&quot;' value='EUROPE' />
                <alias key='&quot;SEARO&quot;' value='SOUTH EAST ASIA' />
                <alias key='&quot;WPRO&quot;' value='WESTEARN PACIFIC REGION' />
              </aliases>
            </column>
            <column-instance column='[Cumulative_cases]' derivation='Max' name='[max:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cumulative_deaths]' derivation='Max' name='[max:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[WHO_region]' derivation='None' name='[none:WHO_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3815956272936787984]' derivation='User' name='[usr:Calculation_3815956272936787984:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]'>
            <groupfilter function='level-members' level='[none:WHO_region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='tick-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' value='false' />
            <format attr='background-color' value='#e6ecf0' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='1' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' />
              <lod column='[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_3815956272936787984:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.82359117269515991' />
                <format attr='mark-color' value='#b6992d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_deaths:qk]</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]</cols>
      </table>
      <simple-id uuid='{16817D13-7588-47FA-9917-DA09E2CB9475}' />
    </worksheet>
    <worksheet name='cum deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative Deaths&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data (2)' name='federated.1l502fs06d8sad17191mc0d7wgtl (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl (copy)'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column-instance column='[Date_reported]' derivation='None' name='[none:Date_reported:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cumulative_deaths]' derivation='Sum' name='[sum:Cumulative_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Country,Date reported)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Date_reported]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Date reported)]'>
            <groupfilter function='level-members' level='[Date_reported]' user:ui-action-filter='[Action1_FC951EB355624705A115B103FEA49B09]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Country)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Country,Date reported)]</column>
            <column>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[Action (Date reported)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Date_reported:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:Cumulative_deaths:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
        </panes>
        <rows>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:Cumulative_deaths:qk]</rows>
        <cols>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Date_reported:qk]</cols>
      </table>
      <simple-id uuid='{BBEA3B85-2926-4AFD-889B-0C592D413972}' />
    </worksheet>
    <worksheet name='multi-variate'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_data (2)' name='federated.1l502fs06d8sad17191mc0d7wgtl (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1l502fs06d8sad17191mc0d7wgtl (copy)'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column caption='New cases' datatype='real' name='[New_cases]' role='measure' type='quantitative' />
            <column caption='New deaths' datatype='real' name='[New_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[New_cases]' derivation='Sum' name='[sum:New_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New_deaths]' derivation='Sum' name='[sum:New_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date_reported]' derivation='Year-Trunc' name='[tyr:Date_reported:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_deaths:qk]' />
              <size column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_cases:qk]' />
              <text column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]' />
              <text column='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tyr:Date_reported:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{AF6919BF-A10E-4DE2-9840-932CEAF79F88}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='1100' maxwidth='1500' minheight='1100' minwidth='1500' sizing-mode='fixed' />
      <zones>
        <zone h='33250' id='3' name='Geographical' w='33300' x='3300' y='4125' />
        <zone h='33250' id='12' name='Regional Comparison' w='33300' x='3300' y='38625' />
        <zone h='25125' id='15' name='Case_Fatality_Rate' w='45400' x='2400' y='73500' />
        <zone h='73875' id='19' name='COVID-19 Daily New Cases and Deaths in the United Kingdom' w='44500' x='37500' y='6875' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='39' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98546' id='38' param='vert' type-v2='layout-flow' w='98934' x='533' y='727'>
                <zone fixed-size='280' h='33250' id='3' is-fixed='true' name='Geographical' w='33300' x='3300' y='4125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='73875' id='19' is-fixed='true' name='COVID-19 Daily New Cases and Deaths in the United Kingdom' w='44500' x='37500' y='6875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='33250' id='12' is-fixed='true' name='Regional Comparison' w='33300' x='3300' y='38625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='276' h='25125' id='15' is-fixed='true' name='Case_Fatality_Rate' w='45400' x='2400' y='73500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B6F7BDC4-1CC1-4100-8455-CD434238973D}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='21053' id='11' name='Cum case' show-title='false' w='29446' x='432' y='26488' />
        <zone h='27831' id='13' name='cum deaths' show-title='false' w='27943' x='1702' y='55662' />
        <zone h='8485' id='15' name='BAN' show-title='false' w='24948' x='2571' y='17883' />
        <zone h='66529' id='20' name='Map' w='42948' x='30042' y='18714' />
        <zone h='69002' id='21' name='CUMULATIVE CASES BAR' w='25089' x='74318' y='14839' />
        <zone h='8079' id='26' name='Dashboard Title' show-title='false' w='96121' x='1763' y='2061' />
        <zone h='7026' id='27' name='Death BAN' show-title='false' w='26407' x='1529' y='47901' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='31' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98464' id='30' param='vert' type-v2='layout-flow' w='98866' x='567' y='768'>
                <zone fixed-size='65' h='8079' id='26' is-fixed='true' name='Dashboard Title' show-title='false' w='96121' x='1763' y='2061'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='69002' id='21' is-fixed='true' name='CUMULATIVE CASES BAR' w='25089' x='74318' y='14839'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='68' h='8485' id='15' is-fixed='true' name='BAN' show-title='false' w='24948' x='2571' y='17883'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='66529' id='20' is-fixed='true' name='Map' w='42948' x='30042' y='18714'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='168' h='21053' id='11' is-fixed='true' name='Cum case' show-title='false' w='29446' x='432' y='26488'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='56' h='7026' id='27' is-fixed='true' name='Death BAN' show-title='false' w='26407' x='1529' y='47901'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='223' h='27831' id='13' is-fixed='true' name='cum deaths' show-title='false' w='27943' x='1702' y='55662'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2836DAFD-CC0D-42CA-B712-76C3D0D14DB2}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='Geographical'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:WHO_region:nk]' type='filter' />
            <card param='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[tdy:Date_reported:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_deaths:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[:Measure Names]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[dy:Date_reported:ok]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[md:Date_reported:ok]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:WHO_region:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Date_reported:qk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[tmn:Date_reported:ok]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[tmn:Date_reported:qk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{66520ADA-82E7-48DB-A2EE-6451B512C4C7}' />
    </window>
    <window class='worksheet' name='Univariate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8961400D-39DD-4CD0-9381-B2A1A671B42D}' />
    </window>
    <window class='worksheet' name='Bi variate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{913FD3A7-1F76-46B9-93B1-8B06088F731D}' />
    </window>
    <window class='worksheet' name='multi-variate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[sum:New_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_deaths:qk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6857FDB6-889C-4D44-B659-19C69200CDD2}' />
    </window>
    <window class='worksheet' name='Regional Comparison'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='2' param='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2024-01-28#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D19B8547-E473-4F7F-A1D7-491C18FB6D71}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country_code:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{04CBEC74-366B-458D-AE93-E371A8CC4EA7}' />
    </window>
    <window class='worksheet' name='CUMULATIVE CASES BAR'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2024-01-28#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5D676135-12E3-4464-B708-153B21C6CE96}' />
    </window>
    <window class='worksheet' name='BAN'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2024-01-28#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Date_reported:ok]</field>
                  <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:Cumulative_cases:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>#2024-01-28#</value>
                <value>774469939</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8F6EBAC6-BC72-4F5E-9D67-E7995C890B3A}' />
    </window>
    <window class='worksheet' name='Cases and Death per 100k'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:WHO_region:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{855C5578-620E-4723-ACF8-1B01C6A27C25}' />
    </window>
    <window class='worksheet' name='Daily new case'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-11-29#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[mn:Date_reported:ok]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Month:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{13529267-3025-4B63-AAD6-4114C2691EA4}' />
    </window>
    <window class='worksheet' name='Case_Fatality_Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' type='color' />
            <card param='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2024-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A2A9DE4C-7AFC-4553-8235-1CEB30A4A3AF}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-03-01#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC1FE197-96EB-42EF-9BFE-169A789EBFA8}' />
    </window>
    <window class='worksheet' name='COVID-19 Daily New Cases and Deaths in the United Kingdom'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='1' param='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[:Measure Names]' type='color' />
            <card mode='datetime' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='datetime' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[:Measure Names]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8A9D9D82-961A-4C95-AD09-26ACF6247CD5}' />
    </window>
    <window class='worksheet' name='Cum case'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[md:Date_reported:ok]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Month:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[yr:Date_reported:ok]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D5AC1738-50C3-46C9-A448-AFA1CA16AABC}' />
    </window>
    <window class='worksheet' name='cum deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DACAE7A7-145B-4DC3-85E9-ED5E0AAC92BA}' />
    </window>
    <window class='worksheet' name='Death BAN'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2024-01-28#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Calculation_3815956273647534114:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[yr:Date_reported:ok]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{70A31CFF-0DDF-472B-816F-568F8307B9B4}' />
    </window>
    <window class='worksheet' name='comparative'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.1l502fs06d8sad17191mc0d7wgtl].[usr:Calculation_2164824051232415744:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7B6A0CD3-A7E1-4B6E-ABF0-6A28DE2CD2B3}' />
    </window>
    <window class='worksheet' name='correlation'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</field>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{348B4C57-5507-432D-B268-13EF43082C65}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='COVID-19 Daily New Cases and Deaths in the United Kingdom'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Case_Fatality_Rate'>
          <current-page>
            <multibucket>
              <bucket>#2024-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Geographical'>
          <zoom type='entire-view' />
          <highlight field='[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[max:Cumulative_deaths:qk]' type='size'>
            <bucket-selection />
          </highlight>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Regional Comparison'>
          <current-page>
            <multibucket>
              <bucket>#2024-01-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <highlight field='[federated.1l502fs06d8sad17191mc0d7wgtl].[none:WHO_region:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview selected='Desktop'>
        <device is-portrait='true' name='Generic Desktop Monitor' type='Desktop' />
      </device-preview>
      <simple-id uuid='{B6DD895C-576C-49F4-9B8A-903F24DF2EF9}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='BAN'>
          <current-page>
            <multibucket>
              <bucket>#2024-01-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='CUMULATIVE CASES BAR'>
          <current-page>
            <multibucket>
              <bucket>#2024-01-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Cum case'>
          <current-page>
            <multibucket>
              <bucket>#2024-01-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Dashboard Title'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Death BAN'>
          <current-page>
            <multibucket>
              <bucket>#2024-01-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <highlight field='[federated.1l502fs06d8sad17191mc0d7wgtl].[max:Cumulative_cases:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='cum deaths'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <axis>[federated.1l502fs06d8sad17191mc0d7wgtl (copy)].[none:Date_reported:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true' />
      <simple-id uuid='{66FAAA07-A128-4C42-BEC6-AEE630DE840A}' />
    </window>
    <window class='worksheet' name='Dashboard Title'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5545BB37-836D-404B-9464-669C649D2CCC}' />
    </window>
    <window class='worksheet' name='Geeographical(New deaths)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l502fs06d8sad17191mc0d7wgtl].[sum:New_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l502fs06d8sad17191mc0d7wgtl].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7208CC41-1798-41B6-8DD2-DFCA22BF0B7F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='BAN' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAI3ElEQVR4nO3Z3W9bdx3H8ffxYxI3TZzmoXGyLunDyta1nQYt63jYOmm7QIgLhMSEBEII
      hOA/QUIMLrhAIBBr0YQ6pl0wLigbK5pI16Vds+ZxTdq0iR0nbuzYjp99zuGiKKUaYto6kmbf
      z+vO9vn5HH3tt8+x7fi+7yNiVGCrD0BkK4UAfN/n9dT6Vh+LyKbTGUBMUwBimgIQ0xSAmKYA
      xDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYA
      xDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYA
      xDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYA
      xDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYA
      xDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYA
      xDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYA
      xDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpgPuc63pMXkxRyFVIL+QBSC/kKa5V
      WZjNArAwlyWfLZNeyOP7PumFPOX1OvlsBQDf85m5nMb3feYmVhgbWWDmcpp8tsJKsoDb9KjX
      mqyurDN5McXYyALFtSoAzYbLxDtJSoUajbrL7PgKANVKg/ELi5SKNVI31hgbWeDmbJZqucH4
      hSSlYm0LpvXRKYD73KmfjZDPVsiulPjrmQkAzr48yftXljn9ixE8z+ePv7zA+Dspzv7H44tz
      WSYvpgC4cXWVV3/3LtmVEgB/PjUGwMRokpuzWSYuphh9c55cpszZlyc29u37Pr/9yVuUijVy
      mRLvnV/gtT+MUas0OP3CCNVKk+tTt3jjlSmaTQ+A0z8foVppMD99a9NmdC8UwH3M930cx+HE
      s/sYOtj9gccHh+NceXuRgeH4/3ye0XPzHH9mmAtvXGffoV56Eu0cfGw3AEeeGGRyNMX8+6sM
      f6ab7EqJsZEFyqU6nuvTFotw/Jm9DOyNMzGaYv+jfbx3fpFjTw9z/uwc9VoT1/W4cn6RpRtr
      fPapoX/f7/5fZvJJUwD3Mcdx8H2fkbNzzM/colJqcP5v16iW6jjA0Scf4OVfjfLo8QEAmk2P
      t1+/RjFXAcfh+vQtbl5dpZCt0NUTI5Mq4vv+XfsIR4LUq01CoQCO49DVG+PoiQdoi0UIBB3K
      pToX3rjG/Mwt6rUmA0OdzE1mWC9UOf7MMJMXUwSDAQ4/MUj/gx2UCjWOnRzeOPvc7xz/Nl5P
      rW/1sch/4boeM5fTDO6NE4mGuDq+zIHDfTTqLsFggOxKia7eGI26S2sszMxYmn2P9AJw9coy
      HV2ttO2I0Duwk+XFAr0D7SzdzJN4sJN8tkJHVyuZpSLhcJCOXa1MXVqiUXfZ+3AP7Z0tNBsu
      M5fTJIY68X2I97SxkiwQaQmTvJ7j4NHdZJaKZFJF4j0x2juiJOfXOHh0N+FIcIun9+EUgJim
      SyAxTQGIaaGtPgD5cO0rl9iZuQRApJxh4ciP6J17Fcdv4ngutVg/mb1fA6B39k80WrrIDZ68
      +0k8l6FLP2Xp4W9TiyXYces9OpdGqMUSZIa/Sjx5jra1q7iRdtIHvgmOs7Fu9+wZQrU867sO
      sZb4IvHFc8TWZsD3yA6epNKxj76rZwjVCxS7D5Pvf3Izx3NPFMA2UOx9nGLv4+C5JKZP0Yx0
      kHrkuwDEF/9OtX0PALHsFH4gTKTywd/ge+Zfo7ZjkECzSqBZoT1zmcXDPwTfJ9goEqlkSD76
      A3Yuj9Kx/Db53U8A0Jk+T6H7Mcrxg/RPn6LYfYS13Z8nN/gUeE0S06eJlFco9H6Ocud++qdf
      ZH3XYdxI+6bN517oEmgbiS+9RS7xhbs+nVsLN6js3IvjNti5Mkou8aUPrIuuL+IFo1Rj/QC0
      5eeIllIMjP+anvnX8J0g4eoqeC6Nli5a89c21nrBFlpKKcCjGe2gpbgAToCB8d8w9O4LrO55
      Di8YJVpKge/hhtuJric3YxyfCAWwXXgurfnrVDr2b9wVT90Jom/2zO1Lm9UrtKwvEqqt3d7I
      9+ifeYlGyy7aCteJZafA98gNniR56PsEGmUCXpPs4EkSU79nx+o4XrBlYx+F3sfxA0ESUy8S
      LaXxQm34wQjJQ98jM/QV4sk3KfQdAzwS06eIVFbwQq2bPJyPTwFsE53pEdb6T9z59PddWgt3
      gsj3HaMRvfsf4eh6EnyP1T3P4jt3Xupy5wE6l/5JoFkmXMvhhlpuX1Y9/B3CtRxr/SdwvAaR
      UhrHd1nveoTl/d/A8ZpU2h+gPXMZx2tSiyUI1Ys4XpP1XYdZ3v91HN+j2j64aXO5V/oOsE24
      oRjlzoc2boerObKDJzeCqHQeACDQrNJo2UUz0kH/9GkWjvyYYs9jADSicZrRTrxQK0sPPU/f
      7Cus7nkOPxChLT9H9/xfyA18mXqsn3jyHM1IB43WbuKptwg2yiwd/BY4QbxAiP6Zl3BDLSw9
      9DwA8eQ/CLjVjW22C/0R9ikVaJQI1/PUYomPvtj3ac3PUenc/+HbbnM6A3xKeeEYtXDs4y12
      HBNvftB3ADFOAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYA
      xDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYA
      xDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYA
      xDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYA
      xLR/AeFXGEum5ZWXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Bi variate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='COVID-19 Daily New Cases and Deaths in the United Kingdom' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='CUMULATIVE CASES BAR' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Case_Fatality_Rate' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAS0klEQVR4nO3d23Mb53nH8e9igQVAHAgQJEESJEWLkkhZsl0rcqM4iZ2k8bitPZNpPJOL
      3nh601z3uv0PepeLzmR6kelMO+NcZRpnPM44aeJEVmTZkiWZEkVRPIhHEMT5vLvYRS/sKFZ8
      qGsDBMH3+dyIBMh3H0n8Ee+72Oddrd1utxFCQZqmaZ5eFyFEL0kAhNIkAEJpEgChNAmAUJoE
      QCitbwLgOE6vSxBHUN8EQIhukAAIpUkAhNIkAEJp3l4X8HmVtwrs39jsdRl9aezJY0Snhnpd
      xqHUNwFotxzsmtXrMvqS23J7XcKhJVMgoTQJgFBaT6ZAu7u7DIb8OEaESMDXixKUUygUeP31
      13nxxRf59a9/zdDQEM888wyXLl0im81y5swZbt++ja7rVKtVHn/8cVKpFJFIpNeld1VPAqA7
      Te5ulpkeNbm6sMlQfIRyvYhle4jHozRKRbRABM0q43hDPP7oXC/KPFLi8ThjY2MANBoNms0m
      AK7r8uijjxIKhYjFYkxMTHDx4kWuXLnC+Pg4zz33XC/L7rqeBGB0MkWxtk0xu48vEEJz2kzP
      TLG/38LrFsiVakzHR/AE+2aNfuhlMhnef/99IpEIgUAAx3HIZDLYts2NGzd47rnn8Pv9zM7O
      UiqVaDabFAqFXpfddVpvWiJdmk0bv6Gzu5shMZxA9+q0Wm00zaVZq9DWgwQDHwTAb/jJr+yx
      e2X94Es9AlIXZok9MtzrMg4dTdO0Hv2K9RAI+AGYSE08eNSrf/Cn3/D3oiihIDkLJJQmARBK
      69Ea4P/PrDVpyTvBX4g/GsQrp5s/RtM0rW8C4DgOuq73ugxxhMi+QEJ5EgChNAmAUJoEQChN
      AiCUJgEQSpMACKVJAITS+uZ6Y9fcw6nf7XUZgI4x/M1eFyE6pG8C4NTWsLb+s9dlgMeQABwh
      MgUSSpMACKX1LAC21aRUqfLn1+K1Wq0eVfT5tdtt3nnnHd544w1c16Ver/Pb3/6WarXK5cuX
      yWQyXL9+nVqtRiaT6XW54jP0LAB3Fm9TqVSplCvYzRq1hsnayj3urd1n+/4a2UKZvZ1NNnf2
      elXip9I0jfPnz+Pz+dA0jZs3b5JIJPjFL37B0NAQV65coVAo8Oqrr3L16lXZ2v0Q61kAjk1N
      kdlNs7O7Q7OS4+7KGrHkJAHdpVSpsbqyRrnWwDbrvSrxM2WzWYaHh9E0Dfjgcu1UKsX29jb1
      ep1AIIDH48Hn87G/v9/jasWn6VkAypUKRsDPYGSA+zv7jCSG2N1cx+M1aGseItEIsViMcDjc
      qxI/k23bnDlzhmw2y8mTJykUCszPz6PrOt/5znc4efIkL7zwAsFgkOFhaUg/rPqmIaa5/xbW
      1k96XQZ4DKJP/FuvqxAdIA0xQnkSAKG0vnknWDNieKOP9boM0KS5/CjpmzWANMWLTpM1gFCe
      BEAoTQIglCYBEEqTAAilSQCE0iQAQmkSAKE0CYBQWt9cCsHaKly+1L3xZ0/C157u3vjiUOqf
      ALguWF28QYZz+FsxRefJFEgoTQIglPaxAKzfW2Jx8Q6VRpN228VsmtTqNfL5ArZlki+UcFo2
      xWKRluMCba5dvkip2cK2TOqNBoV8DssyWb63TMO0oO3y9uW3uHbzFq7TolAs0bJtCoUCTquF
      3XKxLIuVe0vU6k1WVlcpFwu0HIdCochBXa/abDZ55ZVXuHfvHgBvvPEGFy9eJJ1O88orr7C+
      vs5Pf/pTFhYWqFarB1OU6KqPrQEikTDlvTzlbJpCW6NZNzE9XrztFq4Z5PqtO0xPpdCNAQr1
      FpMxLxgD7G7vYJb3OHb8BHcXb+MfHMWrtVhdWeXM6VO0bAtD83BvcYGddIbYxAyjsRB7mysY
      yTns0i4ty2RtdRXd8JLf2yeTzxGOxHAP8ILt4eFhNjc3OXHiBCMjI6yurnLu3DmSySQejwfL
      srh27Rrb29s8//zzB1eY6IqPvQI4rovebhGIJdnd2WVsOM7k5ASG4aNSq5GIx/F4DZKjo3h1
      D7lsgbHJaTTHIjE6RgALbziOT9ewzToenwHAWGqaAR28wRDJqWNE/B4K+TyR+DDZ7TXMVhu3
      ZYHHi+HzoXt9DAT8lIolDurn33EcNE1D0zQymcyD7Ux2dna4c+cOXq+Xs2fPMj8//2A3CNHf
      PrUhxmpUyRTqTE6MduXA+XyOwcE4uv75liHO3SX0i7/rSi0AnJqDbzzTvfHFoaNpmvapp0GN
      YJjJYPe2JBkaSnRtbCE+LzkLJJQmARBK65+m+EYDvdHo3gH8fgiFuje+OHQ0TdP6JwCyK4To
      MNkVQihPAiCUJgEQSpMACKVJAITSJABCaRIAoTQJgFBa3/QEO5tvY177j46PG/zbf0ULRDs+
      rugPfRMAt7qPc/+tjo/bdm3kyn51yRRIKE0CIJR2YFOgdrvN7tZ9LPwcmxr/zGlHsVjA6zUI
      hw/m6kzHcfjZz37G97//ffL5PO+88w6zs7Osr68TDAYBSCaTtNtt5ubmDqQmcTAOdA2Q3stw
      fO4MOxurFKo2w7Egmf08Xp+PxMgE5UKG0OAw1VKWcCRKvZwnV7OZP3m8q3Vdv34dv98PwN7e
      HolEgoWFBVqtFo1GA7/fz+XLlzEMg6GhIUZGRrpajzg4BzoFmpufZ3X5LpW6TczQKZk2qUSM
      xFSK0u4e1UaT7Z0dACqVCrlCnt3NLdwu12XbNisrK+zs7JBKpahUKsRiMfx+P47jcP78eWZn
      ZwkEAuRyuS5XIw7SgfUDtNtttjdW8QQGCRuQr9mMxiPoGrR9Bna9yX4uRzQex/iwUb5RLdF0
      dKamJrAW/hv7jX/ueF2hH76JZyCBaZoPdnooFosMDw9TLpfxer0EAgEAqtUq0WgUj0eWTkfB
      ZzbFd+FgTB6bffB5NP7w84FBg8jgw+fjo9GDOz//xykQwOjoBzthxGKxh77mzz8X/U9+lQml
      SQCE0vqmJ9jOrdHeudrxcX2nX0TzBjo+rjj8pCleKE2a4oXyJABCaRIAoTQJgFCaBEAoTQIg
      lCYBEEqTAAil9U1PcM0yKTQ7uz26T9eZiMoFbirrmwCs5XO8dmeho2MmQmH+8cI3Ozqm6C8y
      BRJKkwAIpUkAANd12d3dBT64W/zCwgKO43Dr1i3q9Tqrq6s4jiN3hz+CDkUA3r18iavvXadW
      q5HJ5rFMk1K5TLPZpNlsdv34N27c4NKlSwC89dZb2LbNL3/5S2q1Gq+99hrLy8u8/vrrLC0t
      db0WcbAOxSLYbbsEfAZLiwvUGjbDsRix1BR7exu02zB36lTXjm2aJjdv3qRUKmHbNgMDA6TT
      aQzDYH9/n5GREWq1GtlsFk3TaDQaD7ZKEf3vUARgdHyKmZlj3F+9y4CjMxgIMDI0SGF7jbLV
      3WP7/X5efvlllpeXKRaLJBIJqtUqjzzyCCsrKySTSUKhEIFA4KHtU8TR0DcNMTe2N+U0qOgo
      aYgRypMACKUdijXA52HoOrEOLz6jfmmGV13frAGkKV50mqwBhPIkAEJpEgChNAmAUJoEQChN
      AiCUJgEQSpMACKX1zTvBbtvFaTkdHdPj8eD19M0/geiCvvnfv7T2e378hx91dMzn5v6Gf/jq
      Dzs6pugvMgUSSpMACKVJAITSergGaPLeO3cYmZxgcnz0E7/CblRpuF6ioe5etvyb3/wGTdP4
      1re+xc9//nPq9ToXLlzg4sWLPPXUU7z77rvMz88zPz9PKBTqai3iYPUwAA6Nho3H4+HWzWuU
      6y4jw4P4fV6q1QatlommQcX28Zfnznatio2NDVZWVh78YP/xZtljY2OkUilCoRCaprGwsEA6
      neaFF17oWi3i4PX0LJDP58Pj8dBug6ZBMhFlaSNPIuihqXmJRGO0ivWu1pBKpfjBD37AysoK
      mUyGYDCIpmlsbGywurrK6dOnOXv2LK7rUiqVulqLOHg9DMAAT3zlUTSPB6sSxvW1se0WU1OT
      tBsVJkZHMbw6yWSrqwsVXdeJRqM8+eSTAHz3u9998NypD7djGRsb62IFopd6GAANwzAAmD5+
      iumHnos8+Mjn8x1oVUItchZIKE0CIJTWN03xTauJ5ZodHdPQDQI+2eZQVZqmaX0TANkVQnSa
      7AohlCcBEEqTAAilSQCE0iQAQmkSAKE0CYBQmgRAKK1vmuLvbef5/c3Njox15pFRvnZmsiNj
      if7WNwHY2i/z6qW7HRtPAiBApkBCcRIAobSDnwJZFZZ3a5yYjLG0kmb+1MxDT1drVcKh8IGU
      sr6+TqvV4sSJE1y/fp1iscjMzAwrKyucPHmS9fV15ubmiEQiDAwMHEhN4mD1IAA1tjJ5Ip4m
      TavBxtoyVVMjEjLQNJ1226G4v4etB3HrRZqOl9OnO3+neNu2WVpaYnBwkBMnTjA6Osra2hpe
      r5dWq8XGxgamafLmm28yNzfHE0880fEaRO/1ZAqUCBtsFS0GDJ379++jaW0016Jct2k0GtSa
      NqmxYWzXQ1B3sbtwwXY6ncayLFZWVgAIBoOEQiGSySSnT5/GMAwajQbRaJRKpdL5AsShcPCv
      AME4J08MYzcaeL0646MJyk2XeDRE/MPtIbw47OdKpMaGabhejC7EdGpqiomJCarVKplMhlKp
      xMTEBMlkkqWlJc6fP0+pVELTNAnAEXbwAdD9BHUI+j5sfB8Y+EgL/J+kBj549JOe61gpus7g
      4CAAo6N/2pzrqaeeAiAejwMQi8W6WIXoJTkLJJQmARBK65t3gqdGBvneN+Y6MtaZmZGOjCP6
      nzTFC2VJU7xQngRAKE0CIJQmARBKkwAIpUkAhNIkAEJpEgChtL55J7hR2aGcXfjS4wyNf4VA
      6JPvSinU0zcBKKTfY+F3//Klxzn3/I8kAOKBrkyBnFaN968vsHJ/61O/xjbrmLb7f46Vy+c7
      WZoQD+nKK4DrWNRqJm1fjbV7dyhXbaJRP2bbIIhFqVxlZGQYYzDB0u27xEYmmUiEuHX7Nonh
      JOlckcFolLZZIV+3SQwNdaNMIbq1CNZITkyCY2HaLlG/B+9AlFKxCB6D4xMj1BomxVyWVtvD
      fnafUiGLq0F2L8vw+DQ+j41LgGioO7cwWltbw7Is2u02i4uLZDIZisUiV69eZW9vj62tLXK5
      HH1yraD4grryCuD1hfF6Skw/cpyg3qbcaBEJ6hjeaeKRELpHY3LQRffqZAMBYrFB/D4dW/Mz
      GIng8fnBDWDWq9ha52+TWqlU+NWvfsVLL72EYRiUSiV2dnbY399nZmaG5eVlTNOkXC7z7W9/
      WzrCjrCuBEDzeJk6duzB5yMf7igS+MjOIvqHP9fjY8kHj40l//Qx6Pj9/m6Ux3vvvYfrumxt
      bTE9PU0wGMSyLILBIIZh4PV6SafTxONxbt++zdNPP92VOkTvdTAALrVaE78XHD2A3/sFZldu
      i2qjRTgU6FxZn+CZZ55hbm6OgYEBLMui0WgwPj5OKpVid3eXCxcuMDY2RjabfahXWBw9HQ3A
      9uYuyUEoexPUcmnGx8dIp7NEoyH2ckUmRwYp1GyGo362d3JMzkyws7XLUGKE2FCMWjFHWw+y
      u7GKLxxjQHcoWzA7M9W5Mj+U/MirTSKRePDx7OwsAJOTk0xOyv6hR11Hp0D57B6NsoOpVQmG
      /ZRLGfTgMINhjRbD3F9fxhuKk2u3GA0HWdtO89jccVaWVklvbTA+PUmpWMYfjIJjUW02SGfK
      PNKFAAgBHQ2Ah5PzpwkHoO542N3eIRxNEPWG2c/cx8JgcnKSstkm5GuzfO8+p558jLtLq0wf
      P0lud4uRoRi63sSraaA5VIothhJDaJ0rUoiH9KQnuFrKk6tYTKeSaNrn+/Heu/97Vq//+5c+
      9vxX/4n42JNfehzR/+RO8UJp0hQvlCcBEEqTAAilSQCE0iQAQmkSAKE0CYBQmgRAKE0CIJTW
      N03x7268zX9d+8kX/v6/OvXXfO+xlzpYkTgK+iYAzVaTbG3/C39/zap2sBpxVMgUSChNAiCU
      1pMpUGZvj9Fkkmq1hmmaJBIf3/akWq0RDoc6etxarcbbb7+N3+/n61//OleuXGFxcZFnn32W
      GzducPbsWW7dusXs7Cyzs7MEAt1tzRS915MAlEolRpNJsrks5fw+Wzu7xMN+0tkSI7EoLSOI
      D4dyfo/tfJ3zf3G2I8cNhULouo7rfrAh17lz57Asi5mZGdbW1rBtm1KpxLVr18hmszz77LMd
      Oa44vHoyBXJaNqZlY5omoXCMgFdjL7NPKBwGTWdmehLTNMnl85RzOZwOHbdUKtFqtWg2m2Qy
      GRYXFzlz5gzr6+ssLCyQSCQ4ffo0x44dw7KsDh1VHGY9aYjJ76exNYPB8ADNWoW2L0jYr5Mt
      VEjEB/H5/ZjNJlajho2PoXiU3y3/Dz/+w4++8DFfPPN3/P1XXu7g30L0O03TtJ5MgYZGxh58
      /NF59vhY8KHHZQ4uuu1/AXXeBr+312hGAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Cases and Death per 100k' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cum case' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Daily new case' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard Title' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Death BAN' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Geeographical(New deaths)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Geographical' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Regional Comparison' width='192'>
      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
      Ft+uziIBiH2XmPon9FLmhbcze0Zw9f5kV2eRcwChNAlAKE0CEEqTAITSJIAqUS6X+fWvf83m
      5ia//e1vCYfDXLlyhXQ6DXzy09Pbt2/z0Ucf8cc//pFSqcTly5cpFAoVnvxgk6tAVWJqagpd
      15mfn+fcuXM8ePCA+vr6nW/wfD5PPB6nVCqxvb3NzMwM5XKZcrlc4ckPNtkDVIl8Ps/KygrZ
      bJaxsTGsVitPnjwhFAqRSqXQNI18Pk+hUMBisZBKpXjy5AkbGxuVHv1Akz1AlXj55ZcZHBzE
      bDYTjUbxeDw0NzdjMpnY2Nigr6+PwcFBdF2nUCjg8XgYGRnBbDZXevQDTQKoEpFMmlK5DPkc
      WC1Es9sYXU50wGm3kQNy5U9/LcRk5Gk6BYBd13FZrRWb+6CTAKrEL+/e3vmmfhGvth/mUn9g
      DyZSg5wDCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKXJ
      b4N+TqFQ4De/+Q1vv/02iUSC8fFx2tra2Nzc5NVXX2VjY4Pp6WlqamqIxWI0NjaytbWFx+Nh
      eHh419+5TOwt2QN8jtFopKmpiUKhwOzsLEajkfv375NIJMjn8zQ1NVFbW0t3dzfxeJxYLIau
      63vyzsVi70kAn5PP5wkGgywsLFAqlZiensbr9aLrOpFIhEKhQDqdplwu43a7yeVyeDwe4vF4
      pUcXX6JYLPKrX/2Kra0tbt68ybvvvsv8/PzzHQKVSiVu377NqVOnuHXrFi0tLWxtbbG9vc2J
      EycIh8PMzs4SCASYmpripZdeYnp6Gr/fT39//16vbVdZLBYuXbqE2WzGbrdz5swZNE0jl8vx
      9OlTDAYDr732GgaDgddffx2LxUKxWCQQCMjhTxUzmUwMDAyg6zp1dXUYjUa6urqeL4BcLkcs
      FiMej+NwOFhaWmJkZIT3338fXddZXl6mXC4TDAbp6+vj5s2bJBIJ6uvr93pdu05PpbBubgKQ
      +4vbjUATUFxa+sxtJeDZt325uRmD3b4/g4oXksvl+Pjjj8nn88zPz9PT08Pc3NzzBVBTU0NN
      TQ0Gg4FsNkuxWOTOnTucPn0ag8FAT08PqVSKtbU1pqamMBgMfPe73+XGjRscO3Zsr9e2qzI3
      bxH7xS+/1rYN//av2A7YHk8VVquV73//+wCcPHly5/bnCiAWi1EqlYhGozgcDrq6uggGg8zM
      zGC32+no6CAUCjE4OMjExATDw8PMzMwwPDy8N6sR4gUl1uOsP3zyV7f/P/g6NvSc4xo8AAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Univariate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='comparative' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29+XOj933n+cJ93wcBguAB3n2w75Zabh2WZEmWbMWRN9pxOamKU0mmtnad
      3cmmamZnp3Yn/8BWZZ0qJzNbs3bJtak4cXxKkWS33d1SS63uZjev5n2ABECAAAgQ9/1gf2gR
      6vuQQIBk8/VTFxp4+PmS+DzP9/39XKJqtVpljz0eU8TNNmCPPZrJngPs8Viz5wB7PNbsOcAe
      jzV7DrDHY82eA+zxWCNttgEPgyAIXJq/RL6Ub5oNLrOLXmdv3a9bXF5GyGTqft3Pg0giQdHf
      X5dr+SNJ4qnG/L0sBhWtFt3n+mzdHKBarTAzNYVcY8LT4brl/0qFNNmSjFx6A4ejBYByIcP4
      zDKH9/cyOT1L3+B+pFTI5oto1Ko7rv+H3/tDFtYW6mXuI/MXX/0L/uY7f0MikUAQBEwmE2tr
      axQKBbLZLKFQiGPHjjE1NcXQ0BBKpZJQKEQ6nUahUJBIJNi3bx/Dw8McOnQIuVwOQPytH1GY
      uN60dd2MWKul7f/5L+TzeXK5HEqlksXFRQYGBrh69SoHDhxApVIxNjaGSCSipaWFVCqF1Wrl
      2rVrHD9+HK1WC8C/nJ/izPBSQ+z+2lN9/OlrRxgdHaWzsxOj0cjc3BwbGxsMDg4yPT3N4OAg
      4XAYi8WCVqtFLL6x+anjFkgEVIEq0xOjXB2+xvXZGZJrS0zPe5mYXiQWCTH8yTAFIBwKoVHJ
      iMfXiWykmBgZJhgM4g/4uXZthPXYOr9555dMLa7Wz8QvSLVa5cMPP2R2dhaA8fFxFhYW6Onp
      QaPRkEwm6e7u5uLFiwiCwNtvv02lUkGn07GyssKZM2eIx+MIgtDkldyfyclJpqenuXjxItVq
      lampKdrb2xkeHqZSqXDlyhVsNhtjY2P4fD4+/PBD5HI5arW6aTbncjna2tq4dOkSAJcuXcJq
      tZJKpZBKpbz33nusrKxw/vx5YrFY7XP1c4AqyGQyYrH12kuiSonFZT8Gsw25BNQ6I+4WKwJV
      1uMbVIo5NlIF2traMFmstFiNNz4nEpFNrGN0uikXC3Uz8YuyuLhIKpXC6/UCoFQqUavVlMtl
      crkcWq2Wq1evcvr0aQRBoKWlBb/fTz6fp1AosLGxwcmTJ7l69WpzF/IABgYGkEgkyGQyzGYz
      5XKZsbExnnzyScRiMX/8x3/M8PAwVquVpaUlTp8+TXt7O2NjY02zWSqVcuXKFU6fPg3At771
      LWZnZ0kmk5RKJU6dOkUwGEQqlTI9PV37nGgnpEIIgsD33v0e8Uy8aTY80fMEXz3yVYrFIsFg
      kGQyiUgkolAo0NHRgUKhIBKJ4PV6aW1tRSqVkkgkkEgkCILAxsYGQ0NDXL16lVOnTqHT3diz
      ps+fpxKONG1dNyOSy9F9/WtcuXKFSCTCvn37WFxcxO12s7KygsvlQiwWEwqF0Ov1yGQy8vk8
      ZrOZ+fl5nnrqKTQaDQCfTPpZDG40xO4+t4V2k5Rr167h8XjQ6/UsLS0hCAIymYx0Os2JEyeI
      RqPkcjmkUik9PT031rxTHOBmEayQKTjVd6rJVtWHm0WwYnAQkUjUZIvqwxcVwWa9EpdVX0eL
      7k6DToEEJsfGURosGLQqLEYdoXgah9VMOpNB++ldY5NyMU9ZJEMpk9Reu1kEt1na8H3fx/vv
      v4/FYkEqleL3+zl+/DgXLlzgjTfeoFqt8s4773D8+HHC4TC5XA6z2czY2BgnTpzA7XY3ZukP
      4GYR7P7/fsTw1atcv36db3/72/j9fqampmp34kKhwLFjx/j444/5+te/3mTL788XFcGvnOzm
      f/jGiTpadHcadgxayOdRGUXMTl+n09ODzx8gEo4il4moFrPkChVkKhWU8qhUapRGO1OXP8Q1
      cIz+TsddrymXy4lGo2g0GoaGhigUCpjNZuCGjhgYGKBQKDA4OMjFixfp6ekhGAzS2traqGU/
      MkePHiWdTiMWi6lWq4jFYkqlEh6Ph3K5zPXr12vbpz2+OA0NhFWrVew2KyDC3upGp1Hc/g5A
      jETyYBFcrVaRy+UkEgnK5TKXLl2iWCwyMjKC1+slGo1y9epVJiYmGBsbY3R0lLW1NXQ6HRKJ
      5K7X3A5MTk4yODhIPB6v2ZlIJFhcXKSjowORSMTY2BjlcrnJlu4OtpUGCK2FcLTcebe/XQTr
      VXr+8mt/ec/rJBIJRCIRev3W7yG/KDeLYP0336hpAJ/Pt222aZ+HLyqCe1wmTgy4HvzGL8i2
      coB7sZtFsJDJIL5NA+0GNkVwm02HSXdnYHO70DAH8C7Okc8XsTjb0UorFEVKDFrlLe/JZDKo
      NRpuPwcRBIG+/7nvDhG8G8hPTqLct6/ZZtSd//snn3BmeIm/+OZJBp1KhoeHOXbsGE6ns3Y4
      MT09TS6Xw2KxAKBSqdi/f39DT8IaJoJzuRxiiYx8doNLw8PYXJ0YTGZE5QKFXJJcWYpBr0Yp
      rpLMZFHKJaQKYLY7aW8xN8rMPbaAlZUVXnrpJUZGRmhtba0dTsTjcTY2NiiVSmxsbCCRSJDL
      5fT19TXMtoaJYLFchV6jRKgItLR20OFuJRENEU9m0Bmt2D+NAt8QwiASS/B4umH779D2eABG
      o5F3330XnU5HOByuHU54PB7MZjMvv/wy/f39qFQqUqlUQ23bMRrgUUTwTqIciSC12ZptRt3Z
      FMFPDLrwtJqabc492TEOsCmCWwwtDLYNNtukulFcXoZqFXlnZ7NNqSuPGglWyCT0uS1baNHd
      aWg9gFApsjC3QE6QMLTvzn3e5jHo/SLB33762/y3f/vf+Oijj1AoFPT19XHhwgUcDgfhcJiv
      fOUrFAoFLl++jNlsJhwOYzQaOXDgAG+//TZvvvlmI5f8QOJv/QjKZVr+8//JysoKc3NzvPDC
      C4yMjODz+Th58iSjo6P09/dz/fp1WltbOXz4cLPNfiCPGglutej4/v/62hZadHca6gBiiRyN
      WonD5uLqxfOk0GFSlElmCigUavQGFdG1IGqVGsV9IsGbqbeJRKIWGY3H42SzWYLBIB0dHVSr
      VaLRKG63m3g8zrVr12pR4u1IpVLB6/XWgl+ZTIbDhw/zy1/+ku7ububn56lUKszNze0IB9gp
      NDQSXMjEmFkKsLEepiRSoJKJMZhttNjttNosIBJRrYoQPyASnM1mSafTZDIZxGIx4+PjuN1u
      FAoFKpWKYDCIWCymUqkwNTVFOp1GKpVy/fp1stlsI5f80JRKJQRB4Pr160SjUcrlMh9//DFH
      jhyppVprNBra29ubbequYsdogE0RPNQ+xBtPvHHP9wYCARwOx7ZOd7iZ9PnzIAhon3uu9tpO
      jwLDo0eCdSo5X3uqccefm+wYB9jNIljIZJB3dOyqiHC9aoIHO6xIJVu3UWlaUXxoLUS5kKfF
      1YFM8uDI380i+Eff/VEDLGwMm+nQ9v/0H1EeONBsc+pGvWqCf/gfv0E05CcQCPDss8+STCa5
      ePEihw4d4qOPPmJwcBCv10t3dzfVavWRg2jNcwD/EgpDK6nxy8wsh/D09CKu5JHK1BhMegpl
      gfmxq/dNh97j8aCnpwe/3w/AxMQEgiAQCARQKpVEIhGSySRnz57FYDDgcrlqVWkPQ9P6Ahmt
      TqTlDBWJkn379qNWq+n2tGMyt+BdWMIgF7ZdTfAezWF6epqRkRFWV1ex2WwUCgXS6TRKpZJk
      Mslzzz3H0NAQuVyOYrH4SNfedhqglEsTiCbpdH9WtPIoIninsZkOrXnmaaR2e7PNqRv1qgn+
      /acHUMq3bqOy7Rzgbux2ESy1WneVAIaHE8FmnRKXrbk1G1uqAWamximVBLoGDqKRi6mU8qSy
      ZYwG7SNf616RYIlEQiwWw+FwEAgEePHFF1EoFJw7d462tjamp6c5fvw4Pp+Pubk5vvnNb9aa
      Um0H4m/9CMM3fo+wXs/U1BQHDhzAbDbz61//GofDUYtbGAwGAoEAr7zyClLp9m/o9zAi+CvH
      PfxPb5xskEV3Z0t/k4V8nmJRIOhfopDNAgKxZBmTWgC1FaW4THwthLHFhUpe5crV6wztGyBV
      zGO22Ji5duW+keDNRlSLi4vodDoOHjxIOBxGqVRSqVQoFosMDAxQLBY5evQo2Wx2W335b8bt
      djM/P49CcaNMNJFIoFarUavVVKtVstksQ0NDBIPBHR8j2E5suQiWy8Xk8mWqgNZgRikXY2tp
      ZT0SRlwuYG5tIxpPkkqkaHMYKQkKPB4P2XjogZHgXC5HMBgEqOX/SCQSMpkMiUSChYUFrl69
      yvj4eK3Wdrvy7rvvks/nEQSB5eVltFotxWKRcDhMNBqlVCpx8eLFWvHIHvVhx2iA3RwJVg4M
      1ARwKBTCbDZv2yfVw/IwIri71cTJwa2v+70fO8YBNkVwf2s/TpOz2SbVjd1eEwwgl4rpb7c2
      2aK7s6UOkFxbIVRU4lQWWUnC/u62O99UFchk8+TzWQw6LWVkKOW33r1vrgn+r//2v/KnL/zp
      VpnccHZ7TTCA3aThv/zV1zh79iwikYhnn32WlZUVJicn6e7uxufzoVKpCIfDDA0NodVqsTfo
      SHhLRXClLJDNpYkUy8gEKZc/OktBZqTFoAVRhXI+j95iJZlIEwr66e/pIFOWoNYZSYdD+EOr
      HD15CoNG+cCftcf2plKp1AS9IAjYbDbi8TgGg4Hl5WXS6TSJRIJz587hdDp56aWXai3Mt5It
      P08zyCFbkiEpFxEkSuRSEZlkjEwZ2hwtuBw2MtkyZqMOECGRSlldWUIuVdNqM7IWjmHo2r6d
      3PZ4OCQSCaFQCJFIxPr6OolEAqPRyOzsbE2vnTx5kvX1dYLBIIIgNMQBdowG2BTBrx97naOe
      o802qW7s9ppgAI1Sxutfqs/kmXqzYxxgUwSf7DmJWtG8QQz1ZjMdWqxW76q64MduRNLDkktG
      mA9m6HGoyYgNWHW39we9f3fo2b+ZpZqqMj8/T2dnJysrK5hMJrLZLEqlklOnTnHx4kWSyST7
      9++vDXa4cOECg4ODdHd3N3K5D2QzHVoxMEDLf/4/OHv2LHa7nX379vHJJ5+wtraGx+MhEAjg
      8Xi4dOkSb775JjKZrNmm35dGj0j69vMDXLx4Eb1ez/Hjxzlz5gx6vR6TycTMzAxWq5VMJoPD
      4aC/v7+27Wq4A4TCCZQSKJcKxJNB/EspxGIpweU5NHY3qkoBq82EVH/vmuCuri68Xi8dHR2k
      02kOHDiA3++vpQ1UKhWcTic6nQ6VSsXKygrPPvssY2Nj284BbqZYLDIzM0OlUmFwcJBUKkUy
      mSSbzZLNZikWi3g8nm0/YqkZqNVqHA5H7Xez2Tm8t7eXCxcuoNFoCAQCBINBcrkcx44dAxre
      HbpCfCNGIb3BWixL9VNjq4KAtcVFd0cbVocLo05135rgn/3sZ4hEIsrlMqVSiXw+z5kzZ1Aq
      lUSjUVKpFHNzc0QiEUZGRqhWq7X/387IZDIMBgO5XI719XWKxWLtD6fT6YjFYly9epXJyclm
      m7rtCAQCXLhwAaVSSTgcRiaTkUwm8fv9mEwmOjo66O3txW6339J8q6kaoFzIMr/kRW920mq/
      d/Okm0Xwd1/5Lhbd3dMBKpUKoVAIl6u50cVHYTMdWmK1on3u2drrO70uuNEjko71fb7g6J4I
      bjKPczr07Qy0W5BJG5vC0lgNUCkyPD5Df7uVvFiPRq1AdZdihweJ4K0YWN0sNtOhd1M9MHw+
      Efz//offIx5Zxefz8dxzz5HJZHj77bd5/fXXOXPmDAaDgUwmQ1dXF0Bdmug21gGqVRQSAX8o
      jFyVJx4TkUk/ugjeY/eymRoBoNFocDqdVKvV2tCTTCbDuXPnMBgMtLa21gZzf14afgqkNduJ
      ea8jV+nvEMGt7W0Us3mM6irhbTgneI+tZ2ZmhpGREfr6+pBIJFy7dg2FQoFcLqdUKvHcc8+x
      uLjI9PQ0hULhCzvArhLBO5Hb06F3C59HBH/jdD8qRWPjG3siuMnsNcZ6dCx6Fa3W+kzK3LIt
      UCYZx7u0hNrqosVsQq36rMDj9mF4odAaDkfLfa93t0jw4OAgc3NzHDlyhNHRUTweDx6Ph9HR
      Ufx+P/39/SwvLzMwMMDw8DDHjx/fdiNSb26MNfdpQ9+TJ2/UyV6+fJl8Po/JZCIej9PW1sbo
      6Civv/76th+VupWR4Nee7OXPXz9Wl2ttmQOodQbkKh1OkxS/f5V4bI1CpYrBZIZCEr8vhNOm
      4dK1WQb29RCLhBCqIhRKBcWqBEk5x+z8Ap0DhznQe2tD2M1I8MTEBAqFgmvXrhGPx1GpVHg8
      Hrq7u1lbW2NsbAyNRkM0GkUulxOLxbadA9yMTCYjn8+TSqVwOBy12cAAS0tLvPzyy6yvr2/7
      L/9OYssiwYHFKeLpHIlUFhDhcndgtzvQqRUgEiGWSIgn0rhsBspVEdUqWFtaWIulKCXWMFgs
      uDq6cTnurCTajAS3t7dTKBRQKpWIxWJyuRzRaJQf//jHqFQqnE5nLVIskUhIJBJbtdy6IJPJ
      EASBWCxWmw3c1dXF6uoqlUqFQCCwrR14J7JjNMBujwTf3BgrFAphsVi2fcLb/djKSHBfm5lj
      /fW5EewYB7g0f4kq1V0zH3iT4vIysvb2ho4GbQQPK4KbNRppk7ppgKnRq7TvO8zKxCe0Dp7C
      8MC8M4G1UJQWh51MJo1Gc//z3D/83h+SL+Xx/52/XiZvC+Jv/Qj7//YfYId0sXhYHlYEOy1a
      vv+Xr/G73/0OiUTCM888w9jYGCsrKxw/fpzx8XE8Hg/j4+McOnQInU6HrY4FRHVzAIVWQzjg
      J5/LEvAt4yukUGt1BJeX6BoYZOTSRbr37SOxtkFRJGA2myimEvhDa+jVCuQSWI9FkSmMtHW6
      CPqWmZ9fvKsI3mN3UalU0Gg0tXrheDyOIAj86le/wuVy4fV6SSaTnD9/HqfTyVe+8pW6lUvW
      TQSLpUqSET9G+2dZecV8hpJYTn5jHWdHF8VijvaOTmwtTjRKKSJA/Omdr1KuQLWKRCpmaXGR
      ssA9RfAeuwuJREIwGCQSibC+vl7L9XniiSdqKeHHjx+np6eHVCpFPXft20oDpNZXqahbMKru
      bIvyvXe/R0Wo7Jr5wJukz59Hc/o0ogYUgDeShxXBzRqNtMm2coB7sSmC223ttJp21zHg3pzg
      L8YXHaHUsGS466PX8PQPEttI4nLcmfeSzmRIp1P3nRP877/x73nz+Jv85je/4ZVXXrkjUvrS
      Sy/h8/mYnJykt7eXxcVFDh48SKFQYGlpiS9/+cuNWu5Dc685wUtLSywtLdHf38+1a9c4ePAg
      CwsLqNVqnnzyyWab/UAaVRP8o//0+6wszbO4uMiLL75ILpfj2rVrmEwmVldXMZvNbGxs0NfX
      R7Vapbf31lT6hjmASqchsLJCVSbnwtn3kZtdiHNZsqUCKq0evUaJuFph4gFzgg0GAxaLBY1G
      Q3d3N8ViEaPRyOjoKCKRCLfbzeLiIktLSxSLRXw+H6VSadsfM94+J7izs5Pl5WW8Xi+vvvoq
      Fy9eRK1Wb9sxr81kM4VaIpFgNBopFApUKhUSiQRSqZRUKsVvf/tbjEYjbW1tqFSq2mcbtvEU
      SxQoxSXSmTRSlQUpJawtrdhbWrCZbgxJED3EnODNOt+VlRUWFhbo6uriH//xH1Gr1ayvr/Pe
      e++RzWZpa2ujVCqRTCYpl8tMT09v62Ly2+cEz83NMTIyglQq5Z133kGpVJLJZMjlcs02ddvx
      z//8z8jlcjY2NlhdXUWpVOLz+VAqlZRKJZ599lmGhobIZrOUSqVbPrtjNMD33v0epwdOc8xz
      7ySonVhHuzcn+IvxxjMDKGSffyOzYxxgN4tgsUq16+oBtlIE13N2cEMrwvx+H22tTnzBKG7X
      vcsci7k06SKYbxqltCmC/+yFP2uEqQ0j/taPUPT1YXzzD5ptSl3ZShH81v/+++g1dzZU+zw0
      1AFyuRtjkjLJBKPhIEWRFIO0xFwoTbfDSC5XwGCzktnYwGB3cPXC7/ZqgvfYUhoafVFKxVyf
      mkGmVCHAjdkA+RIGrRKV1kB7q41iuYxIJL5vY6w99qgXDX0CuLtunMFWhQpLlTzI1Hg6bh2a
      cbe8QEEQ+O5Xv8vRrt3TFXoTzTNPI92Fc7+eGHRhM25NiadCVr/EwT0R3GR2a3v0vTnB96GQ
      2WDOG8RksSIRVW6pD74X94sEb3YBHhwcZHx8nJWVFQYGBvB6vVitVgwGw7aNBGfOncfw332T
      f/3Xf+Xw4cM4nU4EQeCtt97ia1/7GsPDwxw+fJjx8XE0Gs2OiALDw88J/tNXhzhz5gxut5uh
      oSHOnj1LLpfD4XAQj8dpaWlhdXUVt9tNd3d33YuEmuIAgUCYzg4XoWiCXCLMij9EZ4uOj648
      eE7w3SLBFouFpaUbv+x0Ok06nUapVFKtVslkMqTT6W0fCd63bx/5/I075uXLl7Hb7Vy5cqVW
      y+x2u3dlECwYDHLkyJHa32+zG7bL5SKXy7G2tkYwGCQcDpNMJmsNA+pFU1IQLSYtC0t+0uk0
      OqMVu9XEevzh5gTfLRJ87do1xsbGCIfD5HI5tFoty8vLiMViYrHYto8EV6tVrly5wtjYGNFo
      FIVCwczMDFqtllwux+rqKu+9915tiPZuwmQycfHiRQRBIBwOUywWP80IqFIqlejt7aW/v5+W
      lpZbujrXix2jAXZrJPj2KZE7cQ13Y29OcB0RBIER78iumg22yeMsgm/Gbddj1DZ+fkPDNEBi
      zctSJI/FbMHdev8/+N0iwf/uh/+Oc399bqvNbDibIni38aiR4L9880mePdy5dQbdg4Y5QKmQ
      o1wVUynlmJubIxRex+W0U85u7EWC92gaDXMAkViMyaCnQpXshh9Xi41MRUr5pkiwzVQlkivt
      RYL3aBgNcwBLW/9nUd72m4NZt3Z8uFck+I+f/eOtMazJKPYNNtuELeFRI8EdDuMWWnNvmhIH
      +Dwc6jzUbBO2BPGn7UC2e5ziUXHZ9KiV8ge/8VNS2SLji+FbXmuEMN46B6hWWZybAYX2jnyf
      z8OmCL548SI6nQ6ZTMbc3BydnZ14vV6efPJJzGYz7777LkeOHGFtbQ2/34/H42F6eppjx47R
      3r79+gttNsaamp0lHo/z1FNPMT8/z+zsLD09PayurlIoFDh+/DgXLlzg9ddfb7bJD0U90qH/
      6t88xT6Xhg8++IBvfOMbVKtVfvaznzE4OFj7vZhMJuRyOXK5nP379z/yjWTLHEAoF6hIlfR2
      tDF//RrTq0n62sysRzZQGdUopGpm52bo6eslkwWtUqBYLKFQqSkX8yjlElIFMNudtLeYa9cd
      HBxkYWGB3t7eWg2tWCxmY2MDi8XCwMAAhUIBu93O2NgYL7/8MtFodNv3Cx0cHOTs2bMAxGIx
      1Go1S0tLDA4OUiqVmJiYQK9vbt5MM7BYLBiNN7ZHlUqlNgo3mUxSKBSQSqUEg0FkMhkqleqR
      50BvWSRYJJWRT8ZZXPaTzt0Qugq1jrYWB+2dboQKeHoHsJr0dHo8SG+zRCSW4PF0w01himq1
      ysjICKOjo/zLv/wLIpEIqVSKWCwmHo8TjUYZHh5mfHwcv9+PXC4nFAqh1WprxebblfHxcUZG
      RgiFQnR2dlIoFOjp6WFxcZHOzk5EIhFjY2O1dumPC6FQiJGREZaXl4lGoyiVSjY2Nmq1vU89
      9RQDAwPIZLLPFSneMYGwH579Id95/jv3fM9m63ODwdAos+rC7Y2xfD4fbW1tO14T1KMm+KkD
      bjpatvbvuWMcwBvx4mnxNNuUuvO4d4d+GJRyCb1tW1Mz0YRToCqjw8MMHjmO/B4bsMxGmILU
      iFn72SnCD8/+kL/+7/+6QTY2jse9O/TD4Lbr+dv/5dW6XOt2Gu4ApWwStU5HaC3Kun8JFGq0
      8irr4SQml5ViJotapURplPGb8+/tRYL32FIa7gCrq0FKVRG5WASzzQGiCvlM6lOt+9lubC8S
      vEcjaLgDdPQM3PFaOOinKMjo6e7nbhsBQRB4dv+zW29cE9A88zTssv0/1Lcm2FCnFih3Y08E
      N5m9dOi706j06NoTwOddIJMvYrQ4cdgePS9jfX0dk0FHvixCrbxRt7m8OEcuX8LsdGM33X20
      5+bM4OxGmAxqtEo5qruE0H949of81at/xQcffIDdbmdjYwORSMTzzz9f6wjd1dWF3+/HYDAQ
      DofRarU888wzj7yWRvIwNcH79+9neHgYp9PJiRMnmm3yQ/FFRfBf/ZtT7HNpa1FggIWFBQKB
      AOVyuS5RYLjJAbIlgYGBAebnZzlz5RxifStmJSRzBWRKDXa9kkw2i1ilQ4IEhCwqnZU17zQl
      uZ5SeoN9g90kMpBKp+jt6yObyyGRyChkN3j7gzNY27qQVEpIlWrUSilVRIiFIpHQKnqdnoq0
      QDJaJplO0dPXf2Ok6k1sNjedmZlBpVIRj8epVCrYbDbi8TiHDt3IFyoWiyQSibpOEtlq7lcT
      vLa2RjKZRLOLJsk/DDdHgQuFAmtrawiCULcoMNysAcoFZmZmUag1mKwO7G0dVAo5VMUicoUc
      obDZlluESCRCptbhdpgJ+VQo5FL0FiMg4oaQveGJYrkKvVJKoSLQ0tqO2+1kZcmLVColn0kS
      y5Rx2/Q3HEEsonLT9SvFPBlRBari2hPBbDZjMBiw2+3IZDKUSiWJRIJ4PI7RaGR+fh6RSEQ4
      HEYqlVIsFj/v776hbNYES6VSdDpdrSb4xIkTJBIJMpkMWq12x6ynXmxGgbu6uhCLxRSLRWZn
      Z2tO8dRTT3H9+nVWVlZIJpOf62c0VgMIZULRBA77owU1BEHg7ORZnj/w/B3/t9NraB/nmuD7
      8dSBNjpatj5Fek8EN5ni8jJSqxXxLtveNGpE0r1QKaT0uMwPfF9jj0ErRa6MT3Ps4ACXhsd5
      4uSNDg+rPj8t7rY7jkCFcpFCGRRy6a6OBBu+8XsoDxxotil1pVEjku6Fp9XE/10xd1QAABzO
      SURBVPU/vsRHH31ELpfjhRde4Pr16ywtLfHkk09y7tw5nn/++QY7QLUKxRyB1RDIFPgXp7g8
      scKBAQ+J9SAffPAJ3T39yGVQEcuQVisotBbaHA/25D32uB2RSITFYmFychK4kTB5/Phxkskk
      NpuNTCbT+MZYZnsLXn8Is0bORiqL06ijBESiMTraW9Ho9UQTebLrISzW3dc0do/GIQgCa2tr
      lMtlwuEw1WqVDz/8EJFIxMjICJVKZedogHuJ4J1O+vx5lAMDu25CTKNGJN0Lk07JKyd7Hvi+
      HVMTvJuRWK3NNmHHcfqgG7f9i9cKNK4vUD7J6Pg8zvZ21JIKyHVIKlnSRbDolESTORwWHcv+
      IC6ng9XgGnaLjvV0lTaHmXPXz3HEdYRf//rXtTPxSqXCG2+8wfDwMD6fj87OTubn5zlx4gTD
      w8PodDpeeumlRi3xc5E5/wGaL32JqakplpaWePXVV7l69SqhUAiLxUI2myUcDuN2uxGLxTum
      O/QnU4EtFcEdLYad5QBSuQaDTkk2lWB5LYRCY0CjlCCTK5jyL1IqC2xsmHEYFfhCUVKxCLlC
      Hq3+s7ujRCKhWq0ilUqRSqX4/X4qlQqFQoHnn3+eqakpLBYL4+PjDAwMsLHRvEfwozI4OMja
      2hoAarUatVpNIpHA6XQyNDSESqViYmKiyVbuPhomgoVKkUpVjEgixWTUY7fbMJpMaDRqLGYz
      Rosdo0bBin+VYqGEQqlCpVSiVHzWD75araLT6dBqtZjNZvr7+/F6vdhsNs6fP09LSwuVSoWO
      jg78fj9S6c7Z4Y2Pj+P1epmamsJsNlMoFDh69CiVSgWz2cy1a9dYWlraUekdO4FtJYITsTDB
      SILu3h5k4s8Sm+4XCEun02i12jte3yncXhKZTqfRaDQ7vkRyqwNh7S16DJovni26rW6RBrMd
      g/nupyH3coCd/OUHEKvVt3zZd/p6NglEkg91CtTsFul1c4Cgb4l4uoC73c21S5+w7+BB5heX
      GTq4j+h6gvY2J8V8hqmxcWwdHQgVKBbKuNpaqZQKpBMxVAYb+WwSjUpJsVQlk9rA6nQhE4s4
      d/3crjwG3a31AA8rgr9y3EOfU8Nvf/tbbDYbp0+f5pe//CX5fJ7XXnuNv/u7v+Ppp59mZWWF
      9vZ2jhw5UtcxSXXTAKlskX2DA6TCQQ4eP876+gYWmw3v7DTR4DLxbJllXwCXswWt2YndqAIq
      rHgX8a8skyqICax4icfjzM/PU8nHWQlG8C6v1svEPbYpsViMU6dOIRaLEYlEaDQastksP/nJ
      TxCLxbekwZ87V98W+XV7ArRYDFyfmsZm1BNY8WG1O4iGAugNRsRFAY1cTEoqJrSewOMEkViK
      WmtgI7SMq2cA38IcCp0JuaSKXq9Hp1ejUaWwWk31MnGPbUpraytnzpyhvb2dcDiM1WpFKpXy
      zDPPMDk5SW9vL7Ozs+Tz+bofAmwrEXwvdnM2qJDJ7LpMUHh4EdzsUanbSgQ/jhSXl2+pB9gt
      PKwIflgMGgWvPtlbt+tt0hAHmJ+dpFKV0trmIhpZx263IqECEgVCpcRaKIzVrGN8dpmedjca
      vY7YehSb1UyuCAadCm/Ei7Ki5NKlSxgMBlZXV3niiSfo6elhYmKC1dVVNBoNa2trDA0N8dvf
      /pY/+ZM/2faxgMLkFMp9+/jpT3/KoUOH8Hg8ZDIZ/vZv/5bvfOc7jI2N1fqaRiIR3nzzzSZb
      /HDUOxLstut3rgMAIBKRXo+QzhUQB4OkSyXE5QJqvYVEIkZRqGKx2cknEmQySTRGI4HVADKV
      GYNOBdzYK1qtVo4dO8bly5eZn5+np6enFvXVaDTI5XJSqRSDgztr8MTRo0drY1x/8pOfIJfL
      qVarVCoVTp48idfrZWhoqMlW7j4aEglWKpRQrSJTa5BUS+gsFkBGRRBhUEmQKZUolEqK6QRi
      uQK1RotWo0atUt0SCS6VShiNxtoMWZPJxPz8PNevX8fr9aLVapFKpTidTpaWllhYWGjE8r4w
      1WqV8fFx5ubmmJub44/+6I/48pe/jM/nQyKRkM1mEQQBi2UvPbze7BgRvJHZwKy7tTBmMw9I
      rVY3ybIvzu1xgJ0e2d6k3pHgrWqQu703yDexkb3TASQSyY7+8sOdDrAbvvxQfxEMcGUmWHcx
      XFcHuHrxPJ0Hn2T+8m/oPPoC6WiQjs4OQoElUjkxRo0YlcGGuJxhI1vBpJGRyFUwa+WspwrY
      jWoiG1mUkgqCTINWISFfLGPQ63btMeimCN5tbFU6dHuLgVef7OWjjz5idXWVb37zm1y8eJFA
      IIDD4SCRSFAqlUgkEuzfvx+Px4PZfO+S2rpqAFOLi9jqEnKVjlwqQTIRYXzkGmKtDYVURHwj
      yfTMJKvhJLl0nI14nMXpGQLhNXK5HEsrAWxWExsbG8zOTLM4P49KvfvOyPf44hgMBnp7exGJ
      RAiCwDPPPEMikaBQKGAwGFAqlYyPj3P27Nna4cLdqKsDqFRaqqUirR0dVMolFEo1eoOB6Kqf
      qkiEUBXQaHSIhTzReIpSuYxWo0Gr1VHI59Go5KyG1iiXBDQaDRa7A6V8x+zS9mgQgiAwOjpK
      qVQiHA5jNBr55JNP6OzsRKfTYbPZGBoa4tSpU+j1+vtm1jZBBFcJLC9RFqvocDsf6hP3EsG7
      gd2aDLdV6dD1FsNNuL2KcHU8+l7+biJ4j+3L/UTwk/tcdDm3R45X3R2gKpQZHxvDYHWilUNV
      piG+5kdttNFi1hJYi9PubmVhbo6uLjdLvjA6hRid2U45nwapkrBvCYXJjriUq6VDeyNeJHkJ
      k5OTnDx5kuvXr1MsFnnxxRcJh8P80z/9E6+88goXLlzg9OnTDA8PMzg4yIFt3nBq8wkwOjrK
      /Pw8+/btY2lpif7+fj788EOeffZZOjs7m23mI3M/Eewwa8hvhJidnWVwcBCPx8M777xDX18f
      s7Oz2O12MpkMgiCg1+s5efLklhUI1T0QVinl0BoddLgcbMQ3mJmeAakcIb3O+OwyBmWVYCRF
      i0nNzMwSGrWceW+AxcV55r2rxCNB7K0uMuv+O9KhFxYWkEgkfPDBB7X0h2q1ys9//nNKpRIt
      LS10dHSQTqcJh8P4fL56L29LyGaznD9/nlAoxMDAAGq1Go/HQ2dn54788j8MiUSCV155hXg8
      TiqVIh6PMzMzQ1dXF8vLy7V5wHNzc1y9enXL7Kj7E0Ai11DOrbDsr1KqVNBoNUiokMhXaTFp
      bjwBelrQylVkl8P0mw1E11TYbTaEqgRZNYffH0BnsFIUErekQx84cIDLly+zf/9+XnvtNWZm
      ZlhYWODP/uzPao2O3G43Ho+Htra2zzU3thmo1Wq++93vMjIywsTEBF6vl0OHDtHa2tps07YM
      t9vN+++/X6t7bmlpQaPRkMvl0Ol0HD9+HLPZTCAQ2NLRt3uR4CbzOKZDt9l0mD7N72o2O+aM
      cbdGgoVsdlc6wP1E8MRS+KGu0YhB2VviAMMfn6dr6BTzl39N17EXSUUCtLW1IiBGKJeolAo3
      ytzKJdaiOXo9LaRyFcx6NdFoDKtZR1GkJB4O4nS310TwbowE79Zj0HpEgtts+p3pAOYWF7HV
      ReQqHYVMkmQiznR6A6O9k8JGmFS+iNsiR6K0YLcbSMZjLHmDJF02bAY1q8EIMq2BVCJOqiRm
      f8/OHxixx/ZkS9KhVerPIsJCqYRcqUSr0xNf81GVyGhtbUWuUKNUqkjEwxQ+jQhr9AY0ai0q
      lQqxUEIkV6JW3Dkwb4896sWOFsG7gcdRBD8sjRiVuqNF8G5gt4pgmVTCQc/2b/neMAcoF3Jc
      HR1FLFOxr78XqQjKiMnlsqiUn3p5tUI0lqSttYXF2WkkWj1GvaVWE1xJVpicnORLX/oSk5OT
      tUjwr371KywWC0eOHOH73/8+b7zxBuPj4xw7dgyn8+HyjZrFbhXB4XgGu1HNL37xCwBef/11
      rly5gt/vZ//+/fh8PpLJJKlUiv7+fjo7O2lpaWm4nQ0fkSSWSAn4AuhkVWKFKrZWF4GAjyoi
      RIKAQS1lYm6ZztY2otEwqUyuVhNssVhQqVRcvHiRlZWVWvGIx+NhfHyc5eVlRCIRly5dQqlU
      Mjs7u+0dYDdTqVRwOBy1fxeLxVqpZ7VaxWQyUalUaiWt3/zmNxvexKBhP00kFqNQKJDK5cil
      VYKxJBanG5NBS3y1SLIAbocNtQIMVD6NButR3FQTvDlIenBwkJdffpmZmRnm5+fJZrNotVpe
      eukl5ufnsVgsXLp06b6FEHtsPRKJhFwuB0A8HsdqtfLBBx9w4MABIpEIer0el8tFtVplcXER
      sbjhE7t2tgjeiwRvX9K5IlrV9j/B29EieC8SvH25vhS+JRL8+lN9aLahQ2yZA0xNjCKWqens
      aie0to7NYkSpkFMoloiEI5SFElKJgrY2J35/AKNWRjxdRRCLUInL6C0O4uFVjLZWVHLJro8E
      bzbGisfjXLhwga9//etMTU3R3d1Nf39/s818ZG6PBL9wtOvxcgC7zYY/FGFqcvLGwOtcBpFI
      RK5YxuPpZHXFi9EgYWRskqpQJJNRotaYyKeiBDdy6GJJhEoJhc6MSr777pC3s9kY69ChQ+Ry
      OWw2Wy09eI+tY8scoFAsIpWI0eqM5ApF2js6mJiYoL+rDZ/Ph05nRK2WYrPKSCRTWC0GKlUZ
      EomJcgnsLS2kN6IU8gXQ724H2GyMJZfLa6ORLl26hEKhIJvNIpdvvzvnbqFhIjiX2iBdlmAz
      6R75s3uR4J3H7ZHgfrcFuUzSRIvuTsNEsEpn5ItkgO9FgncWt6dD35wC/fqX+tAot8dTrSmn
      QPE1P/71NFarDYWoREWiIhFeRWWw0GLRE1iL0dpiIrQWxe5oRSa5kQ7daevkBz/4AUNDQwQC
      AbRaLS+88ALvvfce6XQau91OoVDg0KFD/PSnP90R3aF3ayT4funQLx7r4sonHxONRnn55ZfJ
      ZDJcuXKFw4cPs7i4yPr6OuVyGbvdjsViYf/+/VtmZ+MjD0AkkcXjdhCLx2q1oEhkiPJxRmeW
      MChhZnoaqULNajha+9xHH31ENpslEokgl8uJxWLAjXaC/f39tcHSO7E79OOGVCrl2LFjJBIJ
      lpeXgRs13waDAalUil6vZ3FxkcuXLxOJRLbMjqY4gNthYXFlFblcRrksoNGokYoqxDICTrMW
      /1oMi9WKTqtBpVDUPnf69GneeOMNDh48iEqlYv/+/czPzyORSAgEAshkMqRSKdVqdUd1h34c
      0Wg0TE5OolAo6OjoqM2AjsViqNVqjh49yunTp2td3raKvUhwk3lcRPDN9LdbkEu3hyDeMQ4A
      NCVXZKvZtRpg0l/37tC9bWaO99e3U8YtCnFudpbe3h5m5hexGjQIUjVUigRWlnB29CIqZ1Eb
      bBTTMZZDMY4cHOCTCx8jUWo4dGiQ1WAUp9VEMBKltdVJpVxFEIoszi7g7PQQWwthtBgx6jSE
      okncLgfr4SASpY6JKxewe4YwyItcn1rk+JOn0NdhEvh2pxyJIDKb+Yd/+Ad0Oh2nTp3ixz/+
      Mc888wyRSISnnnoKlWp7dFB4FLaiO/SrT/Yw1GXlrbfe4lvf+hYqlYpf/OIXFItFOjs7SaVS
      aDQaAoEALpeLY8eOPfAQ5B7/WyUcSyKX5yhXKmh0Rqx6CR9dXEFnjKHV6DBqb2w7qkIZJDIW
      pqfIFQqkY0mc3S7m5qdRqx2U8jGUGj2RtQASJGzEY8TXY3R0eagUs6ynCgixBC1tXfR2OoEK
      yXTpsfjy34xEIkEsFvPTn/6UcrnM9evXsVqtLC4ubukpyE5DLpfXuv2JRCLUajWxWIy5uTkM
      BkMt7Xpubo5MJsPzz99/uPotDmA2aJicmsJsd0GlCNUqpXIJUaVIJFHAaFBjdTiIrwURKW7s
      W9s6e6iUcoilGsiVUFPF5/PjtDkI+ldRaDRU82nEKi0qhQxEVaQiAX9wDY/bgVBII1boUMk3
      tzciVCoV5UKOglCFqhjVNjkz3iqq1SparRaNRsOf//mfMzo6ikajYWFhAZNpe/TQ3C5ks1kW
      FhZQKpU4nU5sNhsKhQKr1YrX6+Xo0aOsrq6Sz+cfastcdw2Q2dhAbjRSv2H2u1sDPI4i+PNi
      0atotT56JsH9qHuUSGM01vuSu5rHJRIM2zMluiFh0lIuycfD0zxxuJsPrs5zfH8nhaocnVqB
      VCyiXKkQS2YpJ4PkpGbSUT/dAwfJJWO17tBw40nwgx/8gGeeeQafz0c+n+erX/1qLRJ8+PBh
      JicnsdvtxGIxxGIxL7/8ciOW+LnZtadAdxHBLxzt4sqlGxHgl156Ca1Wy49//GMOHjxIoVDA
      6/UiCAI2mw2z2dyQzt4NyhMQoVNKWAomaHWYicc38IXjtNmtVEViSqUiZq2MtCDB6XITruSR
      FmOsBCOkiyJ6u1zAZ5HgcDiMSqWio6MDuBEJdrlcKBQKFAoFhw4dYnR0lIMHDzZmeXs8NDdH
      gBcXF4lEIkxMTLC+vo5IJKKrq4vFxUUWFxex2+3Y7VvbWaIhDiASS3C524jEk+i1SvKpJBqN
      BqfdwHwwjVklJ7yRw9liZi0YQCaqkBNkaFSKW7pDnz59Go/HQyqVYmRkBIPBcEskOBqNIpVK
      yeVyKJXKHR0g261sRoBPnjxJX18fbW1tZDIZ2tvbGRkZoa2tjY2NDSYmJrY0ArxJUwNh0bVV
      1MYW1Ir7RwXvJYL3IsHbl7uJ4O2YEr0XCW4yu1YDPCAS/OS+NrqczT8waWqucFWoMDV6iY2K
      nkMDbhLpIi1WHcsrq7jcbYRXV3G0uZFszXScbcGmA5w/f5719XVkMhnJZJLu7m5CoRAnTpzY
      kYMyHhQJdpi128IBmnpLFYkldHR20t7ejs+/CvkYY9NLGLUypq9PoTCYWFpcbqaJDUOv19Pf
      349GoyGdTpPNZnnllVdYXV198If3+Nw0fU8hkcpRyCVoFFJi6TJ2o5oV3ypag5E1/wo6Q/Pv
      EltNpVJhfHycQqGAzWajp6cHl8vF+++/T19fX7PN29VsOw2QjEdZDcfw9PQil3x2/g+7UwM8
      TiL4Ztpseky65ud7bTsHuBu72QEeVxF8N57a30aHo7FP/IaL4M16YIvVhlF7I803k82g1WiI
      RqM4W10EAwGcra34fb7aiCSAaDRaG5mZSCTQ6/W8/PLLte7QVquVjz/+mEOHDtViAs8++2yj
      l/hI7FoH+Bzp0C6rDp1c4Oc//znf+c53qFQqfPjhhyQSCdxuN/F4HLhxQ9TpdHWZH9zwW+pm
      PXA8FiMQ8OEP+InH4wQDfjRqGRPDI6xFoywsr5BKxJld9Nc+azQaKRaL6HQ6BEFAIrlxpuzx
      eFhZWaGtrY2Ojg4OHDiAWCxmYGCg0cvb4wtiNptrzcAkEkmt3vvAgQMoFAp0Oh2RSIS5uTmu
      Xbv2hX9ewx3A7bCwuLyKXCGnWi6SzORRqVSotQY0ag1WuxWFQoVBJbtjRNJmCsRm/aharb6l
      O3Q2m8XtdrO8vEwqlap1Jt5j5xAKhfB6vSwvLxMIBJidnaVQKDA2NobX6+XAgQMcPnyYlpaW
      uswP3tEaYC8SvH35POnQjRiJdDs72gF2A7tWA+zEmuCtRCjlWAxE6O5ow+/z4Wh1EfD5cLnb
      CQb8mA0axmaXcZhMiJVS2lpdBP3+xyISjMnEhQsXWFpawul0kkgkcDqdRKNRTp48icvlaraZ
      j8xW1QTX2wEafksNe+cJra8zNzdLPJVlZX4OjdnEamgdi82OVFRBq1IyOTb62ESCpVIp3d3d
      nD59Gq1Wi8fjQS6Xo9Fo8Pv9D77AHp+bxjmASExiPUxJIkchV2G32VHJRCg0alaXfejNForp
      BBKlFq1GjdVmfWwiwXDjiLe7uxuJREI0GqW1tZVyuczQ0FCzTdvV7GmAJrMngh+eHVETvMej
      8TjVBNeTvjYzx+qgB7aFA1z88HccOPE01879moNfeo54JIJFJyVRkKLVaGpjUjcjwRqNhlKp
      RDab5dVXX2ViYoLV1VWcTifhcJhTp07x9ttvMzg42JC60i/Crj0F2gIRfDOvneplX7uJjz/+
      GEEQePHFFxkeHmZubo7XXnuNv//7v+fpp5+uNck6fvx4LXB6M9tiT2F3OAl651HpzaSTG8Qi
      AVYjKcrFPKnMZ8GszUiwyWRCrVbXJqcMDAygVqtZXFykVCrx9ttvEw6H8fl8zVrSHg1AqVQi
      k8lqM9RMJhNdXV288847SCQS8vl8rUnW+fPn73qNbfEEUOuMxCNh2tyt5MslVCoNSqUShVKB
      RPZZh6HNSHA2myWdTqNQKJifnyeTyeD1ejly5AjLy8ucPn0ahUJBKpVq4qr22GpCoRDhcBiH
      w0E4HObq1au0trbyB3/wB1y/fp3BwUGmpqbI5XJ3vfvDDhfBe5Hg7ctWiOCbqZcg3hZPgM/L
      3pzg7cu9RLDHaeSJfW1NsOjuNM0ByvkMV8cmEMtU7OttJ5kT0KtlRGNJzDoFVZmajdh6bUTS
      buX2OcE+nw+ZTEZbWxtjY2P09fXtyKqwe4ngF451MeDScebMGWw2G08//TS/+MUvsNvt5PN5
      YrEYSqWSTCZDR0cHR44cQSarZ6PNW2myCK4ilkiYmpxkeWGRFX8AJTmCkXWi4eAdI5J2M0eP
      HkUkErGyssLy8jI6nY50Oo1Wq222aXUnHo/zxBNP1La0Ho+H5eVlBEGgUqlgMBgol8vMzMxw
      7ty5LbWlaU8AkViCQi5HKpejVluoiFVo1XLUCiiKSkhlMrRaDaLs1u0jtws3zwnu7e1lfX2d
      cDiMxWKhVCo127y643A4OHPmDG63m3A4TC6XQ6fTodVqKRaLeDweDAYDhUKBSqWypbbsaBG8
      G3jcRLBJp6TNpm+CRXdnR4vg3cDjJoIfhW+cHkCl2NqvaFMcoFopMTY+jsnWikEppixRoZQI
      xJI5WltM92yMtRkJViqV+Hw+nnjiCXp6ehgdHWV6epoTJ05w8eJFvva1r3H58uW9muAmUo9I
      8Csne7bcAZqypygVMhgsLtodZlbXU0RCAfyBIKJcllnv8j0bY+n1ekQiEYODg7jdbubn54Eb
      daQul4uuri5aW1vR6XRUq9Udf0S6x9bTlCeATKWjkA6wEhKQCgXKYgVGvRYFVRCKrPhW0Zkd
      rPlXsNo/KwaZmpqiUqmQSqUolUqYTCbm5+eZmJjAarWytLSE1+vF4XAgFot3pWbYo75sOxH8
      KI2x9iLB25d6RIIH2q3IpFt7E9t2DnA3dvMp0K7VAHWsCTZoFLz6ZG9drnU7ddoCCVy7fIVK
      pYrnwEEMKhmFfJFcLsdGKk1ri41kJoteqyYaieFsbWHFF6C9o5NUaIHZcJHB7nbWIxHa2t2s
      +n0429ysBQKPRU2w1GZjdHSU+fl5tFotiUSCjo6OXd0d+lFw2/W8+mQv77//Pk6nk4MHD/K7
      3/2O9fV1Dh06xLlz53j11Vf59a9/zb59+/B4PFgsloe6dl1vqVWJmIg/QL6YwuddJhjLU8lu
      ML8SJLERZ9UfQKMSseJbIxlfZ8m/9uknRZTyaRIb60zNzBBPZAgszT02NcHZbJbz588TCoVq
      NcF73aHv5PDhw7WsTqlUiiAIGAwG+vr6UKlUqFQqJiYmOHv2bG3X8CDq9AQQoVQqqFRFaLUq
      lhb9aDUGrCYb5ZyUUiFPSSRBpZCh0SjYSCSQK1Uo5VKkMjX9fXbEmQhypQqFSkspn0Gm0t4h
      gncrarWa7373u4yMjJDP54lGo3R1dfH+++9v+2PcRrEZLc9kMlgsFpRKJXq9nng8ztLSEi6X
      q1Y/7fP5Hrpl4p4GaDJ7IvjBKOUSetsebkvzqPz/6eb4c3qSHCwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='correlation' width='192'>
      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
      YPC0HI8n8kYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='cum deaths' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='multi-variate' width='192'>
      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
      EN3/TxDi/wfUhnHx4ghNvAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
